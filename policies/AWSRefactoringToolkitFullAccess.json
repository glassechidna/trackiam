{
  "Arn": "arn:aws:iam::aws:policy/AWSRefactoringToolkitFullAccess",
  "CreateDate": "2022-10-25T16:41:15Z",
  "DefaultVersionId": "v6",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAZKAPJZG4BNNXRNIF7",
  "PolicyName": "AWSRefactoringToolkitFullAccess",
  "PolicyVersion": {
    "CreateDate": "2025-04-09T20:22:06Z",
    "Document": {
      "Statement": [
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringLike": {
              "iam:AWSServiceName": "ecs.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS"
        },
        {
          "Action": [
            "codebuild:CreateProject",
            "codebuild:UpdateProject"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:codebuild:*:*:project/*"
        },
        {
          "Action": [
            "ec2:AssociateRouteTable",
            "ec2:AttachInternetGateway",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateRoute",
            "ec2:CreateRouteTable",
            "ec2:CreateSubnet",
            "ec2:DeleteTags",
            "ec2:ModifySubnetAttribute",
            "ec2:ModifyVpcAttribute",
            "ec2:RevokeSecurityGroupIngress"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:AssociateRouteTable",
            "ec2:AttachInternetGateway",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateRoute",
            "ec2:CreateRouteTable",
            "ec2:CreateSubnet",
            "ec2:DeleteTags",
            "ec2:ModifySubnetAttribute",
            "ec2:ModifyVpcAttribute",
            "ec2:RevokeSecurityGroupIngress"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateInternetGateway",
            "ec2:CreateKeyPair",
            "ec2:CreateRoute",
            "ec2:CreateRouteTable",
            "ec2:CreateSubnet",
            "ec2:CreateVpc"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateInternetGateway",
            "ec2:CreateKeyPair",
            "ec2:CreateRoute",
            "ec2:CreateRouteTable",
            "ec2:CreateSubnet",
            "ec2:CreateVpc"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:CreateTags"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "application-transformation.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:security-group/*"
        },
        {
          "Action": [
            "ec2:CreateTags"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "application-transformation.amazonaws.com"
              ]
            },
            "Null": {
              "aws:RequestTag/application-transformation": "false"
            },
            "StringEquals": {
              "ec2:CreateAction": [
                "AuthorizeSecurityGroupIngress",
                "CreateInternetGateway",
                "CreateKeyPair",
                "CreateRoute",
                "CreateRouteTable",
                "CreateSubnet",
                "CreateVpc"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecr:BatchCheckLayerAvailability",
            "ecr:CompleteLayerUpload",
            "ecr:GetDownloadUrlForLayer",
            "ecr:InitiateLayerUpload",
            "ecr:PutImage",
            "ecr:UploadLayerPart"
          ],
          "Condition": {
            "Null": {
              "ecr:ResourceTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:*:ecr:*:*:repository/*"
        },
        {
          "Action": [
            "ecr:CreateRepository",
            "ecr:TagResource"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:*:ecr:*:*:repository/*"
        },
        {
          "Action": [
            "ecr:CreateRepository",
            "ecr:TagResource"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:*:ecr:*:*:repository/*"
        },
        {
          "Action": [
            "ecr:GetLifecyclePolicy",
            "ecr:GetRepositoryPolicy",
            "ecr:ListImages",
            "ecr:ListTagsForResource",
            "ecr:TagResource",
            "ecr:UntagResource"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:*:ecr:*:*:repository/*"
        },
        {
          "Action": [
            "ecr:GetLifecyclePolicy",
            "ecr:GetRepositoryPolicy",
            "ecr:ListImages",
            "ecr:ListTagsForResource",
            "ecr:TagResource",
            "ecr:UntagResource"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:*:ecr:*:*:repository/*"
        },
        {
          "Action": [
            "ecs:CreateCluster",
            "ecs:CreateService",
            "ecs:RegisterTaskDefinition",
            "ecs:TagResource"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:CreateCluster",
            "ecs:CreateService",
            "ecs:RegisterTaskDefinition",
            "ecs:TagResource"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:DescribeTaskDefinition"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:ExecuteCommand"
          ],
          "Condition": {
            "StringLike": {
              "ecs:container-name": "a2c-sidecar"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:ExecuteCommand"
          ],
          "Condition": {
            "StringLike": {
              "ecs:container-name": "application-transformation-sidecar"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:TagResource",
            "ecs:UntagResource",
            "ecs:UpdateService"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecs:TagResource",
            "ecs:UntagResource",
            "ecs:UpdateService"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "kms:CreateGrant"
          ],
          "Condition": {
            "Bool": {
              "kms:GrantIsForAWSResource": true
            },
            "ForAnyValue:StringLike": {
              "kms:ResourceAliases": "alias/application-transformation*"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:kms:*::*"
        },
        {
          "Action": [
            "kms:Decrypt",
            "kms:DescribeKey",
            "kms:Encrypt",
            "kms:GenerateDataKey"
          ],
          "Condition": {
            "ForAnyValue:StringLike": {
              "kms:ResourceAliases": "alias/application-transformation*"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:kms:*::*"
        },
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "a2c-generated"
              ]
            },
            "Null": {
              "aws:RequestTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/codebuild/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/container-logs/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/containerinsights/*:*"
          ]
        },
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "application-transformation"
              ]
            },
            "Null": {
              "aws:RequestTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/ecs/container-logs/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/containerinsights/*:*"
          ]
        },
        {
          "Action": [
            "logs:GetLogEvents"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/a2c-generated": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/codebuild/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/container-logs/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/containerinsights/*:*"
          ]
        },
        {
          "Action": [
            "logs:GetLogEvents"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/application-transformation": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/ecs/container-logs/*:*",
            "arn:aws:logs:*:*:log-group:/aws/ecs/containerinsights/*:*"
          ]
        },
        {
          "Action": [
            "s3:ListBucket"
          ],
          "Condition": {
            "StringLike": {
              "s3:prefix": [
                "application-transformation",
                "refactoringtoolkit"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::*"
        },
        {
          "Action": "iam:GetRole",
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS"
        },
        {
          "Action": [
            "a2c:GetContainerizationJobDetails",
            "a2c:GetDeploymentJobDetails",
            "a2c:StartContainerizationJob",
            "a2c:StartDeploymentJob"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "application-transformation:GetContainerization",
            "application-transformation:GetDeployment",
            "application-transformation:GetPortingCompatibilityAssessment",
            "application-transformation:GetPortingRecommendationAssessment",
            "application-transformation:PutLogData",
            "application-transformation:PutMetricData",
            "application-transformation:StartContainerization",
            "application-transformation:StartDeployment",
            "application-transformation:StartPortingCompatibilityAssessment",
            "application-transformation:StartPortingRecommendationAssessment"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "clouddirectory:ListDirectories",
            "cloudformation:DescribeStacks",
            "cloudformation:ListStacks",
            "codebuild:BatchGetBuilds",
            "codebuild:BatchGetProjects",
            "ds:DescribeDirectories",
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeImages",
            "ec2:DescribeInternetGateways",
            "ec2:DescribeKeyPairs",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeRegions",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "ecr:DescribeImages",
            "ecr:DescribeRepositories",
            "ecs:DescribeClusters",
            "ecs:DescribeServices",
            "ecs:DescribeTasks",
            "ecs:ListTagsForResource",
            "ecs:ListTasks",
            "iam:ListRoles",
            "s3:GetBucketLocation",
            "s3:GetBucketVersioning",
            "s3:ListAllMyBuckets",
            "secretsmanager:ListSecrets"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "cloudformation:CreateChangeSet",
            "cloudformation:CreateStack",
            "cloudformation:DescribeChangeSet",
            "cloudformation:DescribeStackEvents",
            "cloudformation:ExecuteChangeSet",
            "cloudformation:TagResource",
            "cloudformation:UntagResource",
            "cloudformation:UpdateStack"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:*:cloudformation:*:*:stack/a2c-app-*",
            "arn:*:cloudformation:*:*:stack/a2c-build-*",
            "arn:*:cloudformation:*:*:stack/application-transformation-app-*"
          ]
        },
        {
          "Action": [
            "codebuild:StartBuild"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:codebuild:*:*:project/*"
        },
        {
          "Action": [
            "ec2:CreateSecurityGroup"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ecr:GetAuthorizationToken"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "s3:DeleteObject",
            "s3:GetObject",
            "s3:PutObject"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*/a2c-generated*",
            "arn:aws:s3:::*/application-transformation*",
            "arn:aws:s3:::*/refactoringtoolkit*"
          ]
        },
        {
          "Action": [
            "s3:GetObject"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::aws.portingassistant.dotnet.datastore",
            "arn:aws:s3:::aws.portingassistant.dotnet.datastore/*"
          ]
        },
        {
          "Action": [
            "ssm:AddTagsToResource",
            "ssm:GetParameters",
            "ssm:PutParameter",
            "ssm:RemoveTagsFromResource"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:ssm:*:*:parameter/a2c-generated-check-ecs-slr-*"
        },
        {
          "Action": [
            "ssm:DescribeSessions",
            "ssmmessages:CreateControlChannel",
            "ssmmessages:CreateDataChannel",
            "ssmmessages:OpenControlChannel",
            "ssmmessages:OpenDataChannel"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v6"
  },
  "UpdateDate": "2025-04-09T20:22:06Z"
}
