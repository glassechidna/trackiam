{
  "Arn": "arn:aws:iam::aws:policy/AmazonDataZoneProjectDeploymentPermissionsBoundary",
  "CreateDate": "2023-03-21T02:54:30Z",
  "DefaultVersionId": "v2",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAZKAPJZG4OQ4O7Q263",
  "PolicyName": "AmazonDataZoneProjectDeploymentPermissionsBoundary",
  "PolicyVersion": {
    "CreateDate": "2023-04-04T02:48:38Z",
    "Document": {
      "Statement": [
        {
          "Action": [
            "athena:CreateWorkGroup",
            "athena:TagResource",
            "iam:TagPolicy",
            "iam:TagRole",
            "kms:CreateKey",
            "kms:TagResource",
            "logs:CreateLogGroup",
            "logs:TagLogGroup",
            "ssm:AddTagsToResource"
          ],
          "Condition": {
            "ForAnyValue:StringLike": {
              "aws:TagKeys": "datazone:*"
            },
            "StringLike": {
              "aws:ResourceTag/datazone:projectId": "proj-*"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "athena:DeleteWorkGroup",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "kms:Decrypt",
            "kms:DescribeKey",
            "kms:DisableKeyRotation",
            "kms:EnableKeyRotation",
            "kms:Encrypt",
            "kms:GenerateDataKey",
            "kms:ScheduleKeyDeletion"
          ],
          "Condition": {
            "StringLike": {
              "aws:ResourceTag/datazone:projectId": "proj-*"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:CreateTags"
          ],
          "Condition": {
            "ForAnyValue:StringLike": {
              "aws:TagKeys": "datazone:projectId"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:CreateVpcEndpoint"
          ],
          "Condition": {
            "StringLike": {
              "ec2:VpceServiceName": [
                "com.amazonaws.*.athena",
                "com.amazonaws.*.glue",
                "com.amazonaws.*.logs",
                "com.amazonaws.*.s3"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:CreateRole",
            "iam:DeleteRolePolicy",
            "iam:DetachRolePolicy",
            "iam:PutRolePolicy"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/AmazonDataZoneProjectRolePermissionsBoundary"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/*datazone*"
        },
        {
          "Action": [
            "kms:*"
          ],
          "Condition": {
            "StringNotEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Deny",
          "Resource": "*"
        },
        {
          "Action": [
            "kms:PutKeyPolicy"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "cloudformation.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "s3:Abort*",
            "s3:CreateBucket",
            "s3:DeleteBucketPolicy",
            "s3:DeleteObject*",
            "s3:GetBucket*",
            "s3:GetEncryptionConfiguration",
            "s3:GetObject*",
            "s3:List*",
            "s3:PutBucketAcl",
            "s3:PutBucketLogging",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutEncryptionConfiguration",
            "s3:PutObject*"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::*datazone*"
        },
        {
          "Action": "ec2:CreateVpcEndpoint",
          "Effect": "Allow",
          "NotResource": "arn:aws:ec2:*:*:vpc-endpoint/*"
        },
        {
          "Action": [
            "s3:Abort*",
            "s3:DeleteBucket",
            "s3:DeleteObject*",
            "s3:GetBucket*",
            "s3:GetEncryptionConfiguration",
            "s3:GetObject*",
            "s3:List*",
            "s3:PutObject*"
          ],
          "Effect": "Deny",
          "NotResource": [
            "arn:aws:s3:::*datazone*"
          ]
        },
        {
          "Action": [
            "athena:Get*",
            "athena:List*",
            "ec2:CreateSecurityGroup",
            "ec2:DeleteSecurityGroup",
            "ec2:Describe*",
            "ec2:Get*",
            "ec2:List*",
            "ec2:RevokeSecurityGroupEgress",
            "logs:DeleteLogGroup",
            "logs:DeleteRetentionPolicy",
            "logs:DescribeLogGroups",
            "logs:PutRetentionPolicy"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "cloudformation:CreateChangeSet",
            "cloudformation:CreateStack",
            "cloudformation:DeleteChangeSet",
            "cloudformation:DeleteStack",
            "cloudformation:DescribeChangeSet",
            "cloudformation:DescribeStackEvents",
            "cloudformation:DescribeStacks",
            "cloudformation:ExecuteChangeSet",
            "cloudformation:GetTemplate",
            "cloudformation:GetTemplateSummary",
            "cloudformation:TagResource",
            "cloudformation:UpdateStack"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/DataZone*"
          ]
        },
        {
          "Action": [
            "glue:CreateDatabase",
            "glue:DeleteDatabase",
            "glue:GetDatabase",
            "glue:GetDatabases",
            "iam:CreatePolicy",
            "iam:GetPolicy",
            "iam:GetRole",
            "iam:GetRolePolicy",
            "iam:ListPolicyVersions",
            "lakeformation:DeregisterResource",
            "lakeformation:GetDataLakeSettings",
            "lakeformation:GrantPermissions",
            "lakeformation:ListPermissions",
            "lakeformation:PutDataLakeSettings",
            "lakeformation:RegisterResource",
            "lakeformation:RevokePermissions",
            "sts:GetCallerIdentity"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "iam:DeletePolicy",
            "s3:DeleteBucket"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:policy/datazone*",
            "arn:aws:s3:::datazone*"
          ]
        },
        {
          "Action": [
            "iam:DeleteRole"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/*datazone*"
          ]
        },
        {
          "Action": [
            "iam:PassRole"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/*datazone*"
          ]
        },
        {
          "Action": [
            "ssm:DeleteParameter",
            "ssm:GetParameter*",
            "ssm:PutParameter"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ssm:*:*:parameter/*datazone*"
          ]
        },
        {
          "Effect": "Deny",
          "NotAction": [
            "athena:*",
            "cloudformation:CreateChangeSet",
            "cloudformation:CreateStack",
            "cloudformation:DeleteChangeSet",
            "cloudformation:DeleteStack",
            "cloudformation:DescribeChangeSet",
            "cloudformation:DescribeStackEvents",
            "cloudformation:DescribeStacks",
            "cloudformation:ExecuteChangeSet",
            "cloudformation:GetTemplate",
            "cloudformation:GetTemplateSummary",
            "cloudformation:TagResource",
            "cloudformation:UpdateStack",
            "ec2:*",
            "glue:CreateDatabase",
            "glue:DeleteDatabase",
            "glue:GetDatabase",
            "glue:GetDatabases",
            "iam:AttachRolePolicy",
            "iam:CreatePolicy",
            "iam:CreateRole",
            "iam:DeletePolicy",
            "iam:DeleteRole",
            "iam:DeleteRolePolicy",
            "iam:DetachRolePolicy",
            "iam:GetPolicy",
            "iam:GetRole",
            "iam:GetRolePolicy",
            "iam:ListPolicyVersions",
            "iam:PassRole",
            "iam:PutRolePolicy",
            "iam:TagRole",
            "iam:UntagRole",
            "kms:*",
            "lakeformation:DeregisterResource",
            "lakeformation:GetDataLakeSettings",
            "lakeformation:GrantPermissions",
            "lakeformation:ListPermissions",
            "lakeformation:PutDataLakeSettings",
            "lakeformation:RegisterResource",
            "lakeformation:RevokePermissions",
            "lambda:*",
            "logs:*",
            "s3:Abort*",
            "s3:CreateBucket",
            "s3:DeleteBucket",
            "s3:DeleteBucketPolicy",
            "s3:GetBucket*",
            "s3:GetEncryptionConfiguration",
            "s3:GetObject*",
            "s3:ListBucket",
            "s3:PutBucketAcl",
            "s3:PutBucketLogging",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutEncryptionConfiguration",
            "s3:PutObject*",
            "servicecatalog:CreateApplication",
            "servicecatalog:DeleteApplication",
            "servicecatalog:GetApplication",
            "ssm:AddTagsToResource",
            "ssm:DeleteParameter",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:PutParameter"
          ],
          "Resource": [
            "*"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v2"
  },
  "UpdateDate": "2023-04-04T02:48:38Z"
}
