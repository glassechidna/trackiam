{
  "Arn": "arn:aws:iam::aws:policy/service-role/SageMakerStudioProjectProvisioningRolePolicy",
  "CreateDate": "2024-11-20T21:58:39Z",
  "DefaultVersionId": "v15",
  "IsAttachable": true,
  "Path": "/service-role/",
  "PolicyId": "ANPAZKAPJZG4NQZUIPVLH",
  "PolicyName": "SageMakerStudioProjectProvisioningRolePolicy",
  "PolicyVersion": {
    "CreateDate": "2025-06-03T22:52:07Z",
    "Document": {
      "Statement": [
        {
          "Action": "aoss:BatchGetCollection",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GetAossCollections"
        },
        {
          "Action": "bedrock:BatchDeleteEvaluationJob",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ManageBedrockEvaluationJobs"
        },
        {
          "Action": "bedrock:TagResource",
          "Condition": {
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:bedrock:*:*:agent-alias/*/TSTALIASID",
            "arn:aws:bedrock:*:*:flow/*/alias/TSTALIASID"
          ],
          "Sid": "TagBedrockTestAliases"
        },
        {
          "Action": "ec2:CreateNetworkInterface",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaLast": "ops.emr-serverless.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*",
            "arn:aws:ec2:*:*:subnet/*"
          ],
          "Sid": "EmrSEc2Subnet"
        },
        {
          "Action": "ec2:CreateNetworkInterface",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaLast": "ops.emr-serverless.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:network-interface/*"
          ],
          "Sid": "EmrSEc2Eni"
        },
        {
          "Action": "ec2:CreateTags",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "aws:cloudformation:*",
                "for-use-with-amazon-emr-managed-policies"
              ]
            },
            "Null": {
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ],
          "Sid": "EC2ResourceTagging"
        },
        {
          "Action": "ec2:DeleteSecurityGroup",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:security-group/*",
          "Sid": "SecurityGroupCleanUpForEMR"
        },
        {
          "Action": "emr-serverless:GetApplication",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "EmrSGet"
        },
        {
          "Action": "events:PutRule",
          "Condition": {
            "ForAllValues:StringEquals": {
              "events:source": [
                "aws.codecommit",
                "aws.quicksight"
              ]
            },
            "Null": {
              "events:detail-type": "false",
              "events:source": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}",
              "events:ManagedBy": "datazone.amazonaws.com",
              "events:detail-type": [
                "AWS Service Event via CloudTrail",
                "CodeCommit Repository State Change"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:events:*:*:rule/Managed.SageMaker*",
          "Sid": "AllowPutRuleOnSpecificSourcesAndDetailTypes"
        },
        {
          "Action": "glue:GetConnection",
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:connection/datazone-glue-network-connection-*"
          ],
          "Sid": "GetGlueConnectionToAllowTagging"
        },
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:AWSServiceName": "observability.aoss.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/aws-service-role/observability.aoss.amazonaws.com/AWSServiceRoleForAmazonOpenSearchServerless",
          "Sid": "IamCreateSLRForAoss"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:PassedToService": "bedrock.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/BedrockStudio*"
          ],
          "Sid": "IamPassRoleToBedrock"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:PassedToService": "lambda.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/BedrockStudio*"
          ],
          "Sid": "IamPassRoleToLambda"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:PassedToService": [
                "ec2.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_emr_ec2_instance_role_*"
          ],
          "Sid": "IamPassRoleForEmrInstanceRole"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:PassedToService": [
                "elasticmapreduce.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_emr_service_role_*"
          ],
          "Sid": "IamPassRoleForEmrServiceRole"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": [
                "cloudformation.amazonaws.com",
                "glue.amazonaws.com"
              ],
              "iam:PassedToService": [
                "airflow.amazonaws.com",
                "emr-serverless.amazonaws.com",
                "glue.amazonaws.com",
                "lakeformation.amazonaws.com",
                "redshift-serverless.amazonaws.com",
                "redshift.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "IamPassRole"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": [
                "bedrock.amazonaws.com",
                "redshift-serverless.amazonaws.com",
                "sagemaker.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "IamPassRoleFromDataZone"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": [
                "glue.amazonaws.com",
                "lakeformation.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
            "arn:aws:iam::*:role/datazone_usr_role_*",
            "arn:aws:iam::*:role/service-role/AmazonSageMakerQueryExecution"
          ],
          "Sid": "IamPassRoleForGlueCatalog"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": [
                "lambda.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "FederatedDBPassRole"
        },
        {
          "Action": "iam:TagRole",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "CreatedForUseWithSageMakerStudio",
                "SageMakerStudioQueryExecutionRole"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
          "Sid": "TagQueryRole"
        },
        {
          "Action": "iam:TagRole",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "RedshiftDb*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "IAMRoleTaggingForRedshift"
        },
        {
          "Action": "iam:UntagRole",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": "EnableAmazonBedrockIDEPermissions"
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/datazone_usr_role_*",
          "Sid": "IAMRoleUntagging"
        },
        {
          "Action": "logs:DescribeLogGroups",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DescribeLogGroups"
        },
        {
          "Action": "logs:PutRetentionPolicy",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*",
            "arn:aws:logs:*:*:log-group:datazone-*"
          ],
          "Sid": "LogGroupPutRetentionPolicy"
        },
        {
          "Action": "s3:GetObject",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            },
            "StringNotEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GetDataZoneTemplate"
        },
        {
          "Action": "sagemaker:DeleteApp",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:sagemaker:*:*:app/*/*/CodeEditor/*",
            "arn:aws:sagemaker:*:*:app/*/*/JupyterLab/*",
            "arn:aws:sagemaker:*:*:app/*/*/codeeditor/*",
            "arn:aws:sagemaker:*:*:app/*/*/jupyterlab/*"
          ],
          "Sid": "SageMakerAppDeletion"
        },
        {
          "Action": "sagemaker:DeleteSpace",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:space/*",
          "Sid": "SageMakerSpaceDeletion"
        },
        {
          "Action": "sagemaker:DeleteUserProfile",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:user-profile/*",
          "Sid": "SageMakerUserProfileDeletion"
        },
        {
          "Action": "scheduler:CreateScheduleGroup",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": "AmazonDataZone*"
            },
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:scheduler:*:*:schedule-group/*",
          "Sid": "EventBridgeCreateScheduleGroupActions"
        },
        {
          "Action": "scheduler:DeleteScheduleGroup",
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:scheduler:*:*:schedule-group/*",
          "Sid": "EventBridgeDeleteScheduleGroupActions"
        },
        {
          "Action": "scheduler:TagResource",
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": "AmazonDataZone*"
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:scheduler:*:*:schedule-group/*",
          "Sid": "EventBridgeTagScheduleGroupActions"
        },
        {
          "Action": "secretsmanager:GetRandomPassword",
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GetRandomPasswordForSecret"
        },
        {
          "Action": [
            "airflow:CreateEnvironment",
            "airflow:DeleteEnvironment",
            "airflow:TagResource",
            "airflow:UpdateEnvironment"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AirflowEnvironmentActions"
        },
        {
          "Action": [
            "aoss:CreateAccessPolicy",
            "aoss:DeleteAccessPolicy",
            "aoss:GetAccessPolicy",
            "aoss:UpdateAccessPolicy"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            },
            "StringLikeIfExists": {
              "aoss:collection": "bedrock-ide-*",
              "aoss:index": "bedrock-ide-*"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ManageAossAccessPolicies"
        },
        {
          "Action": [
            "aoss:CreateCollection",
            "aoss:DeleteCollection",
            "aoss:TagResource",
            "aoss:UpdateCollection"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ManageAossCollections"
        },
        {
          "Action": [
            "aoss:CreateSecurityPolicy",
            "aoss:DeleteSecurityPolicy",
            "aoss:GetSecurityPolicy",
            "aoss:UpdateSecurityPolicy"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            },
            "StringLikeIfExists": {
              "aoss:collection": "bedrock-ide-*"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ManageAossSecurityPolicies"
        },
        {
          "Action": [
            "athena:CreateDataCatalog"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "FederatedAthenaConnection"
        },
        {
          "Action": [
            "athena:CreateWorkGroup",
            "athena:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:athena:*:*:workgroup/*",
          "Sid": "AthenaManage"
        },
        {
          "Action": [
            "athena:DeleteDataCatalog",
            "athena:GetDataCatalog",
            "athena:UpdateDataCatalog"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:athena:*:*:datacatalog/*",
          "Sid": "FederatedDBAthenaCatalog"
        },
        {
          "Action": [
            "athena:DeleteWorkGroup",
            "athena:GetWorkGroup"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:athena:*:*:workgroup/*",
          "Sid": "AthenaWorkgroupDeletion"
        },
        {
          "Action": [
            "athena:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "federated_athena*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:athena:*:*:datacatalog/*",
          "Sid": "FederatedConnectionTag"
        },
        {
          "Action": [
            "bedrock:AssociateAgentKnowledgeBase",
            "bedrock:CreateAgent",
            "bedrock:CreateAgentActionGroup",
            "bedrock:CreateAgentAlias",
            "bedrock:CreateDataSource",
            "bedrock:CreateFlow",
            "bedrock:CreateFlowAlias",
            "bedrock:CreateFlowVersion",
            "bedrock:CreateGuardrail",
            "bedrock:CreateGuardrailVersion",
            "bedrock:CreateKnowledgeBase",
            "bedrock:CreatePrompt",
            "bedrock:CreatePromptVersion",
            "bedrock:DeleteAgent",
            "bedrock:DeleteAgentActionGroup",
            "bedrock:DeleteAgentAlias",
            "bedrock:DeleteDataSource",
            "bedrock:DeleteFlow",
            "bedrock:DeleteFlowAlias",
            "bedrock:DeleteFlowVersion",
            "bedrock:DeleteGuardrail",
            "bedrock:DeleteKnowledgeBase",
            "bedrock:DeletePrompt",
            "bedrock:DisassociateAgentKnowledgeBase",
            "bedrock:GetAgentActionGroup",
            "bedrock:GetAgentAlias",
            "bedrock:GetAgentKnowledgeBase",
            "bedrock:GetDataSource",
            "bedrock:GetFlowAlias",
            "bedrock:GetFlowVersion",
            "bedrock:GetIngestionJob",
            "bedrock:ListAgentActionGroups",
            "bedrock:ListAgentAliases",
            "bedrock:ListAgentKnowledgeBases",
            "bedrock:ListDataSources",
            "bedrock:ListFlowAliases",
            "bedrock:ListFlowVersions",
            "bedrock:ListIngestionJobs",
            "bedrock:PrepareAgent",
            "bedrock:PrepareFlow",
            "bedrock:StartIngestionJob",
            "bedrock:StopIngestionJob",
            "bedrock:TagResource",
            "bedrock:UpdateAgent",
            "bedrock:UpdateAgentActionGroup",
            "bedrock:UpdateAgentAlias",
            "bedrock:UpdateAgentKnowledgeBase",
            "bedrock:UpdateDataSource",
            "bedrock:UpdateFlow",
            "bedrock:UpdateFlowAlias",
            "bedrock:UpdateGuardrail",
            "bedrock:UpdateKnowledgeBase",
            "bedrock:UpdatePrompt"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ManageBedrockResources"
        },
        {
          "Action": [
            "bedrock:GetAgent",
            "bedrock:GetFlow",
            "bedrock:GetFlowAlias",
            "bedrock:GetGuardrail",
            "bedrock:GetKnowledgeBase",
            "bedrock:GetPrompt",
            "bedrock:ListTagsForResource"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GetBedrockResources"
        },
        {
          "Action": [
            "cloudformation:CreateChangeSet",
            "cloudformation:DeleteChangeSet"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaLast": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:transform/Serverless*"
          ],
          "Sid": "FederatedDBAthenaCFN"
        },
        {
          "Action": [
            "cloudformation:CreateStack",
            "cloudformation:DeleteStack",
            "cloudformation:DescribeStackEvents",
            "cloudformation:DescribeStacks"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/federated_athena_datacatalog": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:cloudformation:*:*:stack/athenafederatedcatalog*",
          "Sid": "FederatedDBAthenaCommon"
        },
        {
          "Action": [
            "cloudformation:CreateStack",
            "cloudformation:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/DataZone*"
          ],
          "Sid": "CfnCreate"
        },
        {
          "Action": [
            "cloudformation:DeleteStack",
            "cloudformation:DescribeStacks"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/DataZone*"
          ],
          "Sid": "CfnDelete"
        },
        {
          "Action": [
            "cloudformation:DescribeStackEvents",
            "cloudformation:DescribeStacks",
            "cloudformation:UpdateStack"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/DataZone*"
          ],
          "Sid": "CfnManage"
        },
        {
          "Action": [
            "codecommit:CreateCommit",
            "codecommit:GetBranch",
            "codecommit:GetFile",
            "codecommit:GetRepository"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:codecommit:*:*:datazone*",
          "Sid": "CodeCommitAccess"
        },
        {
          "Action": [
            "codecommit:CreateRepository",
            "codecommit:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:codecommit:*:*:datazone*",
          "Sid": "CodeCommitCreate"
        },
        {
          "Action": [
            "codecommit:DeleteRepository",
            "codecommit:PutRepositoryTriggers",
            "codecommit:UpdateRepositoryEncryptionKey"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:codecommit:*:*:datazone*",
          "Sid": "CodeCommitDeletion"
        },
        {
          "Action": [
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ],
          "Sid": "SGAuth"
        },
        {
          "Action": [
            "ec2:CreateSecurityGroup"
          ],
          "Condition": {
            "Null": {
              "aws:TagKeys": "true"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*",
            "arn:aws:ec2:*:*:vpc/*"
          ],
          "Sid": "CreateSG"
        },
        {
          "Action": [
            "ec2:DeleteSecurityGroup",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ],
          "Sid": "SGManage"
        },
        {
          "Action": [
            "ec2:RevokeSecurityGroupIngress"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ],
          "Sid": "SGRevoke"
        },
        {
          "Action": [
            "ecr:BatchCheckLayerAvailability",
            "ecr:BatchGetImage",
            "ecr:GetAuthorizationToken",
            "ecr:GetDownloadUrlForLayer",
            "imagebuilder:GetComponent",
            "imagebuilder:GetContainerRecipe"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaLast": "lambda.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ecr:*:*:repository/athena-federation-repository*"
          ],
          "Sid": "FederatedDBECR"
        },
        {
          "Action": [
            "elasticmapreduce:AddJobFlowSteps",
            "elasticmapreduce:AddTags",
            "elasticmapreduce:DescribeCluster",
            "elasticmapreduce:DescribeJobFlows",
            "elasticmapreduce:ListInstanceFleets",
            "elasticmapreduce:ModifyInstanceFleet",
            "elasticmapreduce:RunJobFlow",
            "elasticmapreduce:SetTerminationProtection",
            "elasticmapreduce:TerminateJobFlows"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:elasticmapreduce:*:*:cluster/*",
          "Sid": "EMRClusterManagement"
        },
        {
          "Action": [
            "elasticmapreduce:CreateSecurityConfiguration",
            "elasticmapreduce:DeleteSecurityConfiguration"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "EMRSecurityConfigurationManagement"
        },
        {
          "Action": [
            "emr-serverless:CreateApplication",
            "emr-serverless:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "EmrSCreate"
        },
        {
          "Action": [
            "emr-serverless:DeleteApplication",
            "emr-serverless:UpdateApplication"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "EmrSManage"
        },
        {
          "Action": [
            "events:DeleteRule",
            "events:DisableRule",
            "events:EnableRule",
            "events:PutTargets",
            "events:RemoveTargets"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}",
              "events:ManagedBy": "datazone.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:events:*:*:rule/Managed.SageMaker*",
          "Sid": "AllowOtherOperationsOnRulesManagedBySMUS"
        },
        {
          "Action": [
            "glue:CreateCatalog"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:catalog/*"
          ],
          "Sid": "GlueCatalogCreation"
        },
        {
          "Action": [
            "glue:CreateConnection"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:connection/*"
          ],
          "Sid": "FederatedConnectionCreate"
        },
        {
          "Action": [
            "glue:CreateConnection",
            "glue:DeleteConnection"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:connection/datazone-glue-network-connection-*"
          ],
          "Sid": "GlueConnectionCreateAndDelete"
        },
        {
          "Action": [
            "glue:CreateDatabase"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:database/*"
          ],
          "Sid": "GlueDbCreateFromCfn"
        },
        {
          "Action": [
            "glue:CreateDatabase",
            "glue:GetDatabase"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/default"
          ],
          "Sid": "GlueDefaultDatabaseCreation"
        },
        {
          "Action": [
            "glue:DeleteCatalog",
            "glue:GetCatalog",
            "glue:GetCatalogs",
            "glue:GetDatabase",
            "glue:UpdateCatalog"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:catalog/*"
          ],
          "Sid": "GlueCatalogManagement"
        },
        {
          "Action": [
            "glue:DeleteConnection",
            "glue:UpdateConnection"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:connection/*"
          ],
          "Sid": "FederatedConnectionManage"
        },
        {
          "Action": [
            "glue:DeleteConnection",
            "glue:UpdateConnection"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog"
          ],
          "Sid": "FederatedConnectionManageCatalog"
        },
        {
          "Action": [
            "glue:DeleteDatabase"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GlueDatabaseDeletion"
        },
        {
          "Action": [
            "glue:GetConnections",
            "glue:GetTags",
            "glue:PassConnection"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog/*",
            "arn:aws:glue:*:*:connection/*"
          ],
          "Sid": "FederatedGlueConnection"
        },
        {
          "Action": [
            "glue:GetDatabase"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/*"
          ],
          "Sid": "GlueGetDatabaseForTagging"
        },
        {
          "Action": [
            "glue:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "TagGlueResources"
        },
        {
          "Action": [
            "iam:AddRoleToInstanceProfile",
            "iam:CreateInstanceProfile",
            "iam:DeleteInstanceProfile",
            "iam:GetInstanceProfile",
            "iam:RemoveRoleFromInstanceProfile"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:instance-profile/datazone_emr_ec2_instance_profile_*",
          "Sid": "IAMInstanceProfile"
        },
        {
          "Action": [
            "iam:AttachRolePolicy"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IamAttachPolicyFromService"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:CreateRole",
            "iam:DeleteRolePolicy",
            "iam:DetachRolePolicy",
            "iam:GetRole"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
          "Sid": "QueryRoleManage"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:CreateRole",
            "iam:DeleteRolePolicy",
            "iam:DetachRolePolicy",
            "iam:PutRolePolicy"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrockConsumptionRole*",
            "arn:aws:iam::*:role/AmazonBedrockEvaluation*",
            "arn:aws:iam::*:role/AmazonBedrockExecution*",
            "arn:aws:iam::*:role/BedrockStudio*",
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IAMManage"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:DetachRolePolicy"
          ],
          "Condition": {
            "ArnEquals": {
              "iam:PolicyARN": [
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioQueryExecutionRolePolicy"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
          "Sid": "QueryRolePolicy"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:DetachRolePolicy"
          ],
          "Condition": {
            "ArnEquals": {
              "iam:PolicyARN": [
                "arn:aws:iam::aws:policy/AmazonSageMakerPartnerAppsFullAccess",
                "arn:aws:iam::aws:policy/SageMakerStudioProjectRoleMachineLearningPolicy",
                "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePolicy",
                "arn:aws:iam::aws:policy/service-role/AmazonEMRServicePolicy_v2",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseServiceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioEMRInstanceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioEMRServiceRolePolicy"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IAMRoleManagement"
        },
        {
          "Action": [
            "iam:AttachRolePolicy",
            "iam:DetachRolePolicy"
          ],
          "Condition": {
            "ArnEquals": {
              "iam:PolicyARN": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockAgentServiceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockChatAgentUserRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockEvaluationJobServiceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockFlowServiceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockFunctionExecutionRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseCustomResourcePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseServiceRolePolicy",
                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockPromptUserRolePolicy"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/AmazonBedrock*",
          "Sid": "IAMRoleManagementForBedrock"
        },
        {
          "Action": [
            "iam:CreateRole"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IAMRoleCreation"
        },
        {
          "Action": [
            "iam:DeleteRole",
            "iam:DeleteRolePolicy",
            "iam:ListAttachedRolePolicies",
            "iam:ListInstanceProfilesForRole",
            "iam:ListRolePolicies"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/datazone_emr_*",
          "Sid": "IAMRoleCleanUpForEMR"
        },
        {
          "Action": [
            "iam:DeleteRole",
            "iam:GetRolePolicy",
            "iam:ListAttachedRolePolicies",
            "iam:ListRolePolicies"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/BedrockStudio*",
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IamManageRoles"
        },
        {
          "Action": [
            "iam:DeleteRolePolicy",
            "iam:PutRolePolicy"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IAMManageFromDataZone"
        },
        {
          "Action": [
            "iam:GetRole"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/BedrockStudio*",
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "GetIAMRole"
        },
        {
          "Action": [
            "iam:GetRole",
            "iam:UpdateAssumeRolePolicy"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/datazone-partner-apps-*",
            "arn:aws:iam::*:role/datazone_emr_*",
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "IamManageRolesFromDataZone"
        },
        {
          "Action": [
            "iam:PassRole"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": "quicksight.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_usr_role_*",
            "arn:aws:iam::*:role/service-role/AmazonSageMakerQuickSightVPC"
          ],
          "Sid": "PermissionsToIAMPassRoleForQuickSight"
        },
        {
          "Action": [
            "iam:TagRole",
            "iam:UntagRole"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AgentAliasId",
                "AgentId",
                "AmazonBedrockManaged",
                "AmazonDataZone*",
                "AppDefinitionPath",
                "DataSourcePath",
                "DomainBucketName",
                "KmsKeyId",
                "OpenSearchServerlessCollectionId",
                "PromptDefinitionPath",
                "PromptId",
                "PromptVersion"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/AmazonBedrock*",
          "Sid": "IAMRoleTaggingForBedrock"
        },
        {
          "Action": [
            "iam:TagRole",
            "iam:UntagRole"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonBedrockManaged",
                "AmazonDataZone*",
                "CreatedForUseWithSageMakerStudio",
                "DomainBucketName",
                "EnableAmazonBedrockIDEPermissions",
                "EnableAmazonBedrockPermissions",
                "EnableGlueWorkloadsPermissions",
                "EnableSageMakerMLWorkloadsPermissions",
                "KmsKeyId",
                "LogGroupName",
                "RedshiftDb*",
                "RoleName",
                "SageMakerStudioQueryExecutionRole",
                "VpcId",
                "vpcArn"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/BedrockStudio*",
            "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
            "arn:aws:iam::*:role/datazone-partner-apps-*",
            "arn:aws:iam::*:role/datazone_redshift_serverless_admin_role_*",
            "arn:aws:iam::*:role/datazone_usr_role_*"
          ],
          "Sid": "IAMRoleTagging"
        },
        {
          "Action": [
            "iam:TagRole",
            "iam:UntagRole"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "DataZone*",
                "DomainBucketName",
                "KmsKeyId",
                "VpcId",
                "for-use-with-amazon-emr-managed-policies"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/datazone_emr_ec2_instance_role_*",
            "arn:aws:iam::*:role/datazone_emr_service_role_*"
          ],
          "Sid": "IAMRoleTaggingForEmr"
        },
        {
          "Action": [
            "kms:CreateGrant"
          ],
          "Condition": {
            "Null": {
              "kms:EncryptionContextKeys": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            },
            "StringLike": {
              "kms:ViaService": [
                "airflow.*.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AirflowKmsCreateGrant"
        },
        {
          "Action": [
            "kms:Decrypt"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}",
              "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}"
            },
            "StringLike": {
              "kms:ViaService": [
                "glue.*.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GlueKms"
        },
        {
          "Action": [
            "kms:Decrypt",
            "kms:Encrypt",
            "kms:GenerateDataKey"
          ],
          "Condition": {
            "Null": {
              "kms:EncryptionContext:aws:redshift-serverless:arn": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            },
            "StringLike": {
              "kms:ViaService": [
                "redshift-serverless.*.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RedshiftKms"
        },
        {
          "Action": [
            "kms:Decrypt",
            "kms:GenerateDataKey"
          ],
          "Condition": {
            "Null": {
              "kms:EncryptionContext:SecretARN": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            },
            "StringLike": {
              "kms:ViaService": [
                "secretsmanager.*.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "SecretsManagerKmsPermissions"
        },
        {
          "Action": [
            "kms:Decrypt",
            "kms:GenerateDataKey",
            "kms:ReEncryptFrom",
            "kms:ReEncryptTo"
          ],
          "Condition": {
            "Null": {
              "kms:EncryptionContext:aws:codecommit:id": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            },
            "StringLike": {
              "kms:ViaService": [
                "codecommit.*.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "CodeCommitKms"
        },
        {
          "Action": [
            "kms:DescribeKey"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "KmsDescribeKey"
        },
        {
          "Action": [
            "lambda:AddPermission",
            "lambda:CreateFunction",
            "lambda:DeleteFunction",
            "lambda:GetFunctionConfiguration",
            "lambda:GetPolicy",
            "lambda:InvokeFunction",
            "lambda:ListVersionsByFunction",
            "lambda:PublishVersion",
            "lambda:TagResource",
            "lambda:UpdateFunctionCode",
            "lambda:UpdateFunctionConfiguration"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*",
          "Sid": "BedrockLambda"
        },
        {
          "Action": [
            "lambda:CreateFunction",
            "lambda:DeleteFunction"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaLast": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
          ],
          "Sid": "FederatedDBAthenaLambda"
        },
        {
          "Action": [
            "lambda:GetFunction"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaLast": [
                "athena.amazonaws.com",
                "cloudformation.amazonaws.com"
              ],
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
          ],
          "Sid": "FederatedDBAthenaGetFunctionLambda"
        },
        {
          "Action": [
            "lambda:GetFunction",
            "lambda:ListTags",
            "lambda:RemovePermission"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*",
          "Sid": "ManageBedrockLambda"
        },
        {
          "Action": [
            "lambda:GetFunctionConfiguration",
            "lambda:UpdateFunctionConfiguration"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
          ],
          "Sid": "FederatedDBAthenaUpdateLambda"
        },
        {
          "Action": [
            "lambda:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "aws:cloudformation:*",
                "federated_athena*",
                "lambda:createdBy"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaLast": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
          ],
          "Sid": "FederatedDBAthenaLambdaTagging"
        },
        {
          "Action": [
            "logs:AssociateKmsKey",
            "logs:DeleteDataProtectionPolicy",
            "logs:DeleteLogGroup",
            "logs:DeleteRetentionPolicy",
            "logs:DisassociateKmsKey",
            "logs:GetDataProtectionPolicy",
            "logs:ListTagsForResource",
            "logs:PutDataProtectionPolicy"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*",
            "arn:aws:logs:*:*:log-group:datazone-*"
          ],
          "Sid": "ManageLogGroups"
        },
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonBedrockManaged",
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*",
            "arn:aws:logs:*:*:log-group:datazone-*"
          ],
          "Sid": "LogGroupCreation"
        },
        {
          "Action": [
            "quicksight:CreateDataSource",
            "quicksight:CreateFolder",
            "quicksight:CreateFolderMembership",
            "quicksight:CreateVPCConnection",
            "quicksight:DeleteDataSource",
            "quicksight:DeleteFolder",
            "quicksight:DeleteVPCConnection",
            "quicksight:DescribeDataSource",
            "quicksight:DescribeDataSourcePermissions",
            "quicksight:DescribeFolderPermissions",
            "quicksight:ListFolderMembers",
            "quicksight:ListTagsForResource",
            "quicksight:UpdateDataSource",
            "quicksight:UpdateDataSourcePermissions",
            "quicksight:UpdateFolder",
            "quicksight:UpdateFolderPermissions",
            "quicksight:UpdateVPCConnection"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "ManageQuickSightFolder"
        },
        {
          "Action": [
            "quicksight:DescribeAccountSubscription",
            "quicksight:DescribeDashboard",
            "quicksight:DescribeDashboardPermissions",
            "quicksight:DescribeDataSet",
            "quicksight:DescribeFolder",
            "quicksight:DescribeGroup",
            "quicksight:DescribeGroupMembership",
            "quicksight:DescribeUser",
            "quicksight:DescribeVPCConnection",
            "quicksight:ListTagsForResource",
            "quicksight:UpdateDashboardPermissions"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:quicksight:*:*:*"
          ],
          "Sid": "ManageQuickSightOtherResourcesPermissions"
        },
        {
          "Action": [
            "quicksight:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:quicksight:*:*:*"
          ],
          "Sid": "ManageQuickSightTagCreationPermissions"
        },
        {
          "Action": [
            "redshift-data:ExecuteStatement",
            "redshift-serverless:GetCredentials",
            "redshift:GetResourcePolicy"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftServerlessCreateDatabaseRole"
        },
        {
          "Action": [
            "redshift-serverless:CreateNamespace",
            "redshift-serverless:CreateWorkgroup",
            "redshift-serverless:DeleteNamespace",
            "redshift-serverless:DeleteWorkgroup",
            "redshift-serverless:GetNamespace",
            "redshift-serverless:GetWorkgroup",
            "redshift-serverless:ListTagsForResource"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftManage"
        },
        {
          "Action": [
            "redshift-serverless:CreateNamespace",
            "redshift-serverless:CreateWorkgroup",
            "redshift-serverless:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftCreate"
        },
        {
          "Action": [
            "redshift-serverless:ListNamespaces",
            "redshift-serverless:ListWorkgroups",
            "redshift:GetResourcePolicy"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RedshiftList"
        },
        {
          "Action": [
            "redshift-serverless:ListTagsForResource"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftServerlessListTags"
        },
        {
          "Action": [
            "redshift-serverless:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*"
              ]
            },
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false",
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftTag"
        },
        {
          "Action": [
            "redshift-serverless:UntagResource",
            "redshift-serverless:UpdateNamespace",
            "redshift-serverless:UpdateWorkgroup"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftManagement"
        },
        {
          "Action": [
            "redshift:AssociateDataShareConsumer",
            "redshift:AuthorizeDataShare"
          ],
          "Condition": {
            "ForAnyValue:StringLike": {
              "aws:CalledVia": [
                "glue.amazonaws.com",
                "redshift-serverless.amazonaws.com"
              ]
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift:*:*:datashare:*/*"
          ],
          "Sid": "RedshiftDataShare"
        },
        {
          "Action": [
            "s3:CreateBucket",
            "s3:DeleteBucket",
            "s3:PutBucketPolicy",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutEncryptionConfiguration",
            "s3:PutLifecycleConfiguration"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::redshift-staging-bucket-*",
          "Sid": "RedshiftBucket"
        },
        {
          "Action": [
            "s3:GetEncryptionConfiguration"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*"
          ],
          "Sid": "AirflowS3BucketActions"
        },
        {
          "Action": [
            "s3:GetObject"
          ],
          "Condition": {
            "StringLike": {
              "aws:CalledViaLast": [
                "lambda.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::awsserverlessrepo*"
          ],
          "Sid": "FederatedDBAthenaS3"
        },
        {
          "Action": [
            "s3:GetObject",
            "s3:GetObjectVersion"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::*/dzd_*/*/genAI/*",
          "Sid": "GetBedrockCfnResourceDefinitionS3"
        },
        {
          "Action": [
            "s3:ListBucket"
          ],
          "Condition": {
            "Null": {
              "s3:prefix": "true"
            },
            "StringEquals": {
              "aws:CalledViaLast": [
                "glue.amazonaws.com"
              ],
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*"
          ],
          "Sid": "FederatedDBGlueS3"
        },
        {
          "Action": [
            "sagemaker:AddTags",
            "sagemaker:CreateDomain"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:domain/*",
          "Sid": "SageMakerDomainCreationAndTagging"
        },
        {
          "Action": [
            "sagemaker:AddTags",
            "sagemaker:CreateMlflowTrackingServer"
          ],
          "Condition": {
            "Null": {
              "aws:RequestTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*",
          "Sid": "SageMakerMlflowTrackingServerCreation"
        },
        {
          "Action": [
            "sagemaker:DeleteDomain",
            "sagemaker:UpdateDomain"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:domain/*",
          "Sid": "SageMakerDomainUpdationAndDeletion"
        },
        {
          "Action": [
            "sagemaker:DeleteMlflowTrackingServer"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*",
          "Sid": "SageMakerMlflowTrackingServerDeletion"
        },
        {
          "Action": [
            "sagemaker:DescribeDomain",
            "sagemaker:ListDomains"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "SageMakerDomainManagement"
        },
        {
          "Action": [
            "scheduler:DeleteSchedule"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:scheduler:*:*:schedule/SageMakerUnifiedStudio-*-*/*"
          ],
          "Sid": "EventBridgeScheduleDeleteAction"
        },
        {
          "Action": [
            "scheduler:GetScheduleGroup",
            "scheduler:ListTagsForResource"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:scheduler:*:*:schedule-group/*",
          "Sid": "EventBridgeViewScheduleGroupActions"
        },
        {
          "Action": [
            "secretsmanager:CreateSecret",
            "secretsmanager:DeleteResourcePolicy",
            "secretsmanager:DeleteSecret",
            "secretsmanager:DescribeSecret",
            "secretsmanager:GetResourcePolicy",
            "secretsmanager:PutResourcePolicy",
            "secretsmanager:TagResource",
            "secretsmanager:UpdateSecret"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:CalledViaFirst": "cloudformation.amazonaws.com",
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*",
          "Sid": "BedrockSecret"
        },
        {
          "Action": [
            "secretsmanager:CreateSecret",
            "secretsmanager:DeleteSecret",
            "secretsmanager:DescribeSecret",
            "secretsmanager:RotateSecret",
            "secretsmanager:UpdateSecret"
          ],
          "Condition": {
            "StringEquals": {
              "aws:CalledViaFirst": [
                "cloudformation.amazonaws.com"
              ],
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:secretsmanager:*:*:secret:redshift!*",
          "Sid": "RedshiftSecret"
        },
        {
          "Action": [
            "secretsmanager:CreateSecret",
            "secretsmanager:DeleteSecret",
            "secretsmanager:UpdateSecret"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:ResourceTag/CreatedBy": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowSecretManagement"
        },
        {
          "Action": [
            "secretsmanager:DescribeSecret"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DescribeSecret"
        },
        {
          "Action": [
            "secretsmanager:DescribeSecret"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DescribeAllSecrets"
        },
        {
          "Action": [
            "secretsmanager:GetSecretValue"
          ],
          "Condition": {
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:secretsmanager:*:*:secret:*",
          "Sid": "GetRedshiftAdminSecretPermissions"
        },
        {
          "Action": [
            "secretsmanager:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "CreatedBy"
              ]
            },
            "Null": {
              "aws:ResourceTag/AmazonDataZoneProject": "false",
              "aws:ResourceTag/CreatedBy": "false",
              "aws:TagKeys": "false"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowSecretTagging"
        },
        {
          "Action": [
            "secretsmanager:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringLike": {
              "aws:TagKeys": [
                "AmazonDataZone*",
                "Redshift",
                "aws:redshift-serverless:*",
                "aws:secretsmanager:*",
                "datazone.rs.workgroup"
              ]
            },
            "Null": {
              "aws:TagKeys": "false"
            },
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:secretsmanager:*:*:secret:redshift!*",
          "Sid": "TagRedshiftSecret"
        },
        {
          "Action": "bedrock:ListEvaluationJobs",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ListBedrockJobs"
        },
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/aws-service-role/airflow.amazonaws.com/AWSServiceRoleForAmazonMWAA",
            "arn:aws:iam::*:role/aws-service-role/elasticmapreduce.amazonaws.com/AWSServiceRoleForEMRCleanup",
            "arn:aws:iam::*:role/aws-service-role/ops.emr-serverless.amazonaws.com/AWSServiceRoleForAmazonEMRServerless",
            "arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift",
            "arn:aws:iam::*:role/aws-service-role/sagemaker.amazonaws.com/AWSServiceRoleForAmazonSageMakerNotebooks"
          ],
          "Sid": "CreateSLR"
        },
        {
          "Action": "sagemaker:DescribeMlflowTrackingServer",
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*",
          "Sid": "SageMakerMlflowTrackingServerDescribe"
        },
        {
          "Action": [
            "airflow:GetEnvironment"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AirflowGetEnvironment"
        },
        {
          "Action": [
            "codecommit:ListRepositories"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "CodeCommitList"
        },
        {
          "Action": [
            "ec2:CreateNetworkInterface"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:network-interface/*",
            "arn:aws:ec2:*:*:subnet/*"
          ],
          "Sid": "AirflowNetworkInterfaceActions"
        },
        {
          "Action": [
            "ec2:CreateVpcEndpoint"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*",
            "arn:aws:ec2:*:*:subnet/*",
            "arn:aws:ec2:*:*:vpc-endpoint/*",
            "arn:aws:ec2:*:*:vpc/*"
          ],
          "Sid": "AirflowVpcEndpointActions"
        },
        {
          "Action": [
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeNatGateways",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "EC2Describe"
        },
        {
          "Action": [
            "glue:DescribeConnectionType",
            "glue:ListConnectionTypes"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "GlueConnection"
        },
        {
          "Action": [
            "glue:GetConnection"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog/*",
            "arn:aws:glue:*:*:connection/*"
          ],
          "Sid": "FederatedGetConnection"
        },
        {
          "Action": [
            "iam:CreatePolicy",
            "iam:CreatePolicyVersion",
            "iam:DeletePolicy",
            "iam:DeletePolicyVersion",
            "iam:GetPolicy",
            "iam:GetPolicyVersion",
            "iam:ListPolicies",
            "iam:ListPolicyVersions"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:policy/SageMakerStudioQueryExecutionRolePolicy",
            "arn:aws:iam::*:policy/connector-manage-access-policy*",
            "arn:aws:iam::*:policy/datazone*"
          ],
          "Sid": "IAMPolicyManagementFromService"
        },
        {
          "Action": [
            "iam:CreateRole"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
          "Sid": "QueryRoleCreate"
        },
        {
          "Action": [
            "iam:DeleteInstanceProfile",
            "iam:RemoveRoleFromInstanceProfile"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:instance-profile/datazone_emr_ec2_instance_profile_*",
          "Sid": "IAMInstanceProfileCleanUpForEMR"
        },
        {
          "Action": [
            "iam:DetachRolePolicy"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/AmazonBedrock*",
            "arn:aws:iam::*:role/datazone*"
          ],
          "Sid": "IamDetachPolicyFromService"
        },
        {
          "Action": [
            "iam:GetRole"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
            "arn:aws:iam::*:role/service-role/AmazonSageMakerQueryExecution"
          ],
          "Sid": "FederatedDBGetRole"
        },
        {
          "Action": [
            "iam:ListAttachedRolePolicies"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole",
          "Sid": "ListQueryPolicy"
        },
        {
          "Action": [
            "iam:ListPolicies"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "IAMListPolicy"
        },
        {
          "Action": [
            "lakeformation:BatchGrantPermissions",
            "lakeformation:BatchRevokePermissions",
            "lakeformation:DeregisterResource",
            "lakeformation:DescribeResource",
            "lakeformation:GetDataLakeSettings",
            "lakeformation:GrantPermissions",
            "lakeformation:ListPermissions",
            "lakeformation:ListResources",
            "lakeformation:PutDataLakeSettings",
            "lakeformation:RegisterResource",
            "lakeformation:RevokePermissions"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "LFManage"
        },
        {
          "Action": [
            "redshift-data:DescribeStatement",
            "redshift-data:GetStatementResult",
            "redshift:DescribeDataShares",
            "redshift:DescribeDataSharesForConsumer"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RedshiftData"
        },
        {
          "Action": [
            "serverlessrepo:CreateCloudFormationTemplate",
            "serverlessrepo:GetCloudFormationTemplate"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:serverlessrepo:*:*:applications/Athena*"
          ],
          "Sid": "FederatedDBAthenaServerless"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v15"
  },
  "UpdateDate": "2025-06-03T22:52:07Z"
}
