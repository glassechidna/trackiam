{
  "Arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
  "CreateDate": "2017-11-29T13:07:59Z",
  "DefaultVersionId": "v25",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAJZ5IWYMXO5QDB4QOG",
  "PolicyName": "AmazonSageMakerFullAccess",
  "PolicyVersion": {
    "CreateDate": "2023-11-30T13:40:20Z",
    "Document": {
      "Statement": [
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringEquals": {
              "iam:AWSServiceName": "robomaker.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowCreateServiceLinkedRoleForRobomaker"
        },
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringLike": {
              "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint",
          "Sid": "AllowCreateServiceLinkedRoleForSageMakerApplicationAutoscaling"
        },
        {
          "Action": "sagemaker:*",
          "Condition": {
            "StringEqualsIfExists": {
              "sagemaker:WorkteamType": [
                "private-crowd",
                "vendor-crowd"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:sagemaker:*:*:flow-definition/*"
          ],
          "Sid": "AllowFlowDefinitionActions"
        },
        {
          "Action": [
            "iam:PassRole"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": "sagemaker.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/*",
          "Sid": "AllowPassRoleToSageMaker"
        },
        {
          "Action": [
            "iam:PassRole"
          ],
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": [
                "glue.amazonaws.com",
                "robomaker.amazonaws.com",
                "states.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:iam::*:role/*AmazonSageMaker*",
          "Sid": "AllowPassRoleForSageMakerRoles"
        },
        {
          "Action": [
            "s3:GetObject"
          ],
          "Condition": {
            "StringEquals": {
              "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*"
          ],
          "Sid": "AllowS3GetObjectWithServiceCatalogProvisioningExistingObjectTag"
        },
        {
          "Action": [
            "s3:GetObject"
          ],
          "Condition": {
            "StringEqualsIgnoreCase": {
              "s3:ExistingObjectTag/SageMaker": "true"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*"
          ],
          "Sid": "AllowS3GetObjectWithSageMakerExistingObjectTag"
        },
        {
          "Action": [
            "s3express:CreateBucket"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3express:*:*:bucket/*SageMaker*",
            "arn:aws:s3express:*:*:bucket/*Sagemaker*",
            "arn:aws:s3express:*:*:bucket/*sagemaker*"
          ],
          "Sid": "AllowS3ExpressCreateBucketActions"
        },
        {
          "Action": [
            "s3express:CreateSession"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceAccount": "${aws:PrincipalAccount}"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3express:*:*:bucket/*SageMaker*",
            "arn:aws:s3express:*:*:bucket/*Sagemaker*",
            "arn:aws:s3express:*:*:bucket/*aws-glue*",
            "arn:aws:s3express:*:*:bucket/*sagemaker*"
          ],
          "Sid": "AllowS3ExpressObjectActions"
        },
        {
          "Action": [
            "sagemaker:CreateApp",
            "sagemaker:DeleteApp"
          ],
          "Condition": {
            "ArnLike": {
              "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
            },
            "StringEquals": {
              "sagemaker:SpaceSharingType": [
                "Private"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
          "Sid": "RestrictMutatingActionsOnPrivateSpaceAppsToOwnerUserProfile"
        },
        {
          "Action": [
            "sagemaker:CreateApp",
            "sagemaker:DeleteApp"
          ],
          "Condition": {
            "Null": {
              "sagemaker:OwnerUserProfileArn": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:app/*/*/*/*",
          "Sid": "AllowAppActionsForUserProfile"
        },
        {
          "Action": [
            "sagemaker:CreateApp",
            "sagemaker:DeleteApp"
          ],
          "Condition": {
            "StringEquals": {
              "sagemaker:SpaceSharingType": [
                "Shared"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
          "Sid": "AllowAppActionsForSharedSpaces"
        },
        {
          "Action": [
            "sagemaker:CreateSpace",
            "sagemaker:DeleteSpace",
            "sagemaker:UpdateSpace"
          ],
          "Condition": {
            "ArnLike": {
              "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
            },
            "StringEquals": {
              "sagemaker:SpaceSharingType": [
                "Private",
                "Shared"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
          "Sid": "RestrictMutatingActionsOnSpacesToOwnerUserProfile"
        },
        {
          "Action": [
            "sagemaker:CreateSpace",
            "sagemaker:DeleteSpace",
            "sagemaker:UpdateSpace"
          ],
          "Condition": {
            "Null": {
              "sagemaker:OwnerUserProfileArn": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
          "Sid": "AllowMutatingActionsOnSharedSpacesWithoutOwner"
        },
        {
          "Action": [
            "secretsmanager:DescribeSecret",
            "secretsmanager:GetSecretValue"
          ],
          "Condition": {
            "StringEquals": {
              "secretsmanager:ResourceTag/SageMaker": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowReadOnlySecretManagerActions"
        },
        {
          "Action": [
            "servicecatalog:TerminateProvisionedProduct",
            "servicecatalog:UpdateProvisionedProduct"
          ],
          "Condition": {
            "StringEquals": {
              "servicecatalog:userLevel": "self"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowServiceCatalogTerminateUpdateProvisionProduct"
        },
        {
          "Action": [
            "sagemaker-geospatial:*",
            "sagemaker:*"
          ],
          "Effect": "Allow",
          "NotResource": [
            "arn:aws:sagemaker:*:*:app/*",
            "arn:aws:sagemaker:*:*:domain/*",
            "arn:aws:sagemaker:*:*:flow-definition/*",
            "arn:aws:sagemaker:*:*:space/*",
            "arn:aws:sagemaker:*:*:user-profile/*"
          ],
          "Sid": "AllowAllNonAdminSageMakerActions"
        },
        {
          "Action": [
            "application-autoscaling:DeleteScalingPolicy",
            "application-autoscaling:DeleteScheduledAction",
            "application-autoscaling:DeregisterScalableTarget",
            "application-autoscaling:DescribeScalableTargets",
            "application-autoscaling:DescribeScalingActivities",
            "application-autoscaling:DescribeScalingPolicies",
            "application-autoscaling:DescribeScheduledActions",
            "application-autoscaling:PutScalingPolicy",
            "application-autoscaling:PutScheduledAction",
            "application-autoscaling:RegisterScalableTarget",
            "aws-marketplace:ViewSubscriptions",
            "cloudformation:GetTemplateSummary",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:GetMetricData",
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:ListMetrics",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:PutMetricData",
            "codecommit:BatchGetRepositories",
            "codecommit:CreateRepository",
            "codecommit:GetRepository",
            "codecommit:List*",
            "cognito-idp:AdminAddUserToGroup",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminDeleteUser",
            "cognito-idp:AdminDisableUser",
            "cognito-idp:AdminEnableUser",
            "cognito-idp:AdminRemoveUserFromGroup",
            "cognito-idp:CreateGroup",
            "cognito-idp:CreateUserPool",
            "cognito-idp:CreateUserPoolClient",
            "cognito-idp:CreateUserPoolDomain",
            "cognito-idp:DescribeUserPool",
            "cognito-idp:DescribeUserPoolClient",
            "cognito-idp:List*",
            "cognito-idp:UpdateUserPool",
            "cognito-idp:UpdateUserPoolClient",
            "ec2:CreateNetworkInterface",
            "ec2:CreateNetworkInterfacePermission",
            "ec2:CreateVpcEndpoint",
            "ec2:DeleteNetworkInterface",
            "ec2:DeleteNetworkInterfacePermission",
            "ec2:DescribeDhcpOptions",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcEndpoints",
            "ec2:DescribeVpcs",
            "ecr:BatchCheckLayerAvailability",
            "ecr:BatchGetImage",
            "ecr:CreateRepository",
            "ecr:Describe*",
            "ecr:GetAuthorizationToken",
            "ecr:GetDownloadUrlForLayer",
            "ecr:StartImageScan",
            "elastic-inference:Connect",
            "elasticfilesystem:DescribeFileSystems",
            "elasticfilesystem:DescribeMountTargets",
            "fsx:DescribeFileSystems",
            "glue:CreateJob",
            "glue:DeleteJob",
            "glue:GetJob*",
            "glue:GetTable*",
            "glue:GetWorkflowRun",
            "glue:ResetJobBookmark",
            "glue:StartJobRun",
            "glue:StartWorkflowRun",
            "glue:UpdateJob",
            "groundtruthlabeling:*",
            "iam:ListRoles",
            "kms:DescribeKey",
            "kms:ListAliases",
            "lambda:ListFunctions",
            "logs:CreateLogDelivery",
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:DeleteLogDelivery",
            "logs:Describe*",
            "logs:GetLogDelivery",
            "logs:GetLogEvents",
            "logs:ListLogDeliveries",
            "logs:PutLogEvents",
            "logs:PutResourcePolicy",
            "logs:UpdateLogDelivery",
            "robomaker:CancelSimulationJob",
            "robomaker:CreateSimulationApplication",
            "robomaker:CreateSimulationJob",
            "robomaker:DeleteSimulationApplication",
            "robomaker:DescribeSimulationApplication",
            "robomaker:DescribeSimulationJob",
            "secretsmanager:ListSecrets",
            "servicecatalog:Describe*",
            "servicecatalog:List*",
            "servicecatalog:ScanProvisionedProducts",
            "servicecatalog:SearchProducts",
            "servicecatalog:SearchProvisionedProducts",
            "sns:ListTopics",
            "tag:GetResources"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowAWSServiceActions"
        },
        {
          "Action": [
            "athena:GetQueryExecution",
            "athena:GetQueryResults",
            "athena:ListDataCatalogs",
            "athena:ListDatabases",
            "athena:ListTableMetadata",
            "athena:StartQueryExecution",
            "athena:StopQueryExecution"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "AllowAthenaActions"
        },
        {
          "Action": [
            "cloudformation:ListStackResources"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:cloudformation:*:*:stack/SC-*",
          "Sid": "AllowCloudformationListStackResources"
        },
        {
          "Action": [
            "codebuild:BatchGetBuilds",
            "codebuild:StartBuild"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:codebuild:*:*:build/*",
            "arn:aws:codebuild:*:*:project/sagemaker*"
          ],
          "Sid": "AllowCodeBuildActions"
        },
        {
          "Action": [
            "codecommit:GitPull",
            "codecommit:GitPush"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:codecommit:*:*:*SageMaker*",
            "arn:aws:codecommit:*:*:*Sagemaker*",
            "arn:aws:codecommit:*:*:*sagemaker*"
          ],
          "Sid": "AllowCodeCommitActions"
        },
        {
          "Action": [
            "ecr:BatchDeleteImage",
            "ecr:CompleteLayerUpload",
            "ecr:DeleteRepository",
            "ecr:DeleteRepositoryPolicy",
            "ecr:InitiateLayerUpload",
            "ecr:PutImage",
            "ecr:SetRepositoryPolicy",
            "ecr:UploadLayerPart"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ecr:*:*:repository/*sagemaker*"
          ],
          "Sid": "AllowECRActions"
        },
        {
          "Action": [
            "glue:CreateDatabase",
            "glue:GetDatabase"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/default",
            "arn:aws:glue:*:*:database/sagemaker_data_wrangler",
            "arn:aws:glue:*:*:database/sagemaker_featurestore",
            "arn:aws:glue:*:*:database/sagemaker_processing"
          ],
          "Sid": "AllowGlueGetAndCreateDatabase"
        },
        {
          "Action": [
            "glue:CreateTable"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/*",
            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
            "arn:aws:glue:*:*:table/sagemaker_featurestore/*"
          ],
          "Sid": "AllowGlueCreateTable"
        },
        {
          "Action": [
            "glue:DeleteTable"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/*",
            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*"
          ],
          "Sid": "AllowGlueDeleteTable"
        },
        {
          "Action": [
            "glue:GetDatabases",
            "glue:GetTable",
            "glue:GetTables"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/*",
            "arn:aws:glue:*:*:table/*"
          ],
          "Sid": "AllowGlueGetTablesAndDatabases"
        },
        {
          "Action": [
            "glue:UpdateTable"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:glue:*:*:catalog",
            "arn:aws:glue:*:*:database/sagemaker_featurestore",
            "arn:aws:glue:*:*:table/sagemaker_featurestore/*"
          ],
          "Sid": "AllowGlueUpdateTable"
        },
        {
          "Action": [
            "lambda:InvokeFunction"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:lambda:*:*:function:*LabelingFunction*",
            "arn:aws:lambda:*:*:function:*SageMaker*",
            "arn:aws:lambda:*:*:function:*Sagemaker*",
            "arn:aws:lambda:*:*:function:*sagemaker*"
          ],
          "Sid": "AllowLambdaInvokeFunction"
        },
        {
          "Action": [
            "redshift-data:CancelStatement",
            "redshift-data:DescribeStatement",
            "redshift-data:ExecuteStatement",
            "redshift-data:GetStatementResult",
            "redshift-data:ListSchemas",
            "redshift-data:ListTables"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "AllowRedshiftDataActions"
        },
        {
          "Action": [
            "redshift:GetClusterCredentials"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift:*:*:dbname:*",
            "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*"
          ],
          "Sid": "AllowRedshiftGetClusterCredentials"
        },
        {
          "Action": [
            "s3:AbortMultipartUpload",
            "s3:DeleteObject",
            "s3:GetObject",
            "s3:PutObject"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*SageMaker*",
            "arn:aws:s3:::*Sagemaker*",
            "arn:aws:s3:::*aws-glue*",
            "arn:aws:s3:::*sagemaker*"
          ],
          "Sid": "AllowS3ObjectActions"
        },
        {
          "Action": [
            "s3:CreateBucket",
            "s3:GetBucketCors",
            "s3:GetBucketLocation",
            "s3:ListAllMyBuckets",
            "s3:ListBucket",
            "s3:PutBucketCors"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowS3BucketActions"
        },
        {
          "Action": [
            "s3:GetBucketAcl",
            "s3:PutObjectAcl"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::*SageMaker*",
            "arn:aws:s3:::*Sagemaker*",
            "arn:aws:s3:::*sagemaker*"
          ],
          "Sid": "AllowS3BucketACL"
        },
        {
          "Action": [
            "s3express:ListAllMyDirectoryBuckets"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowS3ExpressListBucketActions"
        },
        {
          "Action": [
            "sagemaker:AddTags"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:sagemaker:*:*:app/*"
          ],
          "Sid": "AllowAddTagsForApp"
        },
        {
          "Action": [
            "sagemaker:CreatePresignedDomainUrl",
            "sagemaker:DescribeApp",
            "sagemaker:DescribeDomain",
            "sagemaker:DescribeSpace",
            "sagemaker:DescribeUserProfile",
            "sagemaker:ListApps",
            "sagemaker:ListDomains",
            "sagemaker:ListSpaces",
            "sagemaker:ListUserProfiles"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowStudioActions"
        },
        {
          "Action": [
            "sagemaker:ListTags"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:sagemaker:*:*:user-profile/*"
          ],
          "Sid": "AllowListTagsForUserProfile"
        },
        {
          "Action": [
            "secretsmanager:CreateSecret",
            "secretsmanager:DescribeSecret",
            "secretsmanager:GetSecretValue"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
          ],
          "Sid": "AllowSecretManagerActions"
        },
        {
          "Action": [
            "servicecatalog:ProvisionProduct"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AllowServiceCatalogProvisionProduct"
        },
        {
          "Action": [
            "sns:CreateTopic",
            "sns:Publish",
            "sns:Subscribe"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:sns:*:*:*SageMaker*",
            "arn:aws:sns:*:*:*Sagemaker*",
            "arn:aws:sns:*:*:*sagemaker*"
          ],
          "Sid": "AllowSNSActions"
        },
        {
          "Action": [
            "states:DescribeExecution",
            "states:GetExecutionHistory",
            "states:StartExecution",
            "states:StopExecution",
            "states:UpdateStateMachine"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:states:*:*:execution:*sagemaker*:*",
            "arn:aws:states:*:*:statemachine:*sagemaker*"
          ],
          "Sid": "AllowStepFunctionsActions"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v25"
  },
  "UpdateDate": "2023-11-30T13:40:20Z"
}
