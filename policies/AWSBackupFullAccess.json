{
  "Arn": "arn:aws:iam::aws:policy/AWSBackupFullAccess",
  "CreateDate": "2019-11-18T22:21:52Z",
  "DefaultVersionId": "v20",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAZKAPJZG4LL52EIPJX",
  "PolicyName": "AWSBackupFullAccess",
  "PolicyVersion": {
    "CreateDate": "2025-05-22T00:37:07Z",
    "Document": {
      "Statement": [
        {
          "Action": "fsx:DeleteBackup",
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:fsx:*:*:backup/*",
          "Sid": "FsxDeletePermissions"
        },
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringEquals": {
              "iam:AWSServiceName": [
                "backup.amazonaws.com",
                "restore-testing.backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "IamCreateServiceLinkedRolePermissions"
        },
        {
          "Action": "iam:PassRole",
          "Condition": {
            "StringEquals": {
              "iam:PassedToService": [
                "backup.amazonaws.com",
                "restore-testing.backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/*AWSBackup*",
            "arn:aws:iam::*:role/*AwsBackup*"
          ],
          "Sid": "IamPassRolePermissions"
        },
        {
          "Action": [
            "dynamodb:DeleteBackup"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DynamoDbDeleteBackupPermissions"
        },
        {
          "Action": [
            "ec2:DeleteSnapshot",
            "ec2:DeregisterImage"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "Ec2DeletePermissions"
        },
        {
          "Action": [
            "kms:CreateGrant"
          ],
          "Condition": {
            "Bool": {
              "kms:GrantIsForAWSResource": true
            },
            "ForAnyValue:StringEquals": {
              "kms:EncryptionContextKeys": "aws:backup:backup-vault"
            },
            "StringLike": {
              "kms:ViaService": "backup.*.amazonaws.com"
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "KmsCreateGrantPermissions"
        },
        {
          "Action": [
            "rds:DeleteDBClusterSnapshot",
            "rds:DeleteDBSnapshot"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "backup.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RdsDeletePermissions"
        },
        {
          "Action": [
            "redshift-serverless:DeleteSnapshot"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "backup.amazonaws.com"
              ]
            },
            "Null": {
              "aws:ResourceTag/aws:backup:source-resource": "false"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:snapshot/*"
          ],
          "Sid": "RedshiftServerlessDeletetPermissions"
        },
        {
          "Action": "backup-storage:*",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AwsBackupStorageAllAccessPermissions"
        },
        {
          "Action": "backup:*",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AwsBackupAllAccessPermissions"
        },
        {
          "Action": "cloudwatch:GetMetricData",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "CloudWatchPermissions"
        },
        {
          "Action": "ds:DescribeDirectories",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DirectoryServicePermissions"
        },
        {
          "Action": "organizations:DescribeOrganization",
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "AwsOrganizationsPermissions"
        },
        {
          "Action": "ssm:SendCommand",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:instance/*",
            "arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot"
          ],
          "Sid": "SystemManagerSendCommandPermissions"
        },
        {
          "Action": [
            "backup-gateway:AssociateGatewayToServer",
            "backup-gateway:CreateGateway",
            "backup-gateway:DeleteGateway",
            "backup-gateway:DeleteHypervisor",
            "backup-gateway:DisassociateGatewayFromServer",
            "backup-gateway:ImportHypervisorConfiguration",
            "backup-gateway:ListGateways",
            "backup-gateway:ListHypervisors",
            "backup-gateway:ListTagsForResource",
            "backup-gateway:ListVirtualMachines",
            "backup-gateway:PutMaintenanceStartTime",
            "backup-gateway:TagResource",
            "backup-gateway:TestHypervisorConfiguration",
            "backup-gateway:UntagResource",
            "backup-gateway:UpdateGatewayInformation",
            "backup-gateway:UpdateHypervisor"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "BackupGatewayPermissions"
        },
        {
          "Action": [
            "backup-gateway:GetBandwidthRateLimitSchedule",
            "backup-gateway:GetGateway",
            "backup-gateway:PutBandwidthRateLimitSchedule"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:backup-gateway:*:*:gateway/*",
          "Sid": "BackupGatewayGatewayPermissions"
        },
        {
          "Action": [
            "backup-gateway:GetHypervisor",
            "backup-gateway:GetHypervisorPropertyMappings",
            "backup-gateway:PutHypervisorPropertyMappings",
            "backup-gateway:StartVirtualMachinesMetadataSync"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:backup-gateway:*:*:hypervisor/*",
          "Sid": "BackupGatewayHypervisorPermissions"
        },
        {
          "Action": [
            "backup-gateway:GetVirtualMachine"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:backup-gateway:*:*:vm/*",
          "Sid": "BackupGatewayVirtualMachinePermissions"
        },
        {
          "Action": [
            "cloudformation:ListStacks"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/*"
          ],
          "Sid": "CloudFormationStackPermissions"
        },
        {
          "Action": [
            "dsql:GetCluster",
            "dsql:ListClusters",
            "dsql:ListTagsForResource"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DSQLDescribePermissions"
        },
        {
          "Action": [
            "dynamodb:ListBackups",
            "dynamodb:ListTables"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "DynamoDbPermissions"
        },
        {
          "Action": [
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAddresses",
            "ec2:DescribeImages",
            "ec2:DescribeInstanceTypes",
            "ec2:DescribeInstances",
            "ec2:DescribePlacementGroups",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSnapshots",
            "ec2:DescribeSubnets",
            "ec2:DescribeVolumes",
            "ec2:DescribeVpcEndpoints",
            "ec2:DescribeVpcs",
            "ec2:describeAvailabilityZones"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "Ec2Permissions"
        },
        {
          "Action": [
            "elasticfilesystem:DescribeFilesystems"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*",
          "Sid": "EfsFileSystemPermissions"
        },
        {
          "Action": [
            "fsx:DescribeBackups",
            "fsx:DescribeFileSystems",
            "fsx:DescribeStorageVirtualMachines",
            "fsx:DescribeVolumes"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "FsxPermissions"
        },
        {
          "Action": [
            "iam:GetRole",
            "iam:ListRoles"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "IamRolePermissions"
        },
        {
          "Action": [
            "kms:DescribeKey",
            "kms:GenerateDataKey",
            "kms:ListAliases",
            "kms:ListKeys"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "KmsPermissions"
        },
        {
          "Action": [
            "ram:GetResourceShareAssociations"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ResourceAccessManagerPermissions"
        },
        {
          "Action": [
            "rds:DescribeDBClusterAutomatedBackups",
            "rds:DescribeDBClusterParameterGroups",
            "rds:DescribeDBInstanceAutomatedBackups",
            "rds:DescribeDBInstances",
            "rds:DescribeDBSnapshots",
            "rds:ListTagsForResource",
            "rds:describeDBClusterSnapshots",
            "rds:describeDBClusters",
            "rds:describeDBEngineVersions",
            "rds:describeDBParameterGroups",
            "rds:describeDBSubnetGroups",
            "rds:describeOptionGroups",
            "rds:describeOrderableDBInstanceOptions"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RdsPermissions"
        },
        {
          "Action": [
            "redshift-serverless:GetNamespace",
            "redshift-serverless:GetSnapshot",
            "redshift-serverless:GetWorkgroup"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift-serverless:*:*:namespace/*",
            "arn:aws:redshift-serverless:*:*:snapshot/*",
            "arn:aws:redshift-serverless:*:*:workgroup/*"
          ],
          "Sid": "RedshiftServerlessGetPermissions"
        },
        {
          "Action": [
            "redshift-serverless:ListNamespaces",
            "redshift-serverless:ListSnapshots",
            "redshift-serverless:ListWorkgroups"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "RedshiftServerlessListPermissions"
        },
        {
          "Action": [
            "redshift:DescribeClusterParameterGroups",
            "redshift:DescribeClusterTracks",
            "redshift:DescribeNodeConfigurationOptions",
            "redshift:DescribeOrderableClusterOptions"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "RedshiftPermissions"
        },
        {
          "Action": [
            "redshift:DescribeClusterSnapshots",
            "redshift:DescribeClusterSubnetGroups",
            "redshift:DescribeClusters",
            "redshift:DescribeSnapshotSchedules"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:redshift:*:*:cluster:*",
            "arn:aws:redshift:*:*:snapshot:*/*",
            "arn:aws:redshift:*:*:snapshotschedule:*",
            "arn:aws:redshift:*:*:subnetgroup:*"
          ],
          "Sid": "RedshiftResourcesPermissions"
        },
        {
          "Action": [
            "s3:ListAllMyBuckets"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:s3:::*",
          "Sid": "S3BucketPermissions"
        },
        {
          "Action": [
            "ssm-sap:GetDatabase",
            "ssm-sap:GetOperation",
            "ssm-sap:ListDatabases",
            "ssm-sap:ListTagsForResource"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "SystemsManagerForSapPermissions"
        },
        {
          "Action": [
            "ssm:CancelCommand",
            "ssm:GetCommandInvocation"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "SystemManagerCommandPermissions"
        },
        {
          "Action": [
            "storagegateway:DescribeCachediSCSIVolumes",
            "storagegateway:DescribeStorediSCSIVolumes"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:storagegateway:*:*:gateway/*/volume/*",
          "Sid": "StorageGatewayVolumePermissions"
        },
        {
          "Action": [
            "storagegateway:DescribeGatewayInformation",
            "storagegateway:ListLocalDisks"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:storagegateway:*:*:gateway/*",
          "Sid": "StorageGatewayGatewayPermissions"
        },
        {
          "Action": [
            "storagegateway:ListGateways"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:storagegateway:*:*:*",
          "Sid": "StorageGatewayPermissions"
        },
        {
          "Action": [
            "storagegateway:ListVolumes"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "StorageGatewayGatewayStarPermissions"
        },
        {
          "Action": [
            "tag:GetResources",
            "tag:GetTagKeys",
            "tag:GetTagValues"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ResourceGroupTaggingPermissions"
        },
        {
          "Action": [
            "timestream:DescribeEndpoints"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "TimestreamPermissions"
        },
        {
          "Action": [
            "timestream:ListDatabases",
            "timestream:ListTables"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:timestream:*:*:database/*"
          ],
          "Sid": "TimestreamDatabasePermissions"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v20"
  },
  "UpdateDate": "2025-05-22T00:37:07Z"
}
