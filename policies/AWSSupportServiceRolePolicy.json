{
  "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
  "CreateDate": "2018-04-19T18:04:44Z",
  "DefaultVersionId": "v33",
  "IsAttachable": true,
  "Path": "/aws-service-role/",
  "PolicyId": "ANPAJ7W6266ELXF5MISDS",
  "PolicyName": "AWSSupportServiceRolePolicy",
  "PolicyVersion": {
    "CreateDate": "2023-12-07T01:43:36Z",
    "Document": {
      "Statement": [
        {
          "Action": [
            "access-analyzer:getAccessPreview",
            "access-analyzer:getAnalyzedResource",
            "access-analyzer:getAnalyzer",
            "access-analyzer:getArchiveRule",
            "access-analyzer:getFinding",
            "access-analyzer:getGeneratedPolicy",
            "access-analyzer:listAccessPreviewFindings",
            "access-analyzer:listAccessPreviews",
            "access-analyzer:listAnalyzedResources",
            "access-analyzer:listAnalyzers",
            "access-analyzer:listArchiveRules",
            "access-analyzer:listFindings",
            "access-analyzer:listPolicyGenerations",
            "acm-pca:describeCertificateAuthority",
            "acm-pca:describeCertificateAuthorityAuditReport",
            "acm-pca:getCertificate",
            "acm-pca:getCertificateAuthorityCertificate",
            "acm-pca:getCertificateAuthorityCsr",
            "acm-pca:listCertificateAuthorities",
            "acm-pca:listTags",
            "acm:describeCertificate",
            "acm:getAccountConfiguration",
            "acm:getCertificate",
            "acm:listCertificates",
            "acm:listTagsForCertificate",
            "airflow:getEnvironment",
            "airflow:listEnvironments",
            "airflow:listTagsForResource",
            "amplify:getApp",
            "amplify:getBackendEnvironment",
            "amplify:getBranch",
            "amplify:getDomainAssociation",
            "amplify:getJob",
            "amplify:getWebhook",
            "amplify:listApps",
            "amplify:listBackendEnvironments",
            "amplify:listBranches",
            "amplify:listDomainAssociations",
            "amplify:listWebhooks",
            "amplifyuibuilder:exportComponents",
            "amplifyuibuilder:exportThemes",
            "appflow:describeConnectorEntity",
            "appflow:describeConnectorProfiles",
            "appflow:describeConnectors",
            "appflow:describeFlow",
            "appflow:describeFlowExecutionRecords",
            "appflow:listConnectorEntities",
            "appflow:listFlows",
            "application-autoscaling:describeScalableTargets",
            "application-autoscaling:describeScalingActivities",
            "application-autoscaling:describeScalingPolicies",
            "application-autoscaling:describeScheduledActions",
            "applicationinsights:describeApplication",
            "applicationinsights:describeComponent",
            "applicationinsights:describeComponentConfiguration",
            "applicationinsights:describeComponentConfigurationRecommendation",
            "applicationinsights:describeLogPattern",
            "applicationinsights:describeObservation",
            "applicationinsights:describeProblem",
            "applicationinsights:describeProblemObservations",
            "applicationinsights:listApplications",
            "applicationinsights:listComponents",
            "applicationinsights:listConfigurationHistory",
            "applicationinsights:listLogPatternSets",
            "applicationinsights:listLogPatterns",
            "applicationinsights:listProblems",
            "appmesh:describeGatewayRoute",
            "appmesh:describeMesh",
            "appmesh:describeRoute",
            "appmesh:describeVirtualGateway",
            "appmesh:describeVirtualNode",
            "appmesh:describeVirtualRouter",
            "appmesh:describeVirtualService",
            "appmesh:listGatewayRoutes",
            "appmesh:listMeshes",
            "appmesh:listRoutes",
            "appmesh:listTagsForResource",
            "appmesh:listVirtualGateways",
            "appmesh:listVirtualNodes",
            "appmesh:listVirtualRouters",
            "appmesh:listVirtualServices",
            "apprunner:describeAutoScalingConfiguration",
            "apprunner:describeCustomDomains",
            "apprunner:describeOperation",
            "apprunner:describeService",
            "apprunner:listAutoScalingConfigurations",
            "apprunner:listConnections",
            "apprunner:listOperations",
            "apprunner:listServices",
            "apprunner:listTagsForResource",
            "appstream:describeAppBlockBuilderAppBlockAssociations",
            "appstream:describeAppBlockBuilders",
            "appstream:describeAppBlocks",
            "appstream:describeApplicationFleetAssociations",
            "appstream:describeApplications",
            "appstream:describeDirectoryConfigs",
            "appstream:describeEntitlements",
            "appstream:describeFleets",
            "appstream:describeImageBuilders",
            "appstream:describeImagePermissions",
            "appstream:describeImages",
            "appstream:describeSessions",
            "appstream:describeStacks",
            "appstream:describeUsageReportSubscriptions",
            "appstream:describeUserStackAssociations",
            "appstream:describeUsers",
            "appstream:listAssociatedFleets",
            "appstream:listAssociatedStacks",
            "appstream:listEntitledApplications",
            "appstream:listTagsForResource",
            "appsync:getApiAssociation",
            "appsync:getApiCache",
            "appsync:getDomainName",
            "appsync:getFunction",
            "appsync:getGraphqlApi",
            "appsync:getIntrospectionSchema",
            "appsync:getResolver",
            "appsync:getSchemaCreationStatus",
            "appsync:getSourceApiAssociation",
            "appsync:getType",
            "appsync:listDataSources",
            "appsync:listDomainNames",
            "appsync:listFunctions",
            "appsync:listGraphqlApis",
            "appsync:listResolvers",
            "appsync:listResolversByFunction",
            "appsync:listSourceApiAssociations",
            "appsync:listTypes",
            "appsync:listTypesByAssociation",
            "aps:describeAlertManagerDefinition",
            "aps:describeRuleGroupsNamespace",
            "aps:describeWorkspace",
            "aps:listRuleGroupsNamespaces",
            "aps:listWorkspaces",
            "athena:batchGetNamedQuery",
            "athena:batchGetQueryExecution",
            "athena:getCalculationExecution",
            "athena:getCalculationExecutionStatus",
            "athena:getDataCatalog",
            "athena:getNamedQuery",
            "athena:getNotebookMetadata",
            "athena:getQueryExecution",
            "athena:getQueryRuntimeStatistics",
            "athena:getSession",
            "athena:getSessionStatus",
            "athena:getWorkGroup",
            "athena:listApplicationDPUSizes",
            "athena:listCalculationExecutions",
            "athena:listDataCatalogs",
            "athena:listEngineVersions",
            "athena:listExecutors",
            "athena:listNamedQueries",
            "athena:listNotebookMetadata",
            "athena:listNotebookSessions",
            "athena:listQueryExecutions",
            "athena:listSessions",
            "athena:listTagsForResource",
            "athena:listWorkGroups",
            "auditmanager:getAccountStatus",
            "auditmanager:getDelegations",
            "auditmanager:listAssessmentFrameworks",
            "auditmanager:listAssessmentReports",
            "auditmanager:listAssessments",
            "auditmanager:listControls",
            "auditmanager:listKeywordsForDataSource",
            "auditmanager:listNotifications",
            "autoscaling-plans:describeScalingPlanResources",
            "autoscaling-plans:describeScalingPlans",
            "autoscaling-plans:getScalingPlanResourceForecastData",
            "autoscaling:describeAccountLimits",
            "autoscaling:describeAdjustmentTypes",
            "autoscaling:describeAutoScalingGroups",
            "autoscaling:describeAutoScalingInstances",
            "autoscaling:describeAutoScalingNotificationTypes",
            "autoscaling:describeInstanceRefreshes",
            "autoscaling:describeLaunchConfigurations",
            "autoscaling:describeLifecycleHookTypes",
            "autoscaling:describeLifecycleHooks",
            "autoscaling:describeLoadBalancerTargetGroups",
            "autoscaling:describeLoadBalancers",
            "autoscaling:describeMetricCollectionTypes",
            "autoscaling:describeNotificationConfigurations",
            "autoscaling:describePolicies",
            "autoscaling:describeScalingActivities",
            "autoscaling:describeScalingProcessTypes",
            "autoscaling:describeScheduledActions",
            "autoscaling:describeTags",
            "autoscaling:describeTerminationPolicyTypes",
            "autoscaling:describeWarmPool",
            "backup-gateway:getGateway",
            "backup-gateway:getHypervisor",
            "backup-gateway:getHypervisorPropertyMappings",
            "backup-gateway:getVirtualMachine",
            "backup-gateway:listGateways",
            "backup-gateway:listHypervisors",
            "backup-gateway:listVirtualMachines",
            "backup:describeBackupJob",
            "backup:describeBackupVault",
            "backup:describeCopyJob",
            "backup:describeFramework",
            "backup:describeGlobalSettings",
            "backup:describeProtectedResource",
            "backup:describeRecoveryPoint",
            "backup:describeRegionSettings",
            "backup:describeReportJob",
            "backup:describeReportPlan",
            "backup:describeRestoreJob",
            "backup:getBackupPlan",
            "backup:getBackupPlanFromJSON",
            "backup:getBackupPlanFromTemplate",
            "backup:getBackupSelection",
            "backup:getBackupVaultAccessPolicy",
            "backup:getBackupVaultNotifications",
            "backup:getLegalHold",
            "backup:getRecoveryPointRestoreMetadata",
            "backup:getSupportedResourceTypes",
            "backup:listBackupJobs",
            "backup:listBackupPlanTemplates",
            "backup:listBackupPlanVersions",
            "backup:listBackupPlans",
            "backup:listBackupSelections",
            "backup:listBackupVaults",
            "backup:listCopyJobs",
            "backup:listFrameworks",
            "backup:listLegalHolds",
            "backup:listProtectedResources",
            "backup:listRecoveryPointsByBackupVault",
            "backup:listRecoveryPointsByLegalHold",
            "backup:listRecoveryPointsByResource",
            "backup:listReportJobs",
            "backup:listReportPlans",
            "backup:listRestoreJobs",
            "backup:listTags",
            "batch:describeComputeEnvironments",
            "batch:describeJobDefinitions",
            "batch:describeJobQueues",
            "batch:describeJobs",
            "batch:listJobs",
            "braket:getDevice",
            "braket:getQuantumTask",
            "braket:searchDevices",
            "braket:searchQuantumTasks",
            "budgets:viewBudget",
            "ce:getCostAndUsage",
            "ce:getCostAndUsageWithResources",
            "ce:getCostForecast",
            "ce:getDimensionValues",
            "ce:getReservationCoverage",
            "ce:getReservationPurchaseRecommendation",
            "ce:getReservationUtilization",
            "ce:getRightsizingRecommendation",
            "ce:getSavingsPlansCoverage",
            "ce:getSavingsPlansPurchaseRecommendation",
            "ce:getSavingsPlansUtilization",
            "ce:getSavingsPlansUtilizationDetails",
            "ce:getTags",
            "chime:describeAppInstance",
            "chime:getAttendee",
            "chime:getGlobalSettings",
            "chime:getMediaCapturePipeline",
            "chime:getMediaPipeline",
            "chime:getMeeting",
            "chime:getProxySession",
            "chime:getSipMediaApplication",
            "chime:getSipRule",
            "chime:getVoiceConnector",
            "chime:getVoiceConnectorGroup",
            "chime:getVoiceConnectorLoggingConfiguration",
            "chime:listAppInstances",
            "chime:listAttendees",
            "chime:listChannelBans",
            "chime:listChannels",
            "chime:listChannelsModeratedByAppInstanceUser",
            "chime:listMediaCapturePipelines",
            "chime:listMediaPipelines",
            "chime:listMeetings",
            "chime:listSipMediaApplications",
            "chime:listSipRules",
            "chime:listVoiceConnectorGroups",
            "chime:listVoiceConnectors",
            "cleanrooms:batchGetSchema",
            "cleanrooms:getCollaboration",
            "cleanrooms:getConfiguredTable",
            "cleanrooms:getConfiguredTableAssociation",
            "cleanrooms:getMembership",
            "cleanrooms:getSchema",
            "cleanrooms:listCollaborations",
            "cleanrooms:listConfiguredTableAssociations",
            "cleanrooms:listConfiguredTables",
            "cleanrooms:listMembers",
            "cleanrooms:listMemberships",
            "cleanrooms:listSchemas",
            "cloud9:describeEnvironmentMemberships",
            "cloud9:describeEnvironments",
            "cloud9:listEnvironments",
            "clouddirectory:getDirectory",
            "clouddirectory:listDirectories",
            "cloudformation:batchDescribeTypeConfigurations",
            "cloudformation:describeAccountLimits",
            "cloudformation:describeChangeSet",
            "cloudformation:describeChangeSetHooks",
            "cloudformation:describePublisher",
            "cloudformation:describeStackEvents",
            "cloudformation:describeStackInstance",
            "cloudformation:describeStackResource",
            "cloudformation:describeStackResources",
            "cloudformation:describeStackSet",
            "cloudformation:describeStackSetOperation",
            "cloudformation:describeStacks",
            "cloudformation:describeType",
            "cloudformation:describeTypeRegistration",
            "cloudformation:estimateTemplateCost",
            "cloudformation:getStackPolicy",
            "cloudformation:getTemplate",
            "cloudformation:getTemplateSummary",
            "cloudformation:listChangeSets",
            "cloudformation:listExports",
            "cloudformation:listImports",
            "cloudformation:listStackInstances",
            "cloudformation:listStackResources",
            "cloudformation:listStackSetOperationResults",
            "cloudformation:listStackSetOperations",
            "cloudformation:listStackSets",
            "cloudformation:listStacks",
            "cloudformation:listTypeRegistrations",
            "cloudformation:listTypeVersions",
            "cloudformation:listTypes",
            "cloudfront:describeFunction",
            "cloudfront:getCachePolicy",
            "cloudfront:getCachePolicyConfig",
            "cloudfront:getCloudFrontOriginAccessIdentity",
            "cloudfront:getCloudFrontOriginAccessIdentityConfig",
            "cloudfront:getContinuousDeploymentPolicy",
            "cloudfront:getContinuousDeploymentPolicyConfig",
            "cloudfront:getDistribution",
            "cloudfront:getDistributionConfig",
            "cloudfront:getInvalidation",
            "cloudfront:getKeyGroup",
            "cloudfront:getKeyGroupConfig",
            "cloudfront:getMonitoringSubscription",
            "cloudfront:getOriginAccessControl",
            "cloudfront:getOriginAccessControlConfig",
            "cloudfront:getOriginRequestPolicy",
            "cloudfront:getOriginRequestPolicyConfig",
            "cloudfront:getPublicKey",
            "cloudfront:getPublicKeyConfig",
            "cloudfront:getRealtimeLogConfig",
            "cloudfront:getStreamingDistribution",
            "cloudfront:getStreamingDistributionConfig",
            "cloudfront:listCachePolicies",
            "cloudfront:listCloudFrontOriginAccessIdentities",
            "cloudfront:listContinuousDeploymentPolicies",
            "cloudfront:listDistributions",
            "cloudfront:listDistributionsByCachePolicyId",
            "cloudfront:listDistributionsByKeyGroup",
            "cloudfront:listDistributionsByOriginRequestPolicyId",
            "cloudfront:listDistributionsByRealtimeLogConfig",
            "cloudfront:listDistributionsByResponseHeadersPolicyId",
            "cloudfront:listDistributionsByWebACLId",
            "cloudfront:listFunctions",
            "cloudfront:listInvalidations",
            "cloudfront:listKeyGroups",
            "cloudfront:listOriginAccessControls",
            "cloudfront:listOriginRequestPolicies",
            "cloudfront:listPublicKeys",
            "cloudfront:listRealtimeLogConfigs",
            "cloudfront:listStreamingDistributions",
            "cloudhsm:describeBackups",
            "cloudhsm:describeClusters",
            "cloudsearch:describeAnalysisSchemes",
            "cloudsearch:describeAvailabilityOptions",
            "cloudsearch:describeDomains",
            "cloudsearch:describeExpressions",
            "cloudsearch:describeIndexFields",
            "cloudsearch:describeScalingParameters",
            "cloudsearch:describeServiceAccessPolicies",
            "cloudsearch:describeSuggesters",
            "cloudsearch:listDomainNames",
            "cloudtrail:describeTrails",
            "cloudtrail:getEventSelectors",
            "cloudtrail:getInsightSelectors",
            "cloudtrail:getTrail",
            "cloudtrail:getTrailStatus",
            "cloudtrail:listPublicKeys",
            "cloudtrail:listTags",
            "cloudtrail:listTrails",
            "cloudtrail:lookupEvents",
            "cloudwatch:describeAlarmHistory",
            "cloudwatch:describeAlarms",
            "cloudwatch:describeAlarmsForMetric",
            "cloudwatch:describeAnomalyDetectors",
            "cloudwatch:describeInsightRules",
            "cloudwatch:getDashboard",
            "cloudwatch:getInsightRuleReport",
            "cloudwatch:getMetricData",
            "cloudwatch:getMetricStatistics",
            "cloudwatch:getMetricStream",
            "cloudwatch:listDashboards",
            "cloudwatch:listManagedInsightRules",
            "cloudwatch:listMetricStreams",
            "cloudwatch:listMetrics",
            "codeartifact:describeDomain",
            "codeartifact:describePackageVersion",
            "codeartifact:describeRepository",
            "codeartifact:getDomainPermissionsPolicy",
            "codeartifact:getRepositoryEndpoint",
            "codeartifact:getRepositoryPermissionsPolicy",
            "codeartifact:listDomains",
            "codeartifact:listPackageVersionAssets",
            "codeartifact:listPackageVersions",
            "codeartifact:listPackages",
            "codeartifact:listRepositories",
            "codeartifact:listRepositoriesInDomain",
            "codebuild:batchGetBuildBatches",
            "codebuild:batchGetBuilds",
            "codebuild:batchGetProjects",
            "codebuild:listBuildBatches",
            "codebuild:listBuildBatchesForProject",
            "codebuild:listBuilds",
            "codebuild:listBuildsForProject",
            "codebuild:listCuratedEnvironmentImages",
            "codebuild:listProjects",
            "codebuild:listSourceCredentials",
            "codecommit:batchGetRepositories",
            "codecommit:getBranch",
            "codecommit:getRepository",
            "codecommit:getRepositoryTriggers",
            "codecommit:listBranches",
            "codecommit:listRepositories",
            "codedeploy:batchGetApplicationRevisions",
            "codedeploy:batchGetApplications",
            "codedeploy:batchGetDeploymentGroups",
            "codedeploy:batchGetDeploymentInstances",
            "codedeploy:batchGetDeploymentTargets",
            "codedeploy:batchGetDeployments",
            "codedeploy:batchGetOnPremisesInstances",
            "codedeploy:getApplication",
            "codedeploy:getApplicationRevision",
            "codedeploy:getDeployment",
            "codedeploy:getDeploymentConfig",
            "codedeploy:getDeploymentGroup",
            "codedeploy:getDeploymentInstance",
            "codedeploy:getDeploymentTarget",
            "codedeploy:getOnPremisesInstance",
            "codedeploy:listApplicationRevisions",
            "codedeploy:listApplications",
            "codedeploy:listDeploymentConfigs",
            "codedeploy:listDeploymentGroups",
            "codedeploy:listDeploymentInstances",
            "codedeploy:listDeploymentTargets",
            "codedeploy:listDeployments",
            "codedeploy:listGitHubAccountTokenNames",
            "codedeploy:listOnPremisesInstances",
            "codepipeline:getJobDetails",
            "codepipeline:getPipeline",
            "codepipeline:getPipelineExecution",
            "codepipeline:getPipelineState",
            "codepipeline:listActionExecutions",
            "codepipeline:listActionTypes",
            "codepipeline:listPipelineExecutions",
            "codepipeline:listPipelines",
            "codepipeline:listWebhooks",
            "codestar:describeProject",
            "codestar:listProjects",
            "codestar:listResources",
            "codestar:listTeamMembers",
            "codestar:listUserProfiles",
            "cognito-identity:describeIdentityPool",
            "cognito-identity:getIdentityPoolRoles",
            "cognito-identity:listIdentities",
            "cognito-identity:listIdentityPools",
            "cognito-idp:describeIdentityProvider",
            "cognito-idp:describeResourceServer",
            "cognito-idp:describeRiskConfiguration",
            "cognito-idp:describeUserImportJob",
            "cognito-idp:describeUserPool",
            "cognito-idp:describeUserPoolClient",
            "cognito-idp:describeUserPoolDomain",
            "cognito-idp:getGroup",
            "cognito-idp:getUICustomization",
            "cognito-idp:getUserPoolMfaConfig",
            "cognito-idp:listGroups",
            "cognito-idp:listIdentityProviders",
            "cognito-idp:listResourceServers",
            "cognito-idp:listUserImportJobs",
            "cognito-idp:listUserPoolClients",
            "cognito-idp:listUserPools",
            "cognito-sync:describeDataset",
            "cognito-sync:describeIdentityPoolUsage",
            "cognito-sync:describeIdentityUsage",
            "cognito-sync:getCognitoEvents",
            "cognito-sync:getIdentityPoolConfiguration",
            "cognito-sync:listDatasets",
            "cognito-sync:listIdentityPoolUsage",
            "comprehend:describeDocumentClassificationJob",
            "comprehend:describeDocumentClassifier",
            "comprehend:describeDominantLanguageDetectionJob",
            "comprehend:describeEndpoint",
            "comprehend:describeEntitiesDetectionJob",
            "comprehend:describeEntityRecognizer",
            "comprehend:describeEventsDetectionJob",
            "comprehend:describeFlywheel",
            "comprehend:describeFlywheelIteration",
            "comprehend:describeKeyPhrasesDetectionJob",
            "comprehend:describePiiEntitiesDetectionJob",
            "comprehend:describeSentimentDetectionJob",
            "comprehend:describeTargetedSentimentDetectionJob",
            "comprehend:describeTopicsDetectionJob",
            "comprehend:listDocumentClassificationJobs",
            "comprehend:listDocumentClassifiers",
            "comprehend:listDominantLanguageDetectionJobs",
            "comprehend:listEndpoints",
            "comprehend:listEntitiesDetectionJobs",
            "comprehend:listEntityRecognizers",
            "comprehend:listEventsDetectionJobs",
            "comprehend:listFlywheelIterationHistory",
            "comprehend:listFlywheels",
            "comprehend:listKeyPhrasesDetectionJobs",
            "comprehend:listPiiEntitiesDetectionJobs",
            "comprehend:listSentimentDetectionJobs",
            "comprehend:listTargetedSentimentDetectionJobs",
            "comprehend:listTopicsDetectionJobs",
            "compute-optimizer:getAutoScalingGroupRecommendations",
            "compute-optimizer:getEBSVolumeRecommendations",
            "compute-optimizer:getEC2InstanceRecommendations",
            "compute-optimizer:getEC2RecommendationProjectedMetrics",
            "compute-optimizer:getECSServiceRecommendationProjectedMetrics",
            "compute-optimizer:getECSServiceRecommendations",
            "compute-optimizer:getEnrollmentStatus",
            "compute-optimizer:getRecommendationSummaries",
            "config:batchGetAggregateResourceConfig",
            "config:batchGetResourceConfig",
            "config:describeAggregateComplianceByConfigRules",
            "config:describeAggregationAuthorizations",
            "config:describeComplianceByConfigRule",
            "config:describeComplianceByResource",
            "config:describeConfigRuleEvaluationStatus",
            "config:describeConfigRules",
            "config:describeConfigurationAggregatorSourcesStatus",
            "config:describeConfigurationAggregators",
            "config:describeConfigurationRecorderStatus",
            "config:describeConfigurationRecorders",
            "config:describeConformancePackCompliance",
            "config:describeConformancePackStatus",
            "config:describeConformancePacks",
            "config:describeDeliveryChannelStatus",
            "config:describeDeliveryChannels",
            "config:describeOrganizationConfigRuleStatuses",
            "config:describeOrganizationConfigRules",
            "config:describeOrganizationConformancePackStatuses",
            "config:describeOrganizationConformancePacks",
            "config:describePendingAggregationRequests",
            "config:describeRemediationConfigurations",
            "config:describeRemediationExceptions",
            "config:describeRemediationExecutionStatus",
            "config:describeRetentionConfigurations",
            "config:getAggregateComplianceDetailsByConfigRule",
            "config:getAggregateConfigRuleComplianceSummary",
            "config:getAggregateDiscoveredResourceCounts",
            "config:getAggregateResourceConfig",
            "config:getComplianceDetailsByConfigRule",
            "config:getComplianceDetailsByResource",
            "config:getComplianceSummaryByConfigRule",
            "config:getComplianceSummaryByResourceType",
            "config:getConformancePackComplianceDetails",
            "config:getConformancePackComplianceSummary",
            "config:getDiscoveredResourceCounts",
            "config:getOrganizationConfigRuleDetailedStatus",
            "config:getOrganizationConformancePackDetailedStatus",
            "config:getResourceConfigHistory",
            "config:listAggregateDiscoveredResources",
            "config:listDiscoveredResources",
            "config:listTagsForResource",
            "connect:describeContact",
            "connect:describePhoneNumber",
            "connect:describeQuickConnect",
            "connect:describeUser",
            "connect:getCurrentMetricData",
            "connect:getMetricData",
            "connect:listContactEvaluations",
            "connect:listEvaluationFormVersions",
            "connect:listEvaluationForms",
            "connect:listPhoneNumbersV2",
            "connect:listQuickConnects",
            "connect:listRoutingProfiles",
            "connect:listSecurityProfiles",
            "connect:listUsers",
            "connect:listViewVersions",
            "connect:listViews",
            "controltower:describeAccountFactoryConfig",
            "controltower:describeCoreService",
            "controltower:describeGuardrail",
            "controltower:describeGuardrailForTarget",
            "controltower:describeManagedAccount",
            "controltower:describeSingleSignOn",
            "controltower:getAvailableUpdates",
            "controltower:getHomeRegion",
            "controltower:getLandingZoneStatus",
            "controltower:listDirectoryGroups",
            "controltower:listGuardrailViolations",
            "controltower:listGuardrailsForTarget",
            "controltower:listManagedAccounts",
            "controltower:listManagedAccountsForGuardrail",
            "controltower:listManagedAccountsForParent",
            "controltower:listManagedOrganizationalUnits",
            "controltower:listManagedOrganizationalUnitsForGuardrail",
            "databrew:describeDataset",
            "databrew:describeJob",
            "databrew:describeProject",
            "databrew:describeRecipe",
            "databrew:listDatasets",
            "databrew:listJobRuns",
            "databrew:listJobs",
            "databrew:listProjects",
            "databrew:listRecipeVersions",
            "databrew:listRecipes",
            "databrew:listTagsForResource",
            "datapipeline:describeObjects",
            "datapipeline:describePipelines",
            "datapipeline:getPipelineDefinition",
            "datapipeline:listPipelines",
            "datapipeline:queryObjects",
            "datasync:describeAgent",
            "datasync:describeLocationEfs",
            "datasync:describeLocationFsxLustre",
            "datasync:describeLocationFsxOpenZfs",
            "datasync:describeLocationFsxWindows",
            "datasync:describeLocationHdfs",
            "datasync:describeLocationNfs",
            "datasync:describeLocationObjectStorage",
            "datasync:describeLocationS3",
            "datasync:describeLocationSmb",
            "datasync:describeTask",
            "datasync:describeTaskExecution",
            "datasync:listAgents",
            "datasync:listLocations",
            "datasync:listTaskExecutions",
            "datasync:listTasks",
            "dax:describeClusters",
            "dax:describeDefaultParameters",
            "dax:describeEvents",
            "dax:describeParameterGroups",
            "dax:describeParameters",
            "dax:describeSubnetGroups",
            "detective:getMembers",
            "detective:listGraphs",
            "detective:listInvitations",
            "detective:listMembers",
            "devicefarm:getAccountSettings",
            "devicefarm:getDevice",
            "devicefarm:getDevicePool",
            "devicefarm:getDevicePoolCompatibility",
            "devicefarm:getJob",
            "devicefarm:getProject",
            "devicefarm:getRemoteAccessSession",
            "devicefarm:getRun",
            "devicefarm:getSuite",
            "devicefarm:getTest",
            "devicefarm:getTestGridProject",
            "devicefarm:getTestGridSession",
            "devicefarm:getUpload",
            "devicefarm:listArtifacts",
            "devicefarm:listDevicePools",
            "devicefarm:listDevices",
            "devicefarm:listJobs",
            "devicefarm:listProjects",
            "devicefarm:listRemoteAccessSessions",
            "devicefarm:listRuns",
            "devicefarm:listSamples",
            "devicefarm:listSuites",
            "devicefarm:listTestGridProjects",
            "devicefarm:listTestGridSessionActions",
            "devicefarm:listTestGridSessionArtifacts",
            "devicefarm:listTestGridSessions",
            "devicefarm:listTests",
            "devicefarm:listUniqueProblems",
            "devicefarm:listUploads",
            "directconnect:describeConnectionLoa",
            "directconnect:describeConnections",
            "directconnect:describeConnectionsOnInterconnect",
            "directconnect:describeCustomerMetadata",
            "directconnect:describeDirectConnectGatewayAssociationProposals",
            "directconnect:describeDirectConnectGatewayAssociations",
            "directconnect:describeDirectConnectGatewayAttachments",
            "directconnect:describeDirectConnectGateways",
            "directconnect:describeHostedConnections",
            "directconnect:describeInterconnectLoa",
            "directconnect:describeInterconnects",
            "directconnect:describeLags",
            "directconnect:describeLoa",
            "directconnect:describeLocations",
            "directconnect:describeRouterConfiguration",
            "directconnect:describeVirtualGateways",
            "directconnect:describeVirtualInterfaces",
            "dlm:getLifecyclePolicies",
            "dlm:getLifecyclePolicy",
            "dms:describeAccountAttributes",
            "dms:describeApplicableIndividualAssessments",
            "dms:describeConnections",
            "dms:describeEndpointSettings",
            "dms:describeEndpointTypes",
            "dms:describeEndpoints",
            "dms:describeEventCategories",
            "dms:describeEventSubscriptions",
            "dms:describeEvents",
            "dms:describeFleetAdvisorCollectors",
            "dms:describeFleetAdvisorDatabases",
            "dms:describeFleetAdvisorLsaAnalysis",
            "dms:describeFleetAdvisorSchemaObjectSummary",
            "dms:describeFleetAdvisorSchemas",
            "dms:describeOrderableReplicationInstances",
            "dms:describePendingMaintenanceActions",
            "dms:describeRefreshSchemasStatus",
            "dms:describeReplicationInstanceTaskLogs",
            "dms:describeReplicationInstances",
            "dms:describeReplicationSubnetGroups",
            "dms:describeReplicationTaskAssessmentResults",
            "dms:describeReplicationTaskAssessmentRuns",
            "dms:describeReplicationTaskIndividualAssessments",
            "dms:describeReplicationTasks",
            "dms:describeSchemas",
            "dms:describeTableStatistics",
            "docdb-elastic:getCluster",
            "docdb-elastic:getClusterSnapshot",
            "docdb-elastic:listClusterSnapshots",
            "docdb-elastic:listClusters",
            "drs:describeJobLogItems",
            "drs:describeJobs",
            "drs:describeLaunchConfigurationTemplates",
            "drs:describeRecoveryInstances",
            "drs:describeRecoverySnapshots",
            "drs:describeReplicationConfigurationTemplates",
            "drs:describeSourceNetworks",
            "drs:describeSourceServers",
            "drs:getLaunchConfiguration",
            "drs:getReplicationConfiguration",
            "drs:listExtensibleSourceServers",
            "drs:listLaunchActions",
            "drs:listStagingAccounts",
            "ds:describeClientAuthenticationSettings",
            "ds:describeConditionalForwarders",
            "ds:describeDirectories",
            "ds:describeDomainControllers",
            "ds:describeEventTopics",
            "ds:describeLDAPSSettings",
            "ds:describeSharedDirectories",
            "ds:describeSnapshots",
            "ds:describeTrusts",
            "ds:getDirectoryLimits",
            "ds:getSnapshotLimits",
            "ds:listIpRoutes",
            "ds:listSchemaExtensions",
            "ds:listTagsForResource",
            "dynamodb:describeBackup",
            "dynamodb:describeContinuousBackups",
            "dynamodb:describeContributorInsights",
            "dynamodb:describeExport",
            "dynamodb:describeGlobalTable",
            "dynamodb:describeImport",
            "dynamodb:describeKinesisStreamingDestination",
            "dynamodb:describeLimits",
            "dynamodb:describeStream",
            "dynamodb:describeTable",
            "dynamodb:describeTimeToLive",
            "dynamodb:listBackups",
            "dynamodb:listContributorInsights",
            "dynamodb:listExports",
            "dynamodb:listGlobalTables",
            "dynamodb:listImports",
            "dynamodb:listStreams",
            "dynamodb:listTables",
            "dynamodb:listTagsOfResource",
            "ec2:describeAccountAttributes",
            "ec2:describeAddressTransfers",
            "ec2:describeAddresses",
            "ec2:describeAddressesAttribute",
            "ec2:describeAggregateIdFormat",
            "ec2:describeAvailabilityZones",
            "ec2:describeBundleTasks",
            "ec2:describeByoipCidrs",
            "ec2:describeCapacityReservationFleets",
            "ec2:describeCapacityReservations",
            "ec2:describeCarrierGateways",
            "ec2:describeClassicLinkInstances",
            "ec2:describeClientVpnAuthorizationRules",
            "ec2:describeClientVpnConnections",
            "ec2:describeClientVpnEndpoints",
            "ec2:describeClientVpnRoutes",
            "ec2:describeClientVpnTargetNetworks",
            "ec2:describeCoipPools",
            "ec2:describeConversionTasks",
            "ec2:describeCustomerGateways",
            "ec2:describeDhcpOptions",
            "ec2:describeEgressOnlyInternetGateways",
            "ec2:describeExportImageTasks",
            "ec2:describeExportTasks",
            "ec2:describeFastLaunchImages",
            "ec2:describeFastSnapshotRestores",
            "ec2:describeFleetHistory",
            "ec2:describeFleetInstances",
            "ec2:describeFleets",
            "ec2:describeFlowLogs",
            "ec2:describeFpgaImageAttribute",
            "ec2:describeFpgaImages",
            "ec2:describeHostReservationOfferings",
            "ec2:describeHostReservations",
            "ec2:describeHosts",
            "ec2:describeIamInstanceProfileAssociations",
            "ec2:describeIdFormat",
            "ec2:describeIdentityIdFormat",
            "ec2:describeImageAttribute",
            "ec2:describeImages",
            "ec2:describeImportImageTasks",
            "ec2:describeImportSnapshotTasks",
            "ec2:describeInstanceAttribute",
            "ec2:describeInstanceCreditSpecifications",
            "ec2:describeInstanceEventNotificationAttributes",
            "ec2:describeInstanceEventWindows",
            "ec2:describeInstanceStatus",
            "ec2:describeInstanceTypeOfferings",
            "ec2:describeInstanceTypes",
            "ec2:describeInstances",
            "ec2:describeInternetGateways",
            "ec2:describeIpamPools",
            "ec2:describeIpamScopes",
            "ec2:describeIpams",
            "ec2:describeIpv6Pools",
            "ec2:describeKeyPairs",
            "ec2:describeLaunchTemplateVersions",
            "ec2:describeLaunchTemplates",
            "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
            "ec2:describeLocalGatewayRouteTableVpcAssociations",
            "ec2:describeLocalGatewayRouteTables",
            "ec2:describeLocalGatewayVirtualInterfaceGroups",
            "ec2:describeLocalGatewayVirtualInterfaces",
            "ec2:describeLocalGateways",
            "ec2:describeManagedPrefixLists",
            "ec2:describeMovingAddresses",
            "ec2:describeNatGateways",
            "ec2:describeNetworkAcls",
            "ec2:describeNetworkInterfaceAttribute",
            "ec2:describeNetworkInterfaces",
            "ec2:describePlacementGroups",
            "ec2:describePrefixLists",
            "ec2:describePrincipalIdFormat",
            "ec2:describePublicIpv4Pools",
            "ec2:describeRegions",
            "ec2:describeReservedInstances",
            "ec2:describeReservedInstancesListings",
            "ec2:describeReservedInstancesModifications",
            "ec2:describeReservedInstancesOfferings",
            "ec2:describeRouteTables",
            "ec2:describeScheduledInstanceAvailability",
            "ec2:describeScheduledInstances",
            "ec2:describeSecurityGroupReferences",
            "ec2:describeSecurityGroupRules",
            "ec2:describeSecurityGroups",
            "ec2:describeSnapshotAttribute",
            "ec2:describeSnapshots",
            "ec2:describeSpotDatafeedSubscription",
            "ec2:describeSpotFleetInstances",
            "ec2:describeSpotFleetRequestHistory",
            "ec2:describeSpotFleetRequests",
            "ec2:describeSpotInstanceRequests",
            "ec2:describeSpotPriceHistory",
            "ec2:describeStaleSecurityGroups",
            "ec2:describeStoreImageTasks",
            "ec2:describeSubnets",
            "ec2:describeTags",
            "ec2:describeTrafficMirrorFilters",
            "ec2:describeTrafficMirrorSessions",
            "ec2:describeTrafficMirrorTargets",
            "ec2:describeTransitGatewayAttachments",
            "ec2:describeTransitGatewayConnectPeers",
            "ec2:describeTransitGatewayMulticastDomains",
            "ec2:describeTransitGatewayPeeringAttachments",
            "ec2:describeTransitGatewayPolicyTables",
            "ec2:describeTransitGatewayRouteTableAnnouncements",
            "ec2:describeTransitGatewayRouteTables",
            "ec2:describeTransitGatewayVpcAttachments",
            "ec2:describeTransitGateways",
            "ec2:describeVerifiedAccessEndpoints",
            "ec2:describeVerifiedAccessGroups",
            "ec2:describeVerifiedAccessInstances",
            "ec2:describeVerifiedAccessTrustProviders",
            "ec2:describeVolumeAttribute",
            "ec2:describeVolumeStatus",
            "ec2:describeVolumes",
            "ec2:describeVolumesModifications",
            "ec2:describeVpcAttribute",
            "ec2:describeVpcClassicLink",
            "ec2:describeVpcClassicLinkDnsSupport",
            "ec2:describeVpcEndpointConnectionNotifications",
            "ec2:describeVpcEndpointConnections",
            "ec2:describeVpcEndpointServiceConfigurations",
            "ec2:describeVpcEndpointServicePermissions",
            "ec2:describeVpcEndpointServices",
            "ec2:describeVpcEndpoints",
            "ec2:describeVpcPeeringConnections",
            "ec2:describeVpcs",
            "ec2:describeVpnConnections",
            "ec2:describeVpnGateways",
            "ec2:getAssociatedIpv6PoolCidrs",
            "ec2:getCapacityReservationUsage",
            "ec2:getCoipPoolUsage",
            "ec2:getConsoleOutput",
            "ec2:getConsoleScreenshot",
            "ec2:getDefaultCreditSpecification",
            "ec2:getEbsDefaultKmsKeyId",
            "ec2:getEbsEncryptionByDefault",
            "ec2:getGroupsForCapacityReservation",
            "ec2:getHostReservationPurchasePreview",
            "ec2:getInstanceTypesFromInstanceRequirements",
            "ec2:getIpamAddressHistory",
            "ec2:getIpamPoolAllocations",
            "ec2:getIpamPoolCidrs",
            "ec2:getIpamResourceCidrs",
            "ec2:getLaunchTemplateData",
            "ec2:getManagedPrefixListAssociations",
            "ec2:getManagedPrefixListEntries",
            "ec2:getReservedInstancesExchangeQuote",
            "ec2:getSerialConsoleAccessStatus",
            "ec2:getSpotPlacementScores",
            "ec2:getTransitGatewayMulticastDomainAssociations",
            "ec2:getTransitGatewayPrefixListReferences",
            "ec2:getVerifiedAccessEndpointPolicy",
            "ec2:getVerifiedAccessGroupPolicy",
            "ec2:listImagesInRecycleBin",
            "ec2:listSnapshotsInRecycleBin",
            "ec2:searchLocalGatewayRoutes",
            "ec2:searchTransitGatewayMulticastGroups",
            "ec2:searchTransitGatewayRoutes",
            "ecr-public:describeImageTags",
            "ecr-public:describeImages",
            "ecr-public:describeRegistries",
            "ecr-public:describeRepositories",
            "ecr-public:getRegistryCatalogData",
            "ecr-public:getRepositoryCatalogData",
            "ecr-public:getRepositoryPolicy",
            "ecr-public:listTagsForResource",
            "ecr:batchCheckLayerAvailability",
            "ecr:batchGetRepositoryScanningConfiguration",
            "ecr:describeImageReplicationStatus",
            "ecr:describeImageScanFindings",
            "ecr:describeImages",
            "ecr:describePullThroughCacheRules",
            "ecr:describeRegistry",
            "ecr:describeRepositories",
            "ecr:getLifecyclePolicy",
            "ecr:getLifecyclePolicyPreview",
            "ecr:getRegistryPolicy",
            "ecr:getRegistryScanningConfiguration",
            "ecr:getRepositoryPolicy",
            "ecr:listImages",
            "ecr:listTagsForResource",
            "ecs:describeCapacityProviders",
            "ecs:describeClusters",
            "ecs:describeContainerInstances",
            "ecs:describeServices",
            "ecs:describeTaskDefinition",
            "ecs:describeTaskSets",
            "ecs:describeTasks",
            "ecs:getTaskProtection",
            "ecs:listAccountSettings",
            "ecs:listAttributes",
            "ecs:listClusters",
            "ecs:listContainerInstances",
            "ecs:listServices",
            "ecs:listServicesByNamespace",
            "ecs:listTagsForResource",
            "ecs:listTaskDefinitionFamilies",
            "ecs:listTaskDefinitions",
            "ecs:listTasks",
            "eks:describeAddon",
            "eks:describeAddonConfiguration",
            "eks:describeAddonVersions",
            "eks:describeCluster",
            "eks:describeEksAnywhereSubscription",
            "eks:describeFargateProfile",
            "eks:describeIdentityProviderConfig",
            "eks:describeNodegroup",
            "eks:describeUpdate",
            "eks:listAddons",
            "eks:listClusters",
            "eks:listEksAnywhereSubscriptions",
            "eks:listFargateProfiles",
            "eks:listIdentityProviderConfigs",
            "eks:listNodegroups",
            "eks:listUpdates",
            "elasticache:describeCacheClusters",
            "elasticache:describeCacheEngineVersions",
            "elasticache:describeCacheParameterGroups",
            "elasticache:describeCacheParameters",
            "elasticache:describeCacheSecurityGroups",
            "elasticache:describeCacheSubnetGroups",
            "elasticache:describeEngineDefaultParameters",
            "elasticache:describeEvents",
            "elasticache:describeGlobalReplicationGroups",
            "elasticache:describeReplicationGroups",
            "elasticache:describeReservedCacheNodes",
            "elasticache:describeReservedCacheNodesOfferings",
            "elasticache:describeServerlessCacheSnapshots",
            "elasticache:describeServerlessCaches",
            "elasticache:describeServiceUpdates",
            "elasticache:describeSnapshots",
            "elasticache:describeUpdateActions",
            "elasticache:describeUserGroups",
            "elasticache:describeUsers",
            "elasticache:listAllowedNodeTypeModifications",
            "elasticache:listTagsForResource",
            "elasticbeanstalk:checkDNSAvailability",
            "elasticbeanstalk:describeAccountAttributes",
            "elasticbeanstalk:describeApplicationVersions",
            "elasticbeanstalk:describeApplications",
            "elasticbeanstalk:describeConfigurationOptions",
            "elasticbeanstalk:describeEnvironmentHealth",
            "elasticbeanstalk:describeEnvironmentManagedActionHistory",
            "elasticbeanstalk:describeEnvironmentManagedActions",
            "elasticbeanstalk:describeEnvironmentResources",
            "elasticbeanstalk:describeEnvironments",
            "elasticbeanstalk:describeEvents",
            "elasticbeanstalk:describeInstancesHealth",
            "elasticbeanstalk:describePlatformVersion",
            "elasticbeanstalk:listAvailableSolutionStacks",
            "elasticbeanstalk:listPlatformBranches",
            "elasticbeanstalk:listPlatformVersions",
            "elasticbeanstalk:validateConfigurationSettings",
            "elasticfilesystem:describeAccessPoints",
            "elasticfilesystem:describeFileSystemPolicy",
            "elasticfilesystem:describeFileSystems",
            "elasticfilesystem:describeLifecycleConfiguration",
            "elasticfilesystem:describeMountTargetSecurityGroups",
            "elasticfilesystem:describeMountTargets",
            "elasticfilesystem:describeTags",
            "elasticfilesystem:listTagsForResource",
            "elasticloadbalancing:describeAccountLimits",
            "elasticloadbalancing:describeInstanceHealth",
            "elasticloadbalancing:describeListenerCertificates",
            "elasticloadbalancing:describeListeners",
            "elasticloadbalancing:describeLoadBalancerAttributes",
            "elasticloadbalancing:describeLoadBalancerPolicies",
            "elasticloadbalancing:describeLoadBalancerPolicyTypes",
            "elasticloadbalancing:describeLoadBalancers",
            "elasticloadbalancing:describeRules",
            "elasticloadbalancing:describeSSLPolicies",
            "elasticloadbalancing:describeTags",
            "elasticloadbalancing:describeTargetGroupAttributes",
            "elasticloadbalancing:describeTargetGroups",
            "elasticloadbalancing:describeTargetHealth",
            "elasticmapreduce:describeCluster",
            "elasticmapreduce:describeNotebookExecution",
            "elasticmapreduce:describeReleaseLabel",
            "elasticmapreduce:describeSecurityConfiguration",
            "elasticmapreduce:describeStep",
            "elasticmapreduce:describeStudio",
            "elasticmapreduce:getAutoTerminationPolicy",
            "elasticmapreduce:getBlockPublicAccessConfiguration",
            "elasticmapreduce:getManagedScalingPolicy",
            "elasticmapreduce:getStudioSessionMapping",
            "elasticmapreduce:listBootstrapActions",
            "elasticmapreduce:listClusters",
            "elasticmapreduce:listInstanceFleets",
            "elasticmapreduce:listInstanceGroups",
            "elasticmapreduce:listInstances",
            "elasticmapreduce:listNotebookExecutions",
            "elasticmapreduce:listReleaseLabels",
            "elasticmapreduce:listSecurityConfigurations",
            "elasticmapreduce:listSteps",
            "elasticmapreduce:listStudioSessionMappings",
            "elasticmapreduce:listStudios",
            "elastictranscoder:listJobsByPipeline",
            "elastictranscoder:listJobsByStatus",
            "elastictranscoder:listPipelines",
            "elastictranscoder:listPresets",
            "elastictranscoder:readPipeline",
            "elastictranscoder:readPreset",
            "emr-containers:describeJobRun",
            "emr-containers:describeJobTemplate",
            "emr-containers:describeManagedEndpoint",
            "emr-containers:describeVirtualCluster",
            "emr-containers:listJobRuns",
            "emr-containers:listJobTemplates",
            "emr-containers:listManagedEndpoints",
            "emr-containers:listVirtualClusters",
            "emr-serverless:getApplication",
            "emr-serverless:getJobRun",
            "emr-serverless:listApplications",
            "es:describeDomain",
            "es:describeDomainAutoTunes",
            "es:describeDomainChangeProgress",
            "es:describeDomainConfig",
            "es:describeDomains",
            "es:describeDryRunProgress",
            "es:describeElasticsearchDomain",
            "es:describeElasticsearchDomainConfig",
            "es:describeElasticsearchDomains",
            "es:describeInboundConnections",
            "es:describeInstanceTypeLimits",
            "es:describeOutboundConnections",
            "es:describePackages",
            "es:describeReservedInstanceOfferings",
            "es:describeReservedInstances",
            "es:describeVpcEndpoints",
            "es:getCompatibleVersions",
            "es:getPackageVersionHistory",
            "es:getUpgradeHistory",
            "es:getUpgradeStatus",
            "es:listDomainNames",
            "es:listDomainsForPackage",
            "es:listInstanceTypeDetails",
            "es:listPackagesForDomain",
            "es:listScheduledActions",
            "es:listTags",
            "es:listVersions",
            "es:listVpcEndpointAccess",
            "es:listVpcEndpoints",
            "es:listVpcEndpointsForDomain",
            "events:describeApiDestination",
            "events:describeArchive",
            "events:describeConnection",
            "events:describeEndpoint",
            "events:describeEventBus",
            "events:describeEventSource",
            "events:describePartnerEventSource",
            "events:describeReplay",
            "events:describeRule",
            "events:listApiDestinations",
            "events:listArchives",
            "events:listConnections",
            "events:listEndpoints",
            "events:listEventBuses",
            "events:listEventSources",
            "events:listPartnerEventSourceAccounts",
            "events:listPartnerEventSources",
            "events:listReplays",
            "events:listRuleNamesByTarget",
            "events:listRules",
            "events:listTargetsByRule",
            "events:testEventPattern",
            "evidently:getExperiment",
            "evidently:getFeature",
            "evidently:getLaunch",
            "evidently:getProject",
            "evidently:getSegment",
            "evidently:listExperiments",
            "evidently:listFeatures",
            "evidently:listLaunches",
            "evidently:listProjects",
            "evidently:listSegmentReferences",
            "evidently:listSegments",
            "firehose:describeDeliveryStream",
            "firehose:listDeliveryStreams",
            "fms:getAdminAccount",
            "fms:getComplianceDetail",
            "fms:getNotificationChannel",
            "fms:getPolicy",
            "fms:getProtectionStatus",
            "fms:listComplianceStatus",
            "fms:listMemberAccounts",
            "fms:listPolicies",
            "forecast:describeDataset",
            "forecast:describeDatasetGroup",
            "forecast:describeDatasetImportJob",
            "forecast:describeForecast",
            "forecast:describeForecastExportJob",
            "forecast:describePredictor",
            "forecast:getAccuracyMetrics",
            "forecast:listDatasetGroups",
            "forecast:listDatasetImportJobs",
            "forecast:listDatasets",
            "forecast:listForecastExportJobs",
            "forecast:listForecasts",
            "forecast:listPredictors",
            "fsx:describeBackups",
            "fsx:describeDataRepositoryAssociations",
            "fsx:describeDataRepositoryTasks",
            "fsx:describeFileCaches",
            "fsx:describeFileSystems",
            "fsx:describeSnapshots",
            "fsx:describeStorageVirtualMachines",
            "fsx:describeVolumes",
            "fsx:listTagsForResource",
            "gamelift:describeAlias",
            "gamelift:describeBuild",
            "gamelift:describeEC2InstanceLimits",
            "gamelift:describeFleetAttributes",
            "gamelift:describeFleetCapacity",
            "gamelift:describeFleetEvents",
            "gamelift:describeFleetLocationAttributes",
            "gamelift:describeFleetLocationCapacity",
            "gamelift:describeFleetLocationUtilization",
            "gamelift:describeFleetPortSettings",
            "gamelift:describeFleetUtilization",
            "gamelift:describeGameServer",
            "gamelift:describeGameServerGroup",
            "gamelift:describeGameSessionDetails",
            "gamelift:describeGameSessionPlacement",
            "gamelift:describeGameSessionQueues",
            "gamelift:describeGameSessions",
            "gamelift:describeInstances",
            "gamelift:describeMatchmaking",
            "gamelift:describeMatchmakingConfigurations",
            "gamelift:describeMatchmakingRuleSets",
            "gamelift:describePlayerSessions",
            "gamelift:describeRuntimeConfiguration",
            "gamelift:describeScalingPolicies",
            "gamelift:describeScript",
            "gamelift:listAliases",
            "gamelift:listBuilds",
            "gamelift:listFleets",
            "gamelift:listGameServerGroups",
            "gamelift:listGameServers",
            "gamelift:listScripts",
            "gamelift:resolveAlias",
            "glacier:describeJob",
            "glacier:describeVault",
            "glacier:getDataRetrievalPolicy",
            "glacier:getVaultAccessPolicy",
            "glacier:getVaultLock",
            "glacier:getVaultNotifications",
            "glacier:listJobs",
            "glacier:listTagsForVault",
            "glacier:listVaults",
            "globalaccelerator:describeAccelerator",
            "globalaccelerator:describeAcceleratorAttributes",
            "globalaccelerator:describeEndpointGroup",
            "globalaccelerator:describeListener",
            "globalaccelerator:listAccelerators",
            "globalaccelerator:listEndpointGroups",
            "globalaccelerator:listListeners",
            "glue:batchGetBlueprints",
            "glue:batchGetCrawlers",
            "glue:batchGetDevEndpoints",
            "glue:batchGetJobs",
            "glue:batchGetPartition",
            "glue:batchGetTriggers",
            "glue:batchGetWorkflows",
            "glue:checkSchemaVersionValidity",
            "glue:getBlueprint",
            "glue:getBlueprintRun",
            "glue:getBlueprintRuns",
            "glue:getCatalogImportStatus",
            "glue:getClassifier",
            "glue:getClassifiers",
            "glue:getColumnStatisticsForPartition",
            "glue:getColumnStatisticsForTable",
            "glue:getCrawler",
            "glue:getCrawlerMetrics",
            "glue:getCrawlers",
            "glue:getCustomEntityType",
            "glue:getDataQualityResult",
            "glue:getDataQualityRuleRecommendationRun",
            "glue:getDataQualityRuleset",
            "glue:getDataQualityRulesetEvaluationRun",
            "glue:getDatabase",
            "glue:getDatabases",
            "glue:getDataflowGraph",
            "glue:getDevEndpoint",
            "glue:getDevEndpoints",
            "glue:getJob",
            "glue:getJobRun",
            "glue:getJobRuns",
            "glue:getJobs",
            "glue:getMLTaskRun",
            "glue:getMLTaskRuns",
            "glue:getMLTransform",
            "glue:getMLTransforms",
            "glue:getMapping",
            "glue:getPartition",
            "glue:getPartitionIndexes",
            "glue:getPartitions",
            "glue:getRegistry",
            "glue:getResourcePolicies",
            "glue:getResourcePolicy",
            "glue:getSchema",
            "glue:getSchemaByDefinition",
            "glue:getSchemaVersion",
            "glue:getSchemaVersionsDiff",
            "glue:getSession",
            "glue:getStatement",
            "glue:getTable",
            "glue:getTableVersions",
            "glue:getTables",
            "glue:getTrigger",
            "glue:getTriggers",
            "glue:getUserDefinedFunction",
            "glue:getUserDefinedFunctions",
            "glue:getWorkflow",
            "glue:getWorkflowRun",
            "glue:getWorkflowRuns",
            "glue:listCrawlers",
            "glue:listCrawls",
            "glue:listDataQualityResults",
            "glue:listDataQualityRuleRecommendationRuns",
            "glue:listDataQualityRulesetEvaluationRuns",
            "glue:listDataQualityRulesets",
            "glue:listDevEndpoints",
            "glue:listMLTransforms",
            "glue:listRegistries",
            "glue:listSchemaVersions",
            "glue:listSchemas",
            "glue:listSessions",
            "glue:listStatements",
            "glue:querySchemaVersionMetadata",
            "greengrass:getConnectivityInfo",
            "greengrass:getCoreDefinition",
            "greengrass:getCoreDefinitionVersion",
            "greengrass:getDeploymentStatus",
            "greengrass:getDeviceDefinition",
            "greengrass:getDeviceDefinitionVersion",
            "greengrass:getFunctionDefinition",
            "greengrass:getFunctionDefinitionVersion",
            "greengrass:getGroup",
            "greengrass:getGroupCertificateAuthority",
            "greengrass:getGroupVersion",
            "greengrass:getLoggerDefinition",
            "greengrass:getLoggerDefinitionVersion",
            "greengrass:getResourceDefinitionVersion",
            "greengrass:getServiceRoleForAccount",
            "greengrass:getSubscriptionDefinition",
            "greengrass:getSubscriptionDefinitionVersion",
            "greengrass:listCoreDefinitionVersions",
            "greengrass:listCoreDefinitions",
            "greengrass:listDeployments",
            "greengrass:listDeviceDefinitionVersions",
            "greengrass:listDeviceDefinitions",
            "greengrass:listFunctionDefinitionVersions",
            "greengrass:listFunctionDefinitions",
            "greengrass:listGroupVersions",
            "greengrass:listGroups",
            "greengrass:listLoggerDefinitionVersions",
            "greengrass:listLoggerDefinitions",
            "greengrass:listResourceDefinitionVersions",
            "greengrass:listResourceDefinitions",
            "greengrass:listSubscriptionDefinitionVersions",
            "greengrass:listSubscriptionDefinitions",
            "guardduty:getDetector",
            "guardduty:getFindings",
            "guardduty:getFindingsStatistics",
            "guardduty:getIPSet",
            "guardduty:getInvitationsCount",
            "guardduty:getMasterAccount",
            "guardduty:getMembers",
            "guardduty:getThreatIntelSet",
            "guardduty:listDetectors",
            "guardduty:listFindings",
            "guardduty:listIPSets",
            "guardduty:listInvitations",
            "guardduty:listMembers",
            "guardduty:listThreatIntelSets",
            "health:describeAffectedAccountsForOrganization",
            "health:describeAffectedEntities",
            "health:describeAffectedEntitiesForOrganization",
            "health:describeEntityAggregates",
            "health:describeEntityAggregatesForOrganization",
            "health:describeEventAggregates",
            "health:describeEventDetails",
            "health:describeEventDetailsForOrganization",
            "health:describeEventTypes",
            "health:describeEvents",
            "health:describeEventsForOrganization",
            "health:describeHealthServiceStatusForOrganization",
            "iam:getAccessKeyLastUsed",
            "iam:getAccountAuthorizationDetails",
            "iam:getAccountPasswordPolicy",
            "iam:getAccountSummary",
            "iam:getContextKeysForCustomPolicy",
            "iam:getContextKeysForPrincipalPolicy",
            "iam:getCredentialReport",
            "iam:getGroup",
            "iam:getGroupPolicy",
            "iam:getInstanceProfile",
            "iam:getLoginProfile",
            "iam:getOpenIDConnectProvider",
            "iam:getPolicy",
            "iam:getPolicyVersion",
            "iam:getRole",
            "iam:getRolePolicy",
            "iam:getSAMLProvider",
            "iam:getSSHPublicKey",
            "iam:getServerCertificate",
            "iam:getServiceLinkedRoleDeletionStatus",
            "iam:getUser",
            "iam:getUserPolicy",
            "iam:listAccessKeys",
            "iam:listAccountAliases",
            "iam:listAttachedGroupPolicies",
            "iam:listAttachedRolePolicies",
            "iam:listAttachedUserPolicies",
            "iam:listEntitiesForPolicy",
            "iam:listGroupPolicies",
            "iam:listGroups",
            "iam:listGroupsForUser",
            "iam:listInstanceProfiles",
            "iam:listInstanceProfilesForRole",
            "iam:listMFADevices",
            "iam:listOpenIDConnectProviders",
            "iam:listPolicies",
            "iam:listPolicyVersions",
            "iam:listRolePolicies",
            "iam:listRoles",
            "iam:listSAMLProviders",
            "iam:listSSHPublicKeys",
            "iam:listServerCertificates",
            "iam:listSigningCertificates",
            "iam:listUserPolicies",
            "iam:listUsers",
            "iam:listVirtualMFADevices",
            "iam:simulateCustomPolicy",
            "iam:simulatePrincipalPolicy",
            "imagebuilder:getComponent",
            "imagebuilder:getComponentPolicy",
            "imagebuilder:getContainerRecipe",
            "imagebuilder:getDistributionConfiguration",
            "imagebuilder:getImage",
            "imagebuilder:getImagePipeline",
            "imagebuilder:getImagePolicy",
            "imagebuilder:getImageRecipe",
            "imagebuilder:getImageRecipePolicy",
            "imagebuilder:getInfrastructureConfiguration",
            "imagebuilder:getWorkflowExecution",
            "imagebuilder:getWorkflowStepExecution",
            "imagebuilder:listComponentBuildVersions",
            "imagebuilder:listComponents",
            "imagebuilder:listContainerRecipes",
            "imagebuilder:listDistributionConfigurations",
            "imagebuilder:listImageBuildVersions",
            "imagebuilder:listImagePipelineImages",
            "imagebuilder:listImagePipelines",
            "imagebuilder:listImageRecipes",
            "imagebuilder:listImageScanFindingAggregations",
            "imagebuilder:listImages",
            "imagebuilder:listInfrastructureConfigurations",
            "imagebuilder:listTagsForResource",
            "imagebuilder:listWorkflowExecutions",
            "imagebuilder:listWorkflowStepExecutions",
            "inspector2:batchGetAccountStatus",
            "inspector2:batchGetFreeTrialInfo",
            "inspector2:describeOrganizationConfiguration",
            "inspector2:getDelegatedAdminAccount",
            "inspector2:getMember",
            "inspector2:listCoverage",
            "inspector2:listDelegatedAdminAccounts",
            "inspector2:listFilters",
            "inspector2:listFindings",
            "inspector2:listMembers",
            "inspector2:listUsageTotals",
            "inspector:describeAssessmentRuns",
            "inspector:describeAssessmentTargets",
            "inspector:describeAssessmentTemplates",
            "inspector:describeCrossAccountAccessRole",
            "inspector:describeResourceGroups",
            "inspector:describeRulesPackages",
            "inspector:getTelemetryMetadata",
            "inspector:listAssessmentRunAgents",
            "inspector:listAssessmentRuns",
            "inspector:listAssessmentTargets",
            "inspector:listAssessmentTemplates",
            "inspector:listEventSubscriptions",
            "inspector:listRulesPackages",
            "inspector:listTagsForResource",
            "internetmonitor:getHealthEvent",
            "internetmonitor:getMonitor",
            "internetmonitor:listHealthEvents",
            "internetmonitor:listMonitors",
            "iot:describeAuthorizer",
            "iot:describeCACertificate",
            "iot:describeCertificate",
            "iot:describeDefaultAuthorizer",
            "iot:describeDomainConfiguration",
            "iot:describeEndpoint",
            "iot:describeIndex",
            "iot:describeJobExecution",
            "iot:describeThing",
            "iot:describeThingGroup",
            "iot:describeTunnel",
            "iot:getEffectivePolicies",
            "iot:getIndexingConfiguration",
            "iot:getLoggingOptions",
            "iot:getPolicy",
            "iot:getPolicyVersion",
            "iot:getTopicRule",
            "iot:getV2LoggingOptions",
            "iot:listAttachedPolicies",
            "iot:listAuthorizers",
            "iot:listCACertificates",
            "iot:listCertificates",
            "iot:listCertificatesByCA",
            "iot:listDomainConfigurations",
            "iot:listJobExecutionsForJob",
            "iot:listJobExecutionsForThing",
            "iot:listJobs",
            "iot:listNamedShadowsForThing",
            "iot:listOutgoingCertificates",
            "iot:listPackageVersions",
            "iot:listPackages",
            "iot:listPolicies",
            "iot:listPolicyPrincipals",
            "iot:listPolicyVersions",
            "iot:listPrincipalPolicies",
            "iot:listPrincipalThings",
            "iot:listRoleAliases",
            "iot:listTargetsForPolicy",
            "iot:listThingGroups",
            "iot:listThingGroupsForThing",
            "iot:listThingPrincipals",
            "iot:listThingRegistrationTasks",
            "iot:listThingTypes",
            "iot:listThings",
            "iot:listThingsInThingGroup",
            "iot:listTopicRules",
            "iot:listTunnels",
            "iot:listV2LoggingLevels",
            "iotevents:describeDetector",
            "iotevents:describeDetectorModel",
            "iotevents:describeInput",
            "iotevents:describeLoggingOptions",
            "iotevents:listDetectorModelVersions",
            "iotevents:listDetectorModels",
            "iotevents:listDetectors",
            "iotevents:listInputs",
            "iotfleetwise:getCampaign",
            "iotfleetwise:getDecoderManifest",
            "iotfleetwise:getFleet",
            "iotfleetwise:getModelManifest",
            "iotfleetwise:getSignalCatalog",
            "iotfleetwise:getVehicle",
            "iotfleetwise:getVehicleStatus",
            "iotfleetwise:listCampaigns",
            "iotfleetwise:listDecoderManifestNetworkInterfaces",
            "iotfleetwise:listDecoderManifestSignals",
            "iotfleetwise:listDecoderManifests",
            "iotfleetwise:listFleets",
            "iotfleetwise:listFleetsForVehicle",
            "iotfleetwise:listModelManifestNodes",
            "iotfleetwise:listModelManifests",
            "iotfleetwise:listSignalCatalogNodes",
            "iotfleetwise:listSignalCatalogs",
            "iotfleetwise:listVehicles",
            "iotsitewise:describeAccessPolicy",
            "iotsitewise:describeAsset",
            "iotsitewise:describeAssetModel",
            "iotsitewise:describeAssetProperty",
            "iotsitewise:describeDashboard",
            "iotsitewise:describeGateway",
            "iotsitewise:describeGatewayCapabilityConfiguration",
            "iotsitewise:describeLoggingOptions",
            "iotsitewise:describePortal",
            "iotsitewise:describeProject",
            "iotsitewise:listAccessPolicies",
            "iotsitewise:listAssetModels",
            "iotsitewise:listAssets",
            "iotsitewise:listAssociatedAssets",
            "iotsitewise:listDashboards",
            "iotsitewise:listGateways",
            "iotsitewise:listPortals",
            "iotsitewise:listProjectAssets",
            "iotsitewise:listProjects",
            "iottwinmaker:getComponentType",
            "iottwinmaker:getEntity",
            "iottwinmaker:getPricingPlan",
            "iottwinmaker:getScene",
            "iottwinmaker:getSyncJob",
            "iottwinmaker:getWorkspace",
            "iottwinmaker:listComponentTypes",
            "iottwinmaker:listEntities",
            "iottwinmaker:listScenes",
            "iottwinmaker:listSyncJobs",
            "iottwinmaker:listSyncResources",
            "iottwinmaker:listWorkspaces",
            "iotwireless:getDestination",
            "iotwireless:getDeviceProfile",
            "iotwireless:getPartnerAccount",
            "iotwireless:getServiceEndpoint",
            "iotwireless:getServiceProfile",
            "iotwireless:getWirelessDevice",
            "iotwireless:getWirelessDeviceStatistics",
            "iotwireless:getWirelessGateway",
            "iotwireless:getWirelessGatewayCertificate",
            "iotwireless:getWirelessGatewayFirmwareInformation",
            "iotwireless:getWirelessGatewayStatistics",
            "iotwireless:getWirelessGatewayTask",
            "iotwireless:getWirelessGatewayTaskDefinition",
            "iotwireless:listDestinations",
            "iotwireless:listDeviceProfiles",
            "iotwireless:listPartnerAccounts",
            "iotwireless:listServiceProfiles",
            "iotwireless:listTagsForResource",
            "iotwireless:listWirelessDevices",
            "iotwireless:listWirelessGatewayTaskDefinitions",
            "iotwireless:listWirelessGateways",
            "ivs:getChannel",
            "ivs:getRecordingConfiguration",
            "ivs:getStream",
            "ivs:getStreamSession",
            "ivs:listChannels",
            "ivs:listPlaybackKeyPairs",
            "ivs:listRecordingConfigurations",
            "ivs:listStreamKeys",
            "ivs:listStreamSessions",
            "ivs:listStreams",
            "kafka:describeCluster",
            "kafka:describeClusterOperation",
            "kafka:describeClusterV2",
            "kafka:describeConfiguration",
            "kafka:describeConfigurationRevision",
            "kafka:getBootstrapBrokers",
            "kafka:listClusterOperations",
            "kafka:listClusters",
            "kafka:listClustersV2",
            "kafka:listConfigurationRevisions",
            "kafka:listConfigurations",
            "kafka:listNodes",
            "kafkaconnect:describeConnector",
            "kafkaconnect:describeCustomPlugin",
            "kafkaconnect:describeWorkerConfiguration",
            "kafkaconnect:listConnectors",
            "kafkaconnect:listCustomPlugins",
            "kafkaconnect:listWorkerConfigurations",
            "kendra:describeDataSource",
            "kendra:describeFaq",
            "kendra:describeIndex",
            "kendra:listDataSources",
            "kendra:listFaqs",
            "kendra:listIndices",
            "kinesis:describeStream",
            "kinesis:describeStreamConsumer",
            "kinesis:describeStreamSummary",
            "kinesis:listShards",
            "kinesis:listStreamConsumers",
            "kinesis:listStreams",
            "kinesis:listTagsForStream",
            "kinesisanalytics:describeApplication",
            "kinesisanalytics:describeApplicationSnapshot",
            "kinesisanalytics:listApplicationSnapshots",
            "kinesisanalytics:listApplications",
            "kinesisvideo:describeImageGenerationConfiguration",
            "kinesisvideo:describeNotificationConfiguration",
            "kinesisvideo:describeSignalingChannel",
            "kinesisvideo:describeStream",
            "kinesisvideo:getDataEndpoint",
            "kinesisvideo:getIceServerConfig",
            "kinesisvideo:getSignalingChannelEndpoint",
            "kinesisvideo:listSignalingChannels",
            "kinesisvideo:listStreams",
            "kms:describeKey",
            "kms:getKeyPolicy",
            "kms:getKeyRotationStatus",
            "kms:listAliases",
            "kms:listGrants",
            "kms:listKeyPolicies",
            "kms:listKeys",
            "kms:listResourceTags",
            "kms:listRetirableGrants",
            "lambda:getAccountSettings",
            "lambda:getAlias",
            "lambda:getCodeSigningConfig",
            "lambda:getEventSourceMapping",
            "lambda:getFunction",
            "lambda:getFunctionCodeSigningConfig",
            "lambda:getFunctionConcurrency",
            "lambda:getFunctionConfiguration",
            "lambda:getFunctionEventInvokeConfig",
            "lambda:getFunctionUrlConfig",
            "lambda:getLayerVersion",
            "lambda:getLayerVersionPolicy",
            "lambda:getPolicy",
            "lambda:getProvisionedConcurrencyConfig",
            "lambda:getRuntimeManagementConfig",
            "lambda:listAliases",
            "lambda:listCodeSigningConfigs",
            "lambda:listEventSourceMappings",
            "lambda:listFunctionEventInvokeConfigs",
            "lambda:listFunctionUrlConfigs",
            "lambda:listFunctions",
            "lambda:listFunctionsByCodeSigningConfig",
            "lambda:listLayerVersions",
            "lambda:listLayers",
            "lambda:listProvisionedConcurrencyConfigs",
            "lambda:listVersionsByFunction",
            "launchwizard:describeProvisionedApp",
            "launchwizard:describeProvisioningEvents",
            "launchwizard:listProvisionedApps",
            "lex:describeBot",
            "lex:describeBotAlias",
            "lex:describeBotLocale",
            "lex:describeBotRecommendation",
            "lex:describeBotVersion",
            "lex:describeCustomVocabularyMetadata",
            "lex:describeExport",
            "lex:describeImport",
            "lex:describeIntent",
            "lex:describeResourcePolicy",
            "lex:describeSlot",
            "lex:describeSlotType",
            "lex:getBot",
            "lex:getBotAlias",
            "lex:getBotAliases",
            "lex:getBotChannelAssociation",
            "lex:getBotChannelAssociations",
            "lex:getBotVersions",
            "lex:getBots",
            "lex:getBuiltinIntent",
            "lex:getBuiltinIntents",
            "lex:getBuiltinSlotTypes",
            "lex:getIntent",
            "lex:getIntentVersions",
            "lex:getIntents",
            "lex:getSlotType",
            "lex:getSlotTypeVersions",
            "lex:getSlotTypes",
            "lex:listBotAliases",
            "lex:listBotLocales",
            "lex:listBotRecommendations",
            "lex:listBotVersions",
            "lex:listBots",
            "lex:listExports",
            "lex:listImports",
            "lex:listIntents",
            "lex:listRecommendedIntents",
            "lex:listSlotTypes",
            "lex:listSlots",
            "license-manager:getLicenseConfiguration",
            "license-manager:getServiceSettings",
            "license-manager:listAssociationsForLicenseConfiguration",
            "license-manager:listFailuresForLicenseConfigurationOperations",
            "license-manager:listLicenseConfigurations",
            "license-manager:listLicenseSpecificationsForResource",
            "license-manager:listResourceInventory",
            "license-manager:listUsageForLicenseConfiguration",
            "lightsail:getActiveNames",
            "lightsail:getAlarms",
            "lightsail:getAutoSnapshots",
            "lightsail:getBlueprints",
            "lightsail:getBucketBundles",
            "lightsail:getBucketMetricData",
            "lightsail:getBuckets",
            "lightsail:getBundles",
            "lightsail:getCertificates",
            "lightsail:getContainerImages",
            "lightsail:getContainerServiceDeployments",
            "lightsail:getContainerServiceMetricData",
            "lightsail:getContainerServicePowers",
            "lightsail:getContainerServices",
            "lightsail:getDisk",
            "lightsail:getDiskSnapshot",
            "lightsail:getDiskSnapshots",
            "lightsail:getDisks",
            "lightsail:getDistributionBundles",
            "lightsail:getDistributionMetricData",
            "lightsail:getDistributions",
            "lightsail:getDomain",
            "lightsail:getDomains",
            "lightsail:getExportSnapshotRecords",
            "lightsail:getInstance",
            "lightsail:getInstanceMetricData",
            "lightsail:getInstancePortStates",
            "lightsail:getInstanceSnapshot",
            "lightsail:getInstanceSnapshots",
            "lightsail:getInstanceState",
            "lightsail:getInstances",
            "lightsail:getKeyPair",
            "lightsail:getKeyPairs",
            "lightsail:getLoadBalancer",
            "lightsail:getLoadBalancerMetricData",
            "lightsail:getLoadBalancerTlsCertificates",
            "lightsail:getLoadBalancers",
            "lightsail:getOperation",
            "lightsail:getOperations",
            "lightsail:getOperationsForResource",
            "lightsail:getRegions",
            "lightsail:getRelationalDatabase",
            "lightsail:getRelationalDatabaseMetricData",
            "lightsail:getRelationalDatabaseSnapshot",
            "lightsail:getRelationalDatabaseSnapshots",
            "lightsail:getRelationalDatabases",
            "lightsail:getStaticIp",
            "lightsail:getStaticIps",
            "lightsail:isVpcPeered",
            "logs:describeAccountPolicies",
            "logs:describeDestinations",
            "logs:describeExportTasks",
            "logs:describeLogGroups",
            "logs:describeLogStreams",
            "logs:describeMetricFilters",
            "logs:describeQueries",
            "logs:describeQueryDefinitions",
            "logs:describeResourcePolicies",
            "logs:describeSubscriptionFilters",
            "logs:getDataProtectionPolicy",
            "logs:getLogDelivery",
            "logs:getLogGroupFields",
            "logs:listLogDeliveries",
            "logs:testMetricFilter",
            "lookoutequipment:describeDataIngestionJob",
            "lookoutequipment:describeDataset",
            "lookoutequipment:describeInferenceScheduler",
            "lookoutequipment:describeModel",
            "lookoutequipment:listDataIngestionJobs",
            "lookoutequipment:listDatasets",
            "lookoutequipment:listInferenceExecutions",
            "lookoutequipment:listInferenceSchedulers",
            "lookoutequipment:listModels",
            "lookoutmetrics:describeAlert",
            "lookoutmetrics:describeAnomalyDetectionExecutions",
            "lookoutmetrics:describeAnomalyDetector",
            "lookoutmetrics:describeMetricSet",
            "lookoutmetrics:getAnomalyGroup",
            "lookoutmetrics:getDataQualityMetrics",
            "lookoutmetrics:getFeedback",
            "lookoutmetrics:getSampleData",
            "lookoutmetrics:listAlerts",
            "lookoutmetrics:listAnomalyDetectors",
            "lookoutmetrics:listAnomalyGroupSummaries",
            "lookoutmetrics:listAnomalyGroupTimeSeries",
            "lookoutmetrics:listMetricSets",
            "lookoutmetrics:listTagsForResource",
            "m2:getApplication",
            "m2:getApplicationVersion",
            "m2:getBatchJobExecution",
            "m2:getDataSetDetails",
            "m2:getDataSetImportTask",
            "m2:getDeployment",
            "m2:getEnvironment",
            "m2:listApplicationVersions",
            "m2:listApplications",
            "m2:listBatchJobDefinitions",
            "m2:listBatchJobExecutions",
            "m2:listDataSetImportHistory",
            "m2:listDataSets",
            "m2:listDeployments",
            "m2:listEngineVersions",
            "m2:listEnvironments",
            "machinelearning:describeBatchPredictions",
            "machinelearning:describeDataSources",
            "machinelearning:describeEvaluations",
            "machinelearning:describeMLModels",
            "machinelearning:getBatchPrediction",
            "machinelearning:getDataSource",
            "machinelearning:getEvaluation",
            "machinelearning:getMLModel",
            "macie2:getClassificationExportConfiguration",
            "macie2:getCustomDataIdentifier",
            "macie2:getFindingStatistics",
            "macie2:getFindings",
            "macie2:listClassificationJobs",
            "macie2:listCustomDataIdentifiers",
            "macie2:listFindings",
            "managedblockchain:getMember",
            "managedblockchain:getNetwork",
            "managedblockchain:getNode",
            "managedblockchain:listMembers",
            "managedblockchain:listNetworks",
            "managedblockchain:listNodes",
            "mediaconnect:describeFlow",
            "mediaconnect:listEntitlements",
            "mediaconnect:listFlows",
            "mediaconvert:describeEndpoints",
            "mediaconvert:getJob",
            "mediaconvert:getJobTemplate",
            "mediaconvert:getPreset",
            "mediaconvert:getQueue",
            "mediaconvert:listJobTemplates",
            "mediaconvert:listJobs",
            "medialive:describeChannel",
            "medialive:describeInput",
            "medialive:describeInputDevice",
            "medialive:describeInputSecurityGroup",
            "medialive:describeMultiplex",
            "medialive:describeOffering",
            "medialive:describeReservation",
            "medialive:describeSchedule",
            "medialive:listChannels",
            "medialive:listInputDevices",
            "medialive:listInputSecurityGroups",
            "medialive:listInputs",
            "medialive:listMultiplexes",
            "medialive:listOfferings",
            "medialive:listReservations",
            "mediapackage:describeChannel",
            "mediapackage:describeOriginEndpoint",
            "mediapackage:listChannels",
            "mediapackage:listOriginEndpoints",
            "mediastore:describeContainer",
            "mediastore:getContainerPolicy",
            "mediastore:getCorsPolicy",
            "mediastore:listContainers",
            "mediatailor:getPlaybackConfiguration",
            "mediatailor:listPlaybackConfigurations",
            "medical-imaging:getDatastore",
            "medical-imaging:listDatastores",
            "mgn:describeJobLogItems",
            "mgn:describeJobs",
            "mgn:describeLaunchConfigurationTemplates",
            "mgn:describeReplicationConfigurationTemplates",
            "mgn:describeSourceServers",
            "mgn:describeVcenterClients",
            "mgn:getLaunchConfiguration",
            "mgn:getReplicationConfiguration",
            "mgn:listApplications",
            "mgn:listSourceServerActions",
            "mgn:listTemplateActions",
            "mgn:listWaves",
            "mobiletargeting:getAdmChannel",
            "mobiletargeting:getApnsChannel",
            "mobiletargeting:getApnsSandboxChannel",
            "mobiletargeting:getApnsVoipChannel",
            "mobiletargeting:getApnsVoipSandboxChannel",
            "mobiletargeting:getApp",
            "mobiletargeting:getApplicationSettings",
            "mobiletargeting:getApps",
            "mobiletargeting:getBaiduChannel",
            "mobiletargeting:getCampaign",
            "mobiletargeting:getCampaignActivities",
            "mobiletargeting:getCampaignVersion",
            "mobiletargeting:getCampaignVersions",
            "mobiletargeting:getCampaigns",
            "mobiletargeting:getEmailChannel",
            "mobiletargeting:getEndpoint",
            "mobiletargeting:getEventStream",
            "mobiletargeting:getExportJob",
            "mobiletargeting:getExportJobs",
            "mobiletargeting:getGcmChannel",
            "mobiletargeting:getImportJob",
            "mobiletargeting:getImportJobs",
            "mobiletargeting:getJourney",
            "mobiletargeting:getJourneyExecutionActivityMetrics",
            "mobiletargeting:getJourneyExecutionMetrics",
            "mobiletargeting:getJourneyRunExecutionActivityMetrics",
            "mobiletargeting:getJourneyRunExecutionMetrics",
            "mobiletargeting:getJourneyRuns",
            "mobiletargeting:getSegment",
            "mobiletargeting:getSegmentImportJobs",
            "mobiletargeting:getSegmentVersion",
            "mobiletargeting:getSegmentVersions",
            "mobiletargeting:getSegments",
            "mobiletargeting:getSmsChannel",
            "mobiletargeting:listJourneys",
            "mq:describeBroker",
            "mq:describeConfiguration",
            "mq:describeConfigurationRevision",
            "mq:describeUser",
            "mq:listBrokers",
            "mq:listConfigurationRevisions",
            "mq:listConfigurations",
            "mq:listUsers",
            "network-firewall:describeFirewall",
            "network-firewall:describeFirewallPolicy",
            "network-firewall:describeLoggingConfiguration",
            "network-firewall:describeRuleGroup",
            "network-firewall:describeTlsInspectionConfiguration",
            "network-firewall:listFirewallPolicies",
            "network-firewall:listFirewalls",
            "network-firewall:listRuleGroups",
            "network-firewall:listTlsInspectionConfigurations",
            "networkmanager:describeGlobalNetworks",
            "networkmanager:getConnectAttachment",
            "networkmanager:getConnectPeer",
            "networkmanager:getConnectPeerAssociations",
            "networkmanager:getConnections",
            "networkmanager:getCoreNetwork",
            "networkmanager:getCoreNetworkChangeEvents",
            "networkmanager:getCoreNetworkChangeSet",
            "networkmanager:getCoreNetworkPolicy",
            "networkmanager:getCustomerGatewayAssociations",
            "networkmanager:getDevices",
            "networkmanager:getLinkAssociations",
            "networkmanager:getLinks",
            "networkmanager:getNetworkResourceCounts",
            "networkmanager:getNetworkResourceRelationships",
            "networkmanager:getNetworkResources",
            "networkmanager:getNetworkRoutes",
            "networkmanager:getNetworkTelemetry",
            "networkmanager:getResourcePolicy",
            "networkmanager:getRouteAnalysis",
            "networkmanager:getSiteToSiteVpnAttachment",
            "networkmanager:getSites",
            "networkmanager:getTransitGatewayConnectPeerAssociations",
            "networkmanager:getTransitGatewayPeering",
            "networkmanager:getTransitGatewayRegistrations",
            "networkmanager:getTransitGatewayRouteTableAttachment",
            "networkmanager:getVpcAttachment",
            "networkmanager:listAttachments",
            "networkmanager:listConnectPeers",
            "networkmanager:listCoreNetworkPolicyVersions",
            "networkmanager:listCoreNetworks",
            "networkmanager:listOrganizationServiceAccessStatus",
            "networkmanager:listPeerings",
            "networkmanager:listTagsForResource",
            "nimble:getEula",
            "nimble:getLaunchProfile",
            "nimble:getLaunchProfileDetails",
            "nimble:getLaunchProfileInitialization",
            "nimble:getLaunchProfileMember",
            "nimble:getStreamingImage",
            "nimble:getStreamingSession",
            "nimble:getStreamingSessionStream",
            "nimble:getStudio",
            "nimble:getStudioComponent",
            "nimble:listEulaAcceptances",
            "nimble:listEulas",
            "nimble:listLaunchProfiles",
            "nimble:listStreamingImages",
            "nimble:listStreamingSessions",
            "nimble:listStudioComponents",
            "nimble:listStudios",
            "notifications-contacts:getEmailContact",
            "notifications-contacts:listEmailContacts",
            "notifications:getEventRule",
            "notifications:getNotificationConfiguration",
            "notifications:getNotificationEvent",
            "notifications:listChannels",
            "notifications:listEventRules",
            "notifications:listNotificationConfigurations",
            "notifications:listNotificationEvents",
            "notifications:listNotificationHubs",
            "oam:getLink",
            "oam:getSink",
            "oam:getSinkPolicy",
            "oam:listAttachedLinks",
            "oam:listLinks",
            "oam:listSinks",
            "omics:getAnnotationImportJob",
            "omics:getAnnotationStore",
            "omics:getReadSetImportJob",
            "omics:getReadSetMetadata",
            "omics:getReference",
            "omics:getReferenceImportJob",
            "omics:getReferenceMetadata",
            "omics:getReferenceStore",
            "omics:getRun",
            "omics:getRunGroup",
            "omics:getSequenceStore",
            "omics:getVariantImportJob",
            "omics:getVariantStore",
            "omics:getWorkflow",
            "omics:listAnnotationImportJobs",
            "omics:listAnnotationStores",
            "omics:listMultipartReadSetUploads",
            "omics:listReadSetImportJobs",
            "omics:listReadSetUploadParts",
            "omics:listReadSets",
            "omics:listReferenceImportJobs",
            "omics:listReferenceStores",
            "omics:listReferences",
            "omics:listRunGroups",
            "omics:listRunTasks",
            "omics:listRuns",
            "omics:listSequenceStores",
            "omics:listVariantImportJobs",
            "omics:listVariantStores",
            "omics:listWorkflows",
            "opsworks-cm:describeAccountAttributes",
            "opsworks-cm:describeBackups",
            "opsworks-cm:describeEvents",
            "opsworks-cm:describeNodeAssociationStatus",
            "opsworks-cm:describeServers",
            "opsworks:describeAgentVersions",
            "opsworks:describeApps",
            "opsworks:describeCommands",
            "opsworks:describeDeployments",
            "opsworks:describeEcsClusters",
            "opsworks:describeElasticIps",
            "opsworks:describeElasticLoadBalancers",
            "opsworks:describeInstances",
            "opsworks:describeLayers",
            "opsworks:describeLoadBasedAutoScaling",
            "opsworks:describeMyUserProfile",
            "opsworks:describePermissions",
            "opsworks:describeRaidArrays",
            "opsworks:describeRdsDbInstances",
            "opsworks:describeServiceErrors",
            "opsworks:describeStackProvisioningParameters",
            "opsworks:describeStackSummary",
            "opsworks:describeStacks",
            "opsworks:describeTimeBasedAutoScaling",
            "opsworks:describeUserProfiles",
            "opsworks:describeVolumes",
            "opsworks:getHostnameSuggestion",
            "organizations:listAccounts",
            "organizations:listTagsForResource",
            "outposts:getCatalogItem",
            "outposts:getConnection",
            "outposts:getOrder",
            "outposts:getOutpost",
            "outposts:getOutpostInstanceTypes",
            "outposts:getSite",
            "outposts:listAssets",
            "outposts:listOrders",
            "outposts:listOutposts",
            "outposts:listSites",
            "personalize:describeAlgorithm",
            "personalize:describeBatchInferenceJob",
            "personalize:describeBatchSegmentJob",
            "personalize:describeCampaign",
            "personalize:describeDataset",
            "personalize:describeDatasetExportJob",
            "personalize:describeDatasetGroup",
            "personalize:describeDatasetImportJob",
            "personalize:describeEventTracker",
            "personalize:describeFeatureTransformation",
            "personalize:describeFilter",
            "personalize:describeRecipe",
            "personalize:describeRecommender",
            "personalize:describeSchema",
            "personalize:describeSolution",
            "personalize:describeSolutionVersion",
            "personalize:getPersonalizedRanking",
            "personalize:getRecommendations",
            "personalize:getSolutionMetrics",
            "personalize:listBatchInferenceJobs",
            "personalize:listBatchSegmentJobs",
            "personalize:listCampaigns",
            "personalize:listDatasetExportJobs",
            "personalize:listDatasetGroups",
            "personalize:listDatasetImportJobs",
            "personalize:listDatasets",
            "personalize:listEventTrackers",
            "personalize:listRecipes",
            "personalize:listRecommenders",
            "personalize:listSchemas",
            "personalize:listSolutionVersions",
            "personalize:listSolutions",
            "pipes:describePipe",
            "pipes:listPipes",
            "pipes:listTagsForResource",
            "polly:describeVoices",
            "polly:getLexicon",
            "polly:listLexicons",
            "pricing:describeServices",
            "pricing:getAttributeValues",
            "pricing:getProducts",
            "private-networks:getDeviceIdentifier",
            "private-networks:getNetwork",
            "private-networks:getNetworkResource",
            "private-networks:listDeviceIdentifiers",
            "private-networks:listNetworkResources",
            "private-networks:listNetworks",
            "quicksight:describeAccountCustomization",
            "quicksight:describeAccountSettings",
            "quicksight:describeAccountSubscription",
            "quicksight:describeAnalysis",
            "quicksight:describeAnalysisPermissions",
            "quicksight:describeDashboard",
            "quicksight:describeDashboardPermissions",
            "quicksight:describeDataSet",
            "quicksight:describeDataSetPermissions",
            "quicksight:describeDataSetRefreshProperties",
            "quicksight:describeDataSource",
            "quicksight:describeDataSourcePermissions",
            "quicksight:describeFolder",
            "quicksight:describeFolderPermissions",
            "quicksight:describeFolderResolvedPermissions",
            "quicksight:describeGroup",
            "quicksight:describeGroupMembership",
            "quicksight:describeIAMPolicyAssignment",
            "quicksight:describeIngestion",
            "quicksight:describeIpRestriction",
            "quicksight:describeNamespace",
            "quicksight:describeRefreshSchedule",
            "quicksight:describeTemplate",
            "quicksight:describeTemplateAlias",
            "quicksight:describeTemplatePermissions",
            "quicksight:describeTheme",
            "quicksight:describeThemeAlias",
            "quicksight:describeThemePermissions",
            "quicksight:describeTopic",
            "quicksight:describeTopicPermissions",
            "quicksight:describeTopicRefresh",
            "quicksight:describeTopicRefreshSchedule",
            "quicksight:describeUser",
            "quicksight:describeVPCConnection",
            "quicksight:listAnalyses",
            "quicksight:listDashboardVersions",
            "quicksight:listDashboards",
            "quicksight:listDataSets",
            "quicksight:listDataSources",
            "quicksight:listFolderMembers",
            "quicksight:listFolders",
            "quicksight:listGroupMemberships",
            "quicksight:listGroups",
            "quicksight:listIAMPolicyAssignments",
            "quicksight:listIAMPolicyAssignmentsForUser",
            "quicksight:listIngestions",
            "quicksight:listNamespaces",
            "quicksight:listRefreshSchedules",
            "quicksight:listTemplateAliases",
            "quicksight:listTemplateVersions",
            "quicksight:listTemplates",
            "quicksight:listThemeAliases",
            "quicksight:listThemeVersions",
            "quicksight:listThemes",
            "quicksight:listTopicRefreshSchedules",
            "quicksight:listTopics",
            "quicksight:listUserGroups",
            "quicksight:listUsers",
            "quicksight:listVPCConnections",
            "quicksight:searchAnalyses",
            "quicksight:searchDashboards",
            "quicksight:searchDataSets",
            "quicksight:searchDataSources",
            "quicksight:searchFolders",
            "quicksight:searchGroups",
            "ram:getPermission",
            "ram:getResourceShareAssociations",
            "ram:getResourceShareInvitations",
            "ram:getResourceShares",
            "ram:listPendingInvitationResources",
            "ram:listPrincipals",
            "ram:listResourceSharePermissions",
            "ram:listResources",
            "rbin:getRule",
            "rbin:listRules",
            "rds:describeAccountAttributes",
            "rds:describeBlueGreenDeployments",
            "rds:describeCertificates",
            "rds:describeDBClusterEndpoints",
            "rds:describeDBClusterParameterGroups",
            "rds:describeDBClusterParameters",
            "rds:describeDBClusterSnapshots",
            "rds:describeDBClusters",
            "rds:describeDBEngineVersions",
            "rds:describeDBInstanceAutomatedBackups",
            "rds:describeDBInstances",
            "rds:describeDBLogFiles",
            "rds:describeDBParameterGroups",
            "rds:describeDBParameters",
            "rds:describeDBSecurityGroups",
            "rds:describeDBSnapshotAttributes",
            "rds:describeDBSnapshots",
            "rds:describeDBSubnetGroups",
            "rds:describeEngineDefaultClusterParameters",
            "rds:describeEngineDefaultParameters",
            "rds:describeEventCategories",
            "rds:describeEventSubscriptions",
            "rds:describeEvents",
            "rds:describeExportTasks",
            "rds:describeGlobalClusters",
            "rds:describeOptionGroupOptions",
            "rds:describeOptionGroups",
            "rds:describeOrderableDBInstanceOptions",
            "rds:describePendingMaintenanceActions",
            "rds:describeReservedDBInstances",
            "rds:describeReservedDBInstancesOfferings",
            "rds:describeSourceRegions",
            "rds:describeValidDBInstanceModifications",
            "rds:listTagsForResource",
            "redshift-data:describeStatement",
            "redshift-data:listStatements",
            "redshift-serverless:getEndpointAccess",
            "redshift-serverless:getNamespace",
            "redshift-serverless:getRecoveryPoint",
            "redshift-serverless:getSnapshot",
            "redshift-serverless:getTableRestoreStatus",
            "redshift-serverless:getUsageLimit",
            "redshift-serverless:getWorkgroup",
            "redshift-serverless:listEndpointAccess",
            "redshift-serverless:listNamespaces",
            "redshift-serverless:listRecoveryPoints",
            "redshift-serverless:listSnapshots",
            "redshift-serverless:listTableRestoreStatus",
            "redshift-serverless:listUsageLimits",
            "redshift-serverless:listWorkgroups",
            "redshift:describeClusterParameterGroups",
            "redshift:describeClusterParameters",
            "redshift:describeClusterSecurityGroups",
            "redshift:describeClusterSnapshots",
            "redshift:describeClusterSubnetGroups",
            "redshift:describeClusterVersions",
            "redshift:describeClusters",
            "redshift:describeDataShares",
            "redshift:describeDataSharesForConsumer",
            "redshift:describeDataSharesForProducer",
            "redshift:describeDefaultClusterParameters",
            "redshift:describeEventCategories",
            "redshift:describeEventSubscriptions",
            "redshift:describeEvents",
            "redshift:describeHsmClientCertificates",
            "redshift:describeHsmConfigurations",
            "redshift:describeLoggingStatus",
            "redshift:describeOrderableClusterOptions",
            "redshift:describeReservedNodeOfferings",
            "redshift:describeReservedNodes",
            "redshift:describeResize",
            "redshift:describeSnapshotCopyGrants",
            "redshift:describeStorage",
            "redshift:describeTableRestoreStatus",
            "redshift:describeTags",
            "rekognition:listCollections",
            "rekognition:listFaces",
            "resource-explorer-2:getAccountLevelServiceConfiguration",
            "resource-explorer-2:getIndex",
            "resource-explorer-2:getView",
            "resource-explorer-2:listIndexes",
            "resource-explorer-2:listViews",
            "resource-explorer-2:search",
            "resource-groups:getGroup",
            "resource-groups:getGroupQuery",
            "resource-groups:getTags",
            "resource-groups:listGroupResources",
            "resource-groups:listGroups",
            "resource-groups:searchResources",
            "robomaker:batchDescribeSimulationJob",
            "robomaker:describeDeploymentJob",
            "robomaker:describeFleet",
            "robomaker:describeRobot",
            "robomaker:describeRobotApplication",
            "robomaker:describeSimulationApplication",
            "robomaker:describeSimulationJob",
            "robomaker:listDeploymentJobs",
            "robomaker:listFleets",
            "robomaker:listRobotApplications",
            "robomaker:listRobots",
            "robomaker:listSimulationApplications",
            "robomaker:listSimulationJobs",
            "route53-recovery-cluster:getRoutingControlState",
            "route53-recovery-cluster:listRoutingControls",
            "route53-recovery-control-config:describeControlPanel",
            "route53-recovery-control-config:describeRoutingControl",
            "route53-recovery-control-config:describeSafetyRule",
            "route53-recovery-control-config:listControlPanels",
            "route53-recovery-control-config:listRoutingControls",
            "route53-recovery-control-config:listSafetyRules",
            "route53-recovery-readiness:getCell",
            "route53-recovery-readiness:getCellReadinessSummary",
            "route53-recovery-readiness:getReadinessCheck",
            "route53-recovery-readiness:getReadinessCheckResourceStatus",
            "route53-recovery-readiness:getReadinessCheckStatus",
            "route53-recovery-readiness:getRecoveryGroup",
            "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
            "route53-recovery-readiness:listCells",
            "route53-recovery-readiness:listReadinessChecks",
            "route53-recovery-readiness:listRecoveryGroups",
            "route53-recovery-readiness:listResourceSets",
            "route53:getAccountLimit",
            "route53:getChange",
            "route53:getCheckerIpRanges",
            "route53:getDNSSEC",
            "route53:getGeoLocation",
            "route53:getHealthCheck",
            "route53:getHealthCheckCount",
            "route53:getHealthCheckLastFailureReason",
            "route53:getHealthCheckStatus",
            "route53:getHostedZone",
            "route53:getHostedZoneCount",
            "route53:getHostedZoneLimit",
            "route53:getQueryLoggingConfig",
            "route53:getReusableDelegationSet",
            "route53:getTrafficPolicy",
            "route53:getTrafficPolicyInstance",
            "route53:getTrafficPolicyInstanceCount",
            "route53:listCidrBlocks",
            "route53:listCidrCollections",
            "route53:listCidrLocations",
            "route53:listGeoLocations",
            "route53:listHealthChecks",
            "route53:listHostedZones",
            "route53:listHostedZonesByName",
            "route53:listHostedZonesByVpc",
            "route53:listQueryLoggingConfigs",
            "route53:listResourceRecordSets",
            "route53:listReusableDelegationSets",
            "route53:listTrafficPolicies",
            "route53:listTrafficPolicyInstances",
            "route53:listTrafficPolicyInstancesByHostedZone",
            "route53:listTrafficPolicyInstancesByPolicy",
            "route53:listTrafficPolicyVersions",
            "route53:listVPCAssociationAuthorizations",
            "route53domains:checkDomainAvailability",
            "route53domains:getContactReachabilityStatus",
            "route53domains:getDomainDetail",
            "route53domains:getOperationDetail",
            "route53domains:listDomains",
            "route53domains:listOperations",
            "route53domains:listPrices",
            "route53domains:listTagsForDomain",
            "route53domains:viewBilling",
            "route53resolver:getFirewallConfig",
            "route53resolver:getFirewallDomainList",
            "route53resolver:getFirewallRuleGroup",
            "route53resolver:getFirewallRuleGroupAssociation",
            "route53resolver:getFirewallRuleGroupPolicy",
            "route53resolver:getOutpostResolver",
            "route53resolver:getResolverDnssecConfig",
            "route53resolver:getResolverQueryLogConfig",
            "route53resolver:getResolverQueryLogConfigAssociation",
            "route53resolver:getResolverQueryLogConfigPolicy",
            "route53resolver:getResolverRule",
            "route53resolver:getResolverRuleAssociation",
            "route53resolver:getResolverRulePolicy",
            "route53resolver:listFirewallConfigs",
            "route53resolver:listFirewallDomainLists",
            "route53resolver:listFirewallDomains",
            "route53resolver:listFirewallRuleGroupAssociations",
            "route53resolver:listFirewallRuleGroups",
            "route53resolver:listFirewallRules",
            "route53resolver:listOutpostResolvers",
            "route53resolver:listResolverConfigs",
            "route53resolver:listResolverDnssecConfigs",
            "route53resolver:listResolverEndpointIpAddresses",
            "route53resolver:listResolverEndpoints",
            "route53resolver:listResolverQueryLogConfigAssociations",
            "route53resolver:listResolverQueryLogConfigs",
            "route53resolver:listResolverRuleAssociations",
            "route53resolver:listResolverRules",
            "route53resolver:listTagsForResource",
            "rum:batchGetRumMetricDefinitions",
            "rum:getAppMonitor",
            "rum:listAppMonitors",
            "rum:listRumMetricsDestinations",
            "s3:describeJob",
            "s3:describeMultiRegionAccessPointOperation",
            "s3:getAccelerateConfiguration",
            "s3:getAccessPoint",
            "s3:getAccessPointConfigurationForObjectLambda",
            "s3:getAccessPointForObjectLambda",
            "s3:getAccessPointPolicy",
            "s3:getAccessPointPolicyForObjectLambda",
            "s3:getAccessPointPolicyStatus",
            "s3:getAccessPointPolicyStatusForObjectLambda",
            "s3:getAccountPublicAccessBlock",
            "s3:getAnalyticsConfiguration",
            "s3:getBucketAcl",
            "s3:getBucketCORS",
            "s3:getBucketLocation",
            "s3:getBucketLogging",
            "s3:getBucketNotification",
            "s3:getBucketObjectLockConfiguration",
            "s3:getBucketOwnershipControls",
            "s3:getBucketPolicy",
            "s3:getBucketPolicyStatus",
            "s3:getBucketPublicAccessBlock",
            "s3:getBucketRequestPayment",
            "s3:getBucketVersioning",
            "s3:getBucketWebsite",
            "s3:getEncryptionConfiguration",
            "s3:getIntelligentTieringConfiguration",
            "s3:getInventoryConfiguration",
            "s3:getLifecycleConfiguration",
            "s3:getMetricsConfiguration",
            "s3:getMultiRegionAccessPoint",
            "s3:getMultiRegionAccessPointPolicy",
            "s3:getMultiRegionAccessPointPolicyStatus",
            "s3:getMultiRegionAccessPointRoutes",
            "s3:getObjectLegalHold",
            "s3:getObjectRetention",
            "s3:getReplicationConfiguration",
            "s3:getStorageLensConfiguration",
            "s3:listAccessPoints",
            "s3:listAccessPointsForObjectLambda",
            "s3:listAllMyBuckets",
            "s3:listBucket",
            "s3:listBucketMultipartUploads",
            "s3:listBucketVersions",
            "s3:listJobs",
            "s3:listMultiRegionAccessPoints",
            "s3:listMultipartUploadParts",
            "s3:listStorageLensConfigurations",
            "sagemaker:describeAction",
            "sagemaker:describeAlgorithm",
            "sagemaker:describeApp",
            "sagemaker:describeAppImageConfig",
            "sagemaker:describeArtifact",
            "sagemaker:describeAutoMLJob",
            "sagemaker:describeCodeRepository",
            "sagemaker:describeCompilationJob",
            "sagemaker:describeContext",
            "sagemaker:describeDataQualityJobDefinition",
            "sagemaker:describeDevice",
            "sagemaker:describeDeviceFleet",
            "sagemaker:describeDomain",
            "sagemaker:describeEdgeDeploymentPlan",
            "sagemaker:describeEdgePackagingJob",
            "sagemaker:describeEndpoint",
            "sagemaker:describeEndpointConfig",
            "sagemaker:describeExperiment",
            "sagemaker:describeFeatureGroup",
            "sagemaker:describeFeatureMetadata",
            "sagemaker:describeFlowDefinition",
            "sagemaker:describeHub",
            "sagemaker:describeHubContent",
            "sagemaker:describeHumanTaskUi",
            "sagemaker:describeHyperParameterTuningJob",
            "sagemaker:describeImage",
            "sagemaker:describeImageVersion",
            "sagemaker:describeInferenceExperiment",
            "sagemaker:describeInferenceRecommendationsJob",
            "sagemaker:describeLabelingJob",
            "sagemaker:describeModel",
            "sagemaker:describeModelBiasJobDefinition",
            "sagemaker:describeModelCard",
            "sagemaker:describeModelCardExportJob",
            "sagemaker:describeModelExplainabilityJobDefinition",
            "sagemaker:describeModelPackage",
            "sagemaker:describeModelPackageGroup",
            "sagemaker:describeModelQualityJobDefinition",
            "sagemaker:describeMonitoringSchedule",
            "sagemaker:describeNotebookInstance",
            "sagemaker:describeNotebookInstanceLifecycleConfig",
            "sagemaker:describePipeline",
            "sagemaker:describePipelineDefinitionForExecution",
            "sagemaker:describePipelineExecution",
            "sagemaker:describeProcessingJob",
            "sagemaker:describeProject",
            "sagemaker:describeSpace",
            "sagemaker:describeStudioLifecycleConfig",
            "sagemaker:describeSubscribedWorkteam",
            "sagemaker:describeTrainingJob",
            "sagemaker:describeTransformJob",
            "sagemaker:describeTrial",
            "sagemaker:describeTrialComponent",
            "sagemaker:describeUserProfile",
            "sagemaker:describeWorkforce",
            "sagemaker:describeWorkteam",
            "sagemaker:getDeviceFleetReport",
            "sagemaker:getModelPackageGroupPolicy",
            "sagemaker:getSagemakerServicecatalogPortfolioStatus",
            "sagemaker:listActions",
            "sagemaker:listAlgorithms",
            "sagemaker:listAliases",
            "sagemaker:listAppImageConfigs",
            "sagemaker:listApps",
            "sagemaker:listArtifacts",
            "sagemaker:listAssociations",
            "sagemaker:listAutoMLJobs",
            "sagemaker:listCandidatesForAutoMLJob",
            "sagemaker:listCodeRepositories",
            "sagemaker:listCompilationJobs",
            "sagemaker:listContexts",
            "sagemaker:listDataQualityJobDefinitions",
            "sagemaker:listDeviceFleets",
            "sagemaker:listDevices",
            "sagemaker:listDomains",
            "sagemaker:listEdgeDeploymentPlans",
            "sagemaker:listEdgePackagingJobs",
            "sagemaker:listEndpointConfigs",
            "sagemaker:listEndpoints",
            "sagemaker:listExperiments",
            "sagemaker:listFeatureGroups",
            "sagemaker:listFlowDefinitions",
            "sagemaker:listHubContentVersions",
            "sagemaker:listHubContents",
            "sagemaker:listHubs",
            "sagemaker:listHumanTaskUis",
            "sagemaker:listHyperParameterTuningJobs",
            "sagemaker:listImageVersions",
            "sagemaker:listImages",
            "sagemaker:listInferenceExperiments",
            "sagemaker:listInferenceRecommendationsJobSteps",
            "sagemaker:listInferenceRecommendationsJobs",
            "sagemaker:listLabelingJobs",
            "sagemaker:listLabelingJobsForWorkteam",
            "sagemaker:listLineageGroups",
            "sagemaker:listModelBiasJobDefinitions",
            "sagemaker:listModelCardExportJobs",
            "sagemaker:listModelCardVersions",
            "sagemaker:listModelCards",
            "sagemaker:listModelExplainabilityJobDefinitions",
            "sagemaker:listModelMetadata",
            "sagemaker:listModelPackageGroups",
            "sagemaker:listModelPackages",
            "sagemaker:listModelQualityJobDefinitions",
            "sagemaker:listModels",
            "sagemaker:listMonitoringAlertHistory",
            "sagemaker:listMonitoringAlerts",
            "sagemaker:listMonitoringExecutions",
            "sagemaker:listMonitoringSchedules",
            "sagemaker:listNotebookInstanceLifecycleConfigs",
            "sagemaker:listNotebookInstances",
            "sagemaker:listPipelineExecutionSteps",
            "sagemaker:listPipelineExecutions",
            "sagemaker:listPipelineParametersForExecution",
            "sagemaker:listPipelines",
            "sagemaker:listProcessingJobs",
            "sagemaker:listProjects",
            "sagemaker:listSpaces",
            "sagemaker:listStageDevices",
            "sagemaker:listStudioLifecycleConfigs",
            "sagemaker:listSubscribedWorkteams",
            "sagemaker:listTags",
            "sagemaker:listTrainingJobs",
            "sagemaker:listTrainingJobsForHyperParameterTuningJob",
            "sagemaker:listTransformJobs",
            "sagemaker:listTrialComponents",
            "sagemaker:listTrials",
            "sagemaker:listUserProfiles",
            "sagemaker:listWorkforces",
            "sagemaker:listWorkteams",
            "savingsplans:describeSavingsPlans",
            "scheduler:getSchedule",
            "scheduler:getScheduleGroup",
            "scheduler:listScheduleGroups",
            "scheduler:listSchedules",
            "schemas:describeCodeBinding",
            "schemas:describeDiscoverer",
            "schemas:describeRegistry",
            "schemas:describeSchema",
            "schemas:getCodeBindingSource",
            "schemas:getDiscoveredSchema",
            "schemas:getResourcePolicy",
            "schemas:listDiscoverers",
            "schemas:listRegistries",
            "schemas:listSchemaVersions",
            "schemas:listSchemas",
            "sdb:domainMetadata",
            "sdb:listDomains",
            "secretsmanager:describeSecret",
            "secretsmanager:getResourcePolicy",
            "secretsmanager:listSecretVersionIds",
            "secretsmanager:listSecrets",
            "securityhub:getEnabledStandards",
            "securityhub:getFindings",
            "securityhub:getInsightResults",
            "securityhub:getInsights",
            "securityhub:getMasterAccount",
            "securityhub:getMembers",
            "securityhub:listEnabledProductsForImport",
            "securityhub:listInvitations",
            "securityhub:listMembers",
            "securitylake:getDataLakeExceptionSubscription",
            "securitylake:getDataLakeOrganizationConfiguration",
            "securitylake:getDataLakeSources",
            "securitylake:getSubscriber",
            "securitylake:listDataLakeExceptions",
            "securitylake:listDataLakes",
            "securitylake:listLogSources",
            "securitylake:listSubscribers",
            "serverlessrepo:getApplication",
            "serverlessrepo:getApplicationPolicy",
            "serverlessrepo:getCloudFormationTemplate",
            "serverlessrepo:listApplicationDependencies",
            "serverlessrepo:listApplicationVersions",
            "serverlessrepo:listApplications",
            "servicecatalog:describeConstraint",
            "servicecatalog:describePortfolio",
            "servicecatalog:describeProduct",
            "servicecatalog:describeProductAsAdmin",
            "servicecatalog:describeProductView",
            "servicecatalog:describeProvisioningArtifact",
            "servicecatalog:describeProvisioningParameters",
            "servicecatalog:describeRecord",
            "servicecatalog:listAcceptedPortfolioShares",
            "servicecatalog:listConstraintsForPortfolio",
            "servicecatalog:listLaunchPaths",
            "servicecatalog:listPortfolioAccess",
            "servicecatalog:listPortfolios",
            "servicecatalog:listPortfoliosForProduct",
            "servicecatalog:listPrincipalsForPortfolio",
            "servicecatalog:listProvisioningArtifacts",
            "servicecatalog:listRecordHistory",
            "servicecatalog:scanProvisionedProducts",
            "servicecatalog:searchProducts",
            "servicequotas:getAWSDefaultServiceQuota",
            "servicequotas:getAssociationForServiceQuotaTemplate",
            "servicequotas:getRequestedServiceQuotaChange",
            "servicequotas:getServiceQuota",
            "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
            "servicequotas:listAWSDefaultServiceQuotas",
            "servicequotas:listRequestedServiceQuotaChangeHistory",
            "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
            "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
            "servicequotas:listServiceQuotas",
            "servicequotas:listServices",
            "ses:describeActiveReceiptRuleSet",
            "ses:describeConfigurationSet",
            "ses:describeReceiptRule",
            "ses:describeReceiptRuleSet",
            "ses:getAccount",
            "ses:getAccountSendingEnabled",
            "ses:getBlacklistReports",
            "ses:getConfigurationSet",
            "ses:getConfigurationSetEventDestinations",
            "ses:getContactList",
            "ses:getDedicatedIp",
            "ses:getDedicatedIpPool",
            "ses:getDedicatedIps",
            "ses:getDeliverabilityDashboardOptions",
            "ses:getDeliverabilityTestReport",
            "ses:getDomainDeliverabilityCampaign",
            "ses:getDomainStatisticsReport",
            "ses:getEmailIdentity",
            "ses:getIdentityDkimAttributes",
            "ses:getIdentityMailFromDomainAttributes",
            "ses:getIdentityNotificationAttributes",
            "ses:getIdentityPolicies",
            "ses:getIdentityVerificationAttributes",
            "ses:getImportJob",
            "ses:getSendQuota",
            "ses:getSendStatistics",
            "ses:listConfigurationSets",
            "ses:listContactLists",
            "ses:listContacts",
            "ses:listCustomVerificationEmailTemplates",
            "ses:listDedicatedIpPools",
            "ses:listDeliverabilityTestReports",
            "ses:listDomainDeliverabilityCampaigns",
            "ses:listEmailIdentities",
            "ses:listEmailTemplates",
            "ses:listIdentities",
            "ses:listIdentityPolicies",
            "ses:listImportJobs",
            "ses:listReceiptFilters",
            "ses:listReceiptRuleSets",
            "ses:listRecommendations",
            "ses:listTagsForResource",
            "ses:listTemplates",
            "ses:listVerifiedEmailAddresses",
            "shield:describeAttack",
            "shield:describeProtection",
            "shield:describeSubscription",
            "shield:listAttacks",
            "shield:listProtections",
            "sms-voice:getConfigurationSetEventDestinations",
            "sms:getConnectors",
            "sms:getReplicationJobs",
            "sms:getReplicationRuns",
            "sms:getServers",
            "snowball:describeAddress",
            "snowball:describeAddresses",
            "snowball:describeJob",
            "snowball:getSnowballUsage",
            "snowball:listJobs",
            "snowball:listServiceVersions",
            "sns:checkIfPhoneNumberIsOptedOut",
            "sns:getDataProtectionPolicy",
            "sns:getEndpointAttributes",
            "sns:getPlatformApplicationAttributes",
            "sns:getSMSAttributes",
            "sns:getSMSSandboxAccountStatus",
            "sns:getSubscriptionAttributes",
            "sns:getTopicAttributes",
            "sns:listEndpointsByPlatformApplication",
            "sns:listOriginationNumbers",
            "sns:listPhoneNumbersOptedOut",
            "sns:listPlatformApplications",
            "sns:listSMSSandboxPhoneNumbers",
            "sns:listSubscriptions",
            "sns:listSubscriptionsByTopic",
            "sns:listTopics",
            "sqs:getQueueAttributes",
            "sqs:getQueueUrl",
            "sqs:listDeadLetterSourceQueues",
            "sqs:listQueues",
            "ssm-contacts:describeEngagement",
            "ssm-contacts:describePage",
            "ssm-contacts:getContact",
            "ssm-contacts:getContactChannel",
            "ssm-contacts:getContactPolicy",
            "ssm-contacts:getRotation",
            "ssm-contacts:getRotationOverride",
            "ssm-contacts:listContactChannels",
            "ssm-contacts:listContacts",
            "ssm-contacts:listEngagements",
            "ssm-contacts:listPageReceipts",
            "ssm-contacts:listPageResolutions",
            "ssm-contacts:listPagesByContact",
            "ssm-contacts:listPagesByEngagement",
            "ssm-contacts:listPreviewRotationShifts",
            "ssm-contacts:listRotationOverrides",
            "ssm-contacts:listRotationShifts",
            "ssm-contacts:listRotations",
            "ssm-incidents:getIncidentRecord",
            "ssm-incidents:getReplicationSet",
            "ssm-incidents:getResourcePolicies",
            "ssm-incidents:getResponsePlan",
            "ssm-incidents:getTimelineEvent",
            "ssm-incidents:listIncidentRecords",
            "ssm-incidents:listRelatedItems",
            "ssm-incidents:listReplicationSets",
            "ssm-incidents:listResponsePlans",
            "ssm-incidents:listTimelineEvents",
            "ssm-sap:getApplication",
            "ssm-sap:getComponent",
            "ssm-sap:getDatabase",
            "ssm-sap:getOperation",
            "ssm-sap:getResourcePermission",
            "ssm-sap:listApplications",
            "ssm-sap:listComponents",
            "ssm-sap:listDatabases",
            "ssm-sap:listOperations",
            "ssm:describeActivations",
            "ssm:describeAssociation",
            "ssm:describeAssociationExecutionTargets",
            "ssm:describeAssociationExecutions",
            "ssm:describeAutomationExecutions",
            "ssm:describeAutomationStepExecutions",
            "ssm:describeAvailablePatches",
            "ssm:describeDocument",
            "ssm:describeDocumentPermission",
            "ssm:describeEffectiveInstanceAssociations",
            "ssm:describeEffectivePatchesForPatchBaseline",
            "ssm:describeInstanceAssociationsStatus",
            "ssm:describeInstanceInformation",
            "ssm:describeInstancePatchStates",
            "ssm:describeInstancePatchStatesForPatchGroup",
            "ssm:describeInstancePatches",
            "ssm:describeInventoryDeletions",
            "ssm:describeMaintenanceWindowExecutionTaskInvocations",
            "ssm:describeMaintenanceWindowExecutionTasks",
            "ssm:describeMaintenanceWindowExecutions",
            "ssm:describeMaintenanceWindowSchedule",
            "ssm:describeMaintenanceWindowTargets",
            "ssm:describeMaintenanceWindowTasks",
            "ssm:describeMaintenanceWindows",
            "ssm:describeMaintenanceWindowsForTarget",
            "ssm:describeOpsItems",
            "ssm:describeParameters",
            "ssm:describePatchBaselines",
            "ssm:describePatchGroupState",
            "ssm:describePatchGroups",
            "ssm:describePatchProperties",
            "ssm:describeSessions",
            "ssm:getAutomationExecution",
            "ssm:getCalendarState",
            "ssm:getCommandInvocation",
            "ssm:getConnectionStatus",
            "ssm:getDefaultPatchBaseline",
            "ssm:getDeployablePatchSnapshotForInstance",
            "ssm:getInventorySchema",
            "ssm:getMaintenanceWindow",
            "ssm:getMaintenanceWindowExecution",
            "ssm:getMaintenanceWindowExecutionTask",
            "ssm:getMaintenanceWindowExecutionTaskInvocation",
            "ssm:getMaintenanceWindowTask",
            "ssm:getOpsItem",
            "ssm:getOpsMetadata",
            "ssm:getOpsSummary",
            "ssm:getPatchBaseline",
            "ssm:getPatchBaselineForPatchGroup",
            "ssm:getResourcePolicies",
            "ssm:getServiceSetting",
            "ssm:listAssociationVersions",
            "ssm:listAssociations",
            "ssm:listCommandInvocations",
            "ssm:listCommands",
            "ssm:listComplianceItems",
            "ssm:listComplianceSummaries",
            "ssm:listDocumentMetadataHistory",
            "ssm:listDocumentVersions",
            "ssm:listDocuments",
            "ssm:listOpsItemEvents",
            "ssm:listOpsItemRelatedItems",
            "ssm:listOpsMetadata",
            "ssm:listResourceComplianceSummaries",
            "ssm:listResourceDataSync",
            "ssm:listTagsForResource",
            "states:describeActivity",
            "states:describeExecution",
            "states:describeMapRun",
            "states:describeStateMachine",
            "states:describeStateMachineAlias",
            "states:describeStateMachineForExecution",
            "states:getExecutionHistory",
            "states:listActivities",
            "states:listExecutions",
            "states:listMapRuns",
            "states:listStateMachineAliases",
            "states:listStateMachineVersions",
            "states:listStateMachines",
            "storagegateway:describeBandwidthRateLimit",
            "storagegateway:describeCache",
            "storagegateway:describeCachediSCSIVolumes",
            "storagegateway:describeFileSystemAssociations",
            "storagegateway:describeGatewayInformation",
            "storagegateway:describeMaintenanceStartTime",
            "storagegateway:describeNFSFileShares",
            "storagegateway:describeSMBFileShares",
            "storagegateway:describeSMBSettings",
            "storagegateway:describeSnapshotSchedule",
            "storagegateway:describeStorediSCSIVolumes",
            "storagegateway:describeTapeArchives",
            "storagegateway:describeTapeRecoveryPoints",
            "storagegateway:describeTapes",
            "storagegateway:describeUploadBuffer",
            "storagegateway:describeVTLDevices",
            "storagegateway:describeWorkingStorage",
            "storagegateway:listAutomaticTapeCreationPolicies",
            "storagegateway:listFileShares",
            "storagegateway:listFileSystemAssociations",
            "storagegateway:listGateways",
            "storagegateway:listLocalDisks",
            "storagegateway:listTagsForResource",
            "storagegateway:listTapes",
            "storagegateway:listVolumeInitiators",
            "storagegateway:listVolumeRecoveryPoints",
            "storagegateway:listVolumes",
            "swf:countClosedWorkflowExecutions",
            "swf:countOpenWorkflowExecutions",
            "swf:countPendingActivityTasks",
            "swf:countPendingDecisionTasks",
            "swf:describeActivityType",
            "swf:describeDomain",
            "swf:describeWorkflowExecution",
            "swf:describeWorkflowType",
            "swf:getWorkflowExecutionHistory",
            "swf:listActivityTypes",
            "swf:listClosedWorkflowExecutions",
            "swf:listDomains",
            "swf:listOpenWorkflowExecutions",
            "swf:listWorkflowTypes",
            "synthetics:describeCanaries",
            "synthetics:describeCanariesLastRun",
            "synthetics:describeRuntimeVersions",
            "synthetics:getCanary",
            "synthetics:getCanaryRuns",
            "synthetics:getGroup",
            "synthetics:listAssociatedGroups",
            "synthetics:listGroupResources",
            "synthetics:listGroups",
            "tiros:createQuery",
            "tiros:getQueryAnswer",
            "tiros:getQueryExplanation",
            "transcribe:describeLanguageModel",
            "transcribe:getCallAnalyticsCategory",
            "transcribe:getCallAnalyticsJob",
            "transcribe:getMedicalTranscriptionJob",
            "transcribe:getMedicalVocabulary",
            "transcribe:getTranscriptionJob",
            "transcribe:getVocabulary",
            "transcribe:getVocabularyFilter",
            "transcribe:listCallAnalyticsCategories",
            "transcribe:listCallAnalyticsJobs",
            "transcribe:listLanguageModels",
            "transcribe:listMedicalTranscriptionJobs",
            "transcribe:listMedicalVocabularies",
            "transcribe:listTranscriptionJobs",
            "transcribe:listVocabularies",
            "transcribe:listVocabularyFilters",
            "transfer:describeAccess",
            "transfer:describeAgreement",
            "transfer:describeConnector",
            "transfer:describeExecution",
            "transfer:describeProfile",
            "transfer:describeServer",
            "transfer:describeUser",
            "transfer:describeWorkflow",
            "transfer:listAccesses",
            "transfer:listAgreements",
            "transfer:listConnectors",
            "transfer:listExecutions",
            "transfer:listHostKeys",
            "transfer:listProfiles",
            "transfer:listServers",
            "transfer:listTagsForResource",
            "transfer:listUsers",
            "transfer:listWorkflows",
            "transfer:sendWorkflowStepState",
            "verifiedpermissions:getIdentitySource",
            "verifiedpermissions:getPolicy",
            "verifiedpermissions:getPolicyStore",
            "verifiedpermissions:getPolicyTemplate",
            "verifiedpermissions:getSchema",
            "verifiedpermissions:listIdentitySources",
            "verifiedpermissions:listPolicies",
            "verifiedpermissions:listPolicyStores",
            "verifiedpermissions:listPolicyTemplates",
            "vpc-lattice:getAccessLogSubscription",
            "vpc-lattice:getAuthPolicy",
            "vpc-lattice:getListener",
            "vpc-lattice:getResourcePolicy",
            "vpc-lattice:getRule",
            "vpc-lattice:getService",
            "vpc-lattice:getServiceNetwork",
            "vpc-lattice:getServiceNetworkServiceAssociation",
            "vpc-lattice:getServiceNetworkVpcAssociation",
            "vpc-lattice:getTargetGroup",
            "vpc-lattice:listAccessLogSubscriptions",
            "vpc-lattice:listListeners",
            "vpc-lattice:listRules",
            "vpc-lattice:listServiceNetworkServiceAssociations",
            "vpc-lattice:listServiceNetworkVpcAssociations",
            "vpc-lattice:listServiceNetworks",
            "vpc-lattice:listServices",
            "vpc-lattice:listTargetGroups",
            "vpc-lattice:listTargets",
            "waf-regional:getByteMatchSet",
            "waf-regional:getChangeTokenStatus",
            "waf-regional:getGeoMatchSet",
            "waf-regional:getIPSet",
            "waf-regional:getLoggingConfiguration",
            "waf-regional:getRateBasedRule",
            "waf-regional:getRegexMatchSet",
            "waf-regional:getRegexPatternSet",
            "waf-regional:getRule",
            "waf-regional:getRuleGroup",
            "waf-regional:getSqlInjectionMatchSet",
            "waf-regional:getWebACL",
            "waf-regional:getWebACLForResource",
            "waf-regional:listActivatedRulesInRuleGroup",
            "waf-regional:listByteMatchSets",
            "waf-regional:listGeoMatchSets",
            "waf-regional:listIPSets",
            "waf-regional:listLoggingConfigurations",
            "waf-regional:listRateBasedRules",
            "waf-regional:listRegexMatchSets",
            "waf-regional:listRegexPatternSets",
            "waf-regional:listResourcesForWebACL",
            "waf-regional:listRuleGroups",
            "waf-regional:listRules",
            "waf-regional:listSqlInjectionMatchSets",
            "waf-regional:listWebACLs",
            "waf:getByteMatchSet",
            "waf:getChangeTokenStatus",
            "waf:getGeoMatchSet",
            "waf:getIPSet",
            "waf:getLoggingConfiguration",
            "waf:getRateBasedRule",
            "waf:getRegexMatchSet",
            "waf:getRegexPatternSet",
            "waf:getRule",
            "waf:getRuleGroup",
            "waf:getSampledRequests",
            "waf:getSizeConstraintSet",
            "waf:getSqlInjectionMatchSet",
            "waf:getWebACL",
            "waf:getXssMatchSet",
            "waf:listActivatedRulesInRuleGroup",
            "waf:listByteMatchSets",
            "waf:listGeoMatchSets",
            "waf:listIPSets",
            "waf:listLoggingConfigurations",
            "waf:listRateBasedRules",
            "waf:listRegexMatchSets",
            "waf:listRegexPatternSets",
            "waf:listRuleGroups",
            "waf:listRules",
            "waf:listSizeConstraintSets",
            "waf:listSqlInjectionMatchSets",
            "waf:listWebACLs",
            "waf:listXssMatchSets",
            "wafv2:checkCapacity",
            "wafv2:describeManagedRuleGroup",
            "wafv2:getIPSet",
            "wafv2:getLoggingConfiguration",
            "wafv2:getPermissionPolicy",
            "wafv2:getRateBasedStatementManagedKeys",
            "wafv2:getRegexPatternSet",
            "wafv2:getRuleGroup",
            "wafv2:getSampledRequests",
            "wafv2:getWebACL",
            "wafv2:getWebACLForResource",
            "wafv2:listAvailableManagedRuleGroups",
            "wafv2:listIPSets",
            "wafv2:listLoggingConfigurations",
            "wafv2:listRegexPatternSets",
            "wafv2:listResourcesForWebACL",
            "wafv2:listRuleGroups",
            "wafv2:listTagsForResource",
            "wafv2:listWebACLs",
            "workdocs:checkAlias",
            "workdocs:describeAvailableDirectories",
            "workdocs:describeInstances",
            "workmail:describeGroup",
            "workmail:describeOrganization",
            "workmail:describeResource",
            "workmail:describeUser",
            "workmail:listAliases",
            "workmail:listGroupMembers",
            "workmail:listGroups",
            "workmail:listMailboxPermissions",
            "workmail:listOrganizations",
            "workmail:listResourceDelegates",
            "workmail:listResources",
            "workmail:listUsers",
            "workspaces-web:getBrowserSettings",
            "workspaces-web:getIdentityProvider",
            "workspaces-web:getNetworkSettings",
            "workspaces-web:getPortal",
            "workspaces-web:getPortalServiceProviderMetadata",
            "workspaces-web:getTrustStoreCertificate",
            "workspaces-web:getUserSettings",
            "workspaces-web:listBrowserSettings",
            "workspaces-web:listIdentityProviders",
            "workspaces-web:listNetworkSettings",
            "workspaces-web:listPortals",
            "workspaces-web:listTagsForResource",
            "workspaces-web:listTrustStoreCertificates",
            "workspaces-web:listTrustStores",
            "workspaces-web:listUserSettings",
            "workspaces:describeAccount",
            "workspaces:describeAccountModifications",
            "workspaces:describeIpGroups",
            "workspaces:describeTags",
            "workspaces:describeWorkspaceBundles",
            "workspaces:describeWorkspaceDirectories",
            "workspaces:describeWorkspaceImages",
            "workspaces:describeWorkspaces",
            "workspaces:describeWorkspacesConnectionStatus"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ],
          "Sid": "AWSSupportActions"
        },
        {
          "Action": [
            "apigateway:GET"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:apigateway:*::/account",
            "arn:aws:apigateway:*::/apis",
            "arn:aws:apigateway:*::/apis/*",
            "arn:aws:apigateway:*::/apis/*/authorizers",
            "arn:aws:apigateway:*::/apis/*/authorizers/*",
            "arn:aws:apigateway:*::/apis/*/deployments",
            "arn:aws:apigateway:*::/apis/*/deployments/*",
            "arn:aws:apigateway:*::/apis/*/integrations",
            "arn:aws:apigateway:*::/apis/*/integrations/*",
            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
            "arn:aws:apigateway:*::/apis/*/models",
            "arn:aws:apigateway:*::/apis/*/models/*",
            "arn:aws:apigateway:*::/apis/*/routes",
            "arn:aws:apigateway:*::/apis/*/routes/*",
            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
            "arn:aws:apigateway:*::/apis/*/stages",
            "arn:aws:apigateway:*::/apis/*/stages/*",
            "arn:aws:apigateway:*::/clientcertificates",
            "arn:aws:apigateway:*::/clientcertificates/*",
            "arn:aws:apigateway:*::/domainnames",
            "arn:aws:apigateway:*::/domainnames/*",
            "arn:aws:apigateway:*::/domainnames/*/apimappings",
            "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
            "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
            "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
            "arn:aws:apigateway:*::/restapis",
            "arn:aws:apigateway:*::/restapis/*",
            "arn:aws:apigateway:*::/restapis/*/authorizers",
            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
            "arn:aws:apigateway:*::/restapis/*/deployments",
            "arn:aws:apigateway:*::/restapis/*/deployments/*",
            "arn:aws:apigateway:*::/restapis/*/models",
            "arn:aws:apigateway:*::/restapis/*/models/*",
            "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
            "arn:aws:apigateway:*::/restapis/*/resources",
            "arn:aws:apigateway:*::/restapis/*/resources/*",
            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
            "arn:aws:apigateway:*::/restapis/*/stages",
            "arn:aws:apigateway:*::/restapis/*/stages/*",
            "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
            "arn:aws:apigateway:*::/usageplans",
            "arn:aws:apigateway:*::/usageplans/*",
            "arn:aws:apigateway:*::/vpclinks",
            "arn:aws:apigateway:*::/vpclinks/*"
          ],
          "Sid": "AWSSupportAPIGatewayAccess"
        },
        {
          "Action": [
            "iam:DeleteRole"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
          ],
          "Sid": "AWSSupportDeleteRoleAccess"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v33"
  },
  "UpdateDate": "2023-12-07T01:43:36Z"
}
