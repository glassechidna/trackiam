{
  "Arn": "arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy",
  "CreateDate": "2018-03-28T23:01:12Z",
  "DefaultVersionId": "v27",
  "IsAttachable": true,
  "Path": "/aws-service-role/",
  "PolicyId": "ANPAI62NTGYJB446ACUEA",
  "PolicyName": "FMSServiceRolePolicy",
  "PolicyVersion": {
    "CreateDate": "2023-02-03T23:53:37Z",
    "Document": {
      "Statement": [
        {
          "Action": "ec2:CreateTags",
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:subnet/*"
          ]
        },
        {
          "Action": "ec2:CreateTags",
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            },
            "StringEquals": {
              "ec2:CreateAction": "CreateRouteTable"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:route-table/*"
        },
        {
          "Action": "ec2:CreateTags",
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            },
            "StringEquals": {
              "ec2:CreateAction": "CreateVpcEndpoint"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:vpc-endpoint/*"
          ]
        },
        {
          "Action": "ec2:CreateVpcEndpoint",
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/FMManaged": [
                "true"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:vpc-endpoint/*"
          ]
        },
        {
          "Action": "ec2:DeleteRouteTable",
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:route-table/*"
        },
        {
          "Action": "iam:CreateServiceLinkedRole",
          "Condition": {
            "StringEquals": {
              "iam:AWSServiceName": [
                "network-firewall.amazonaws.com",
                "shield.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": "ram:CreateResourceShare",
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            },
            "StringEquals": {
              "aws:RequestTag/FMManaged": [
                "true"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:CreateTags"
          ],
          "Condition": {
            "StringEquals": {
              "ec2:CreateAction": "CreateSecurityGroup"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ]
        },
        {
          "Action": [
            "ec2:CreateTags",
            "ec2:DeleteTags"
          ],
          "Condition": {
            "StringLike": {
              "aws:ResourceTag/FMManaged": "*"
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:security-group/*"
          ]
        },
        {
          "Action": [
            "ec2:DeleteVpcEndpoints"
          ],
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
        },
        {
          "Action": [
            "network-firewall:DeleteFirewall",
            "network-firewall:DeleteFirewallPolicy"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "network-firewall:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ram:AssociateResourceShare",
            "ram:DeleteResourceShare",
            "ram:UpdateResourceShare"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:ram:*:*:resource-share/*"
        },
        {
          "Action": [
            "ram:TagResource"
          ],
          "Condition": {
            "ForAllValues:StringEquals": {
              "aws:TagKeys": [
                "FMManaged",
                "Name"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ram:*:*:resource-share/*"
          ]
        },
        {
          "Action": [
            "route53resolver:AssociateFirewallRuleGroup",
            "route53resolver:TagResource"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:route53resolver:*:*:firewall-rule-group-association/*"
        },
        {
          "Action": [
            "route53resolver:DisassociateFirewallRuleGroup",
            "route53resolver:UpdateFirewallRuleGroupAssociation"
          ],
          "Condition": {
            "StringEquals": {
              "aws:ResourceTag/FMManaged": "true"
            }
          },
          "Effect": "Allow",
          "Resource": "arn:aws:route53resolver:*:*:firewall-rule-group-association/*"
        },
        {
          "Action": "ec2:CreateVpcEndpoint",
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:subnet/*",
            "arn:aws:ec2:*:*:vpc/*"
          ]
        },
        {
          "Action": "iam:GetRole",
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "apigateway:SetWebACL",
            "elasticloadbalancing:SetSecurityGroups",
            "elasticloadbalancing:SetWebACL",
            "waf-regional:AssociateWebACL",
            "waf-regional:DeleteWebACL",
            "waf-regional:DisassociateWebACL",
            "waf-regional:GetRuleGroup",
            "waf-regional:GetWebACL",
            "waf-regional:ListResourcesForWebACL",
            "waf-regional:ListSubscribedRuleGroups",
            "waf-regional:ListTagsForResource",
            "waf-regional:UpdateWebACL",
            "waf:DeleteWebACL",
            "waf:GetRuleGroup",
            "waf:GetWebACL",
            "waf:ListSubscribedRuleGroups",
            "waf:ListTagsForResource",
            "waf:UpdateWebACL"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:apigateway:*::/restapis/*/stages/*",
            "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*",
            "arn:aws:waf-regional:*:*:rulegroup/*",
            "arn:aws:waf-regional:*:*:webacl/*",
            "arn:aws:waf:*:*:rulegroup/*",
            "arn:aws:waf:*:*:webacl/*"
          ]
        },
        {
          "Action": [
            "cloudfront:GetDistribution",
            "cloudfront:ListDistributions",
            "cloudfront:ListDistributionsByWebACLId",
            "cloudfront:UpdateDistribution"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "cloudfront:ListTagsForResource"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "config:DeleteConfigRule",
            "config:DescribeComplianceByConfigRule",
            "config:GetComplianceDetailsByConfigRule",
            "config:PutConfigRule",
            "config:StartConfigRulesEvaluation"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/fms.amazonaws.com/*"
        },
        {
          "Action": [
            "config:DescribeConfigRuleEvaluationStatus",
            "config:DescribeConfigRules",
            "organizations:DescribeAccount",
            "organizations:DescribeOrganization",
            "organizations:DescribeOrganizationalUnit",
            "organizations:ListAWSServiceAccessForOrganization",
            "organizations:ListAccounts",
            "organizations:ListChildren",
            "organizations:ListOrganizationalUnitsForParent",
            "organizations:ListParents",
            "organizations:ListRoots"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        },
        {
          "Action": [
            "config:DescribeConfigurationRecorderStatus",
            "config:DescribeConfigurationRecorders",
            "config:DescribeDeliveryChannelStatus",
            "config:DescribeDeliveryChannels",
            "config:GetComplianceSummaryByConfigRule",
            "config:GetDiscoveredResourceCounts",
            "config:PutConfigurationRecorder",
            "config:PutDeliveryChannel",
            "config:PutEvaluations",
            "config:SelectResourceConfig",
            "config:StartConfigurationRecorder"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:AssociateRouteTable",
            "ec2:CreateRouteTable",
            "ec2:CreateSubnet",
            "ec2:DeleteSubnet",
            "ec2:DisassociateRouteTable",
            "ec2:ReplaceRouteTableAssociation"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:DeleteSecurityGroup",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress",
            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
            "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:ec2:*:*:instance/*",
            "arn:aws:ec2:*:*:network-interface/*",
            "arn:aws:ec2:*:*:security-group/*"
          ]
        },
        {
          "Action": [
            "ec2:CreateSecurityGroup",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSecurityGroupReferences",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeStaleSecurityGroups",
            "ec2:DescribeVpcPeeringConnections",
            "ec2:DescribeVpcs",
            "ec2:ModifyNetworkInterfaceAttribute"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        },
        {
          "Action": [
            "ec2:DescribeAddresses",
            "elasticloadbalancing:DescribeLoadBalancers",
            "shield:CreateProtection",
            "shield:CreateSubscription",
            "shield:DeleteProtection",
            "shield:DescribeDRTAccess",
            "shield:DescribeEmergencyContactSettings",
            "shield:DescribeProtection",
            "shield:DescribeSubscription",
            "shield:DisableApplicationLayerAutomaticResponse",
            "shield:EnableApplicationLayerAutomaticResponse",
            "shield:GetSubscriptionState",
            "shield:ListAttacks",
            "shield:ListProtections",
            "shield:UpdateApplicationLayerAutomaticResponse",
            "shield:UpdateEmergencyContactSettings"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeInternetGateways",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSubnets",
            "ec2:DescribeTags",
            "ec2:DescribeVpcEndpoints"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "ec2:DescribeInstances",
            "ec2:DescribeNetworkInterfaceAttribute"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
            "elasticloadbalancing:DescribeTags"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "iam:DeleteServiceLinkedRole",
            "iam:GetServiceLinkedRoleDeletionStatus"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:iam::*:role/aws-service-role/fms.amazonaws.com/AWSServiceRoleForFMS"
          ]
        },
        {
          "Action": [
            "logs:CreateLogDelivery",
            "logs:DeleteLogDelivery",
            "logs:GetLogDelivery",
            "logs:ListLogDeliveries",
            "logs:UpdateLogDelivery"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "network-firewall:AssociateFirewallPolicy",
            "network-firewall:AssociateSubnets",
            "network-firewall:CreateFirewall",
            "network-firewall:CreateFirewallPolicy",
            "network-firewall:DeleteResourcePolicy",
            "network-firewall:DescribeFirewall",
            "network-firewall:DescribeFirewallPolicy",
            "network-firewall:DescribeLoggingConfiguration",
            "network-firewall:DescribeResourcePolicy",
            "network-firewall:DescribeRuleGroup",
            "network-firewall:DisassociateSubnets",
            "network-firewall:ListFirewallPolicies",
            "network-firewall:ListFirewalls",
            "network-firewall:ListRuleGroups",
            "network-firewall:PutResourcePolicy",
            "network-firewall:UpdateFirewallDeleteProtection",
            "network-firewall:UpdateFirewallPolicy",
            "network-firewall:UpdateFirewallPolicyChangeProtection",
            "network-firewall:UpdateLoggingConfiguration",
            "network-firewall:UpdateSubnetChangeProtection"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "route53resolver:GetFirewallRuleGroup",
            "route53resolver:GetFirewallRuleGroupAssociation",
            "route53resolver:GetFirewallRuleGroupPolicy",
            "route53resolver:ListFirewallRuleGroupAssociations",
            "route53resolver:ListFirewallRuleGroups",
            "route53resolver:ListTagsForResource",
            "route53resolver:PutFirewallRuleGroupPolicy"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "waf-regional:CreateWebACL",
            "waf-regional:GetChangeToken",
            "waf-regional:GetWebACLForResource",
            "waf:CreateWebACL",
            "waf:GetChangeToken"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:waf-regional:*:*:*",
            "arn:aws:waf:*:*:*"
          ]
        },
        {
          "Action": [
            "waf-regional:DeletePermissionPolicy",
            "waf-regional:GetPermissionPolicy",
            "waf-regional:PutPermissionPolicy",
            "waf:DeletePermissionPolicy",
            "waf:GetPermissionPolicy",
            "waf:PutPermissionPolicy"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:waf-regional:*:*:rulegroup/*",
            "arn:aws:waf-regional:*:*:webacl/*",
            "arn:aws:waf:*:*:rulegroup/*",
            "arn:aws:waf:*:*:webacl/*"
          ]
        },
        {
          "Action": [
            "wafv2:AssociateWebACL",
            "wafv2:DeleteWebACL",
            "wafv2:DisassociateFirewallManager",
            "wafv2:DisassociateWebACL",
            "wafv2:GetWebACL",
            "wafv2:ListResourcesForWebACL",
            "wafv2:ListTagsForResource",
            "wafv2:TagResource",
            "wafv2:UntagResource"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:wafv2:*:*:global/webacl/*",
            "arn:aws:wafv2:*:*:regional/webacl/*"
          ]
        },
        {
          "Action": [
            "wafv2:CreateWebACL",
            "wafv2:DeleteFirewallManagerRuleGroups",
            "wafv2:PutFirewallManagerRuleGroups",
            "wafv2:UpdateWebACL"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:wafv2:*:*:global/ipset/*",
            "arn:aws:wafv2:*:*:global/managedruleset/*",
            "arn:aws:wafv2:*:*:global/regexpatternset/*",
            "arn:aws:wafv2:*:*:global/rulegroup/*",
            "arn:aws:wafv2:*:*:global/webacl/*",
            "arn:aws:wafv2:*:*:regional/ipset/*",
            "arn:aws:wafv2:*:*:regional/managedruleset/*",
            "arn:aws:wafv2:*:*:regional/regexpatternset/*",
            "arn:aws:wafv2:*:*:regional/rulegroup/*",
            "arn:aws:wafv2:*:*:regional/webacl/*"
          ]
        },
        {
          "Action": [
            "wafv2:DeleteLoggingConfiguration",
            "wafv2:GetLoggingConfiguration",
            "wafv2:ListLoggingConfigurations",
            "wafv2:PutLoggingConfiguration"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:wafv2:*:*:global/webacl/*",
            "arn:aws:wafv2:*:*:regional/webacl/*"
          ]
        },
        {
          "Action": [
            "wafv2:DeletePermissionPolicy",
            "wafv2:GetPermissionPolicy",
            "wafv2:PutPermissionPolicy"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:wafv2:*:*:global/rulegroup/*",
            "arn:aws:wafv2:*:*:regional/rulegroup/*"
          ]
        },
        {
          "Action": [
            "wafv2:GetWebACLForResource"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:wafv2:*:*:regional/webacl/*"
          ]
        },
        {
          "Action": [
            "ram:GetResourceShareAssociations",
            "ram:GetResourceShares"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "ram"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v27"
  },
  "UpdateDate": "2023-02-03T23:53:37Z"
}
